<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>auhanjie&#39;s Blog</title>
  
  <subtitle>ad astra per aspera</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2018-08-15T03:14:55.963Z</updated>
  <id>/</id>
  
  <author>
    <name>auhanjie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人简历</title>
    <link href="/2018/08/15/resume/"/>
    <id>/2018/08/15/resume/</id>
    <published>2018-08-15T13:37:00.000Z</published>
    <updated>2018-08-15T03:14:55.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><ul><li>手机：1820206<em>*</em></li><li>Email：*@gmail.com</li><li>QQ：42417658*</li></ul><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><ul><li>黄汉杰/男/1991 </li><li>本科/广州大学计算机系</li><li>工作年限：1年</li><li>技术博客：<a href="http://auhanjie.github.io" target="_blank" rel="noopener">http://auhanjie.github.io</a> </li><li>Github：<a href="http://github.com/auhanjie" target="_blank" rel="noopener">http://github.com/auhanjie</a></li><li>期望职位：JAVA初级程序员</li><li>期望薪资：税前月薪4k，特别喜欢的公司可例外</li><li>期望城市：珠海，深圳，广州</li><li>获奖证经历：2016-2017 全国大学英语四级考试514分/2016-2017 获得过校级一等奖学金，并被评为优秀大学生</li></ul><h1 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h1><p>2015/09~2017/06，广州大学 计算机科学与技术专业，获得学士学位<br>2010/09~2013/06，广东科学技术职业学院 软体技术专业，大专毕业</p><h1 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h1><p>2016/09~2016/10 实习生 广州静远科技开发有限公司 从事FOXTABLE软体开发工作，开发能耗统计分析系统，认真完成项目中的每一项任务。 </p><p>2013/07~2014/07 Java软件开发工程师 易达通网络科技公司 从事Linux环境下的Java软件软件开发工作，工作期间，认真完成项目中的每一项任务。</p><p>2013/02~2013/06 JAVA WEB实习生 珠海联迪软体系统有限公司 从事java web开发，认真完成项目中的每一项任务。实习期间，参与开发清远市信访前后端系统。</p><h2 id="易达通网络科技公司（-2013年7月-2014年7月-）"><a href="#易达通网络科技公司（-2013年7月-2014年7月-）" class="headerlink" title="易达通网络科技公司（ 2013年7月 ~ 2014年7月 ）"></a>易达通网络科技公司（ 2013年7月 ~ 2014年7月 ）</h2><h3 id="广州银联的代收付backend系统"><a href="#广州银联的代收付backend系统" class="headerlink" title="广州银联的代收付backend系统"></a>广州银联的代收付backend系统</h3><p>在本项目中本人是高效的执行者角色。本人独立完成了整个项目的数据库索引优化工作，并参与开发与测试等环节中。  此系统整体采用MVC模式的Spring框架，持久层使用的是Spring的HibernateTemplate实现，数据源利用的是SpringIoC注入；模型层严格按照JavaBean规范要求；用Spring进行流程的控制，并实现了国际化，JSP用纯标签进行页面显示。为达到用户名唯一的目的用户注册采用Ajax技术进行后台校验。运用SpringIoC的注入对各层解耦，大大提高了程序的可扩展性，易于维护。</p><h3 id="SMS-短信收发backend系统"><a href="#SMS-短信收发backend系统" class="headerlink" title="SMS-短信收发backend系统"></a>SMS-短信收发backend系统</h3><p>该系统主要功能是SMS是个集多种短讯业务管理功能于体的多功能短讯服务运营平台，具有稳定可 靠、模组化、开放性、灵活性等特点。Web SMS系统需安装任何软体，即可于上轻松管理客户名单及 发送短讯，既可加强与客户的联系，可减低市场推及政上的资源及成本，是最佳的通讯及宣传 具。2013年，我参与了SMS-短信收发backend系统的开发。</p><p>作为核心程序员之一，我不但完成了发送短信界面设计、调度队列的开发工作，更提出了高效的查询下拉列表插件，通过个性化提升了操作员查询体验。 在该系统上线后，发送短信性能从100多条提升到1000多条。</p><h3 id="其他项目"><a href="#其他项目" class="headerlink" title="其他项目"></a>其他项目</h3><p>easylink好易联支付平台backend系统<br>LBN易联通支付平台backend系统<br>SMC商户管理backend系统<br>能耗统计分析系统项⽬<br>清远市信访backend管理系统</p><h1 id="技能清单"><a href="#技能清单" class="headerlink" title="技能清单"></a>技能清单</h1><p>以下均为我熟练使用的技能</p><ul><li>Web开发：JSP/PHP</li><li>Web框架：Hibernate/Struts2/StringMvc/ThinkPHP</li><li>前端框架：Bootstrap/Jquery/HTML5</li><li>数据库相关：MySQL/Oracle</li><li>版本管理、文档和自动化部署工具：Svn/Git/Maven</li><li>单元测试：Junit4</li></ul><h1 id="个⼈评价"><a href="#个⼈评价" class="headerlink" title="个⼈评价"></a>个⼈评价</h1><p>谦虚、谨慎而富有挑战精神，希望您能给我一个展示自我的机会。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;联系方式&quot;&gt;&lt;a href=&quot;#联系方式&quot; class=&quot;headerlink&quot; title=&quot;联系方式&quot;&gt;&lt;/a&gt;联系方式&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;手机：1820206&lt;em&gt;*&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Email：*@gmail.com&lt;/li&gt;
&lt;li
      
    
    </summary>
    
      <category term="个人简历" scheme="/categories/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    
    
      <category term="个人简历" scheme="/tags/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>6-1 单链表逆转（20 分）</title>
    <link href="/2018/05/06/shujujiegou6-1/"/>
    <id>/2018/05/06/shujujiegou6-1/</id>
    <published>2018-05-06T01:26:00.000Z</published>
    <updated>2018-05-06T01:29:24.143Z</updated>
    
    <content type="html"><![CDATA[<h4 id="6-1-单链表逆转（20-分）"><a href="#6-1-单链表逆转（20-分）" class="headerlink" title="6-1 单链表逆转（20 分）"></a>6-1 单链表逆转（20 分）</h4><p>本题要求实现一个函数，将给定的单链表逆转。</p><h3 id="函数接口定义："><a href="#函数接口定义：" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List Reverse( List L );</span><br></pre></td></tr></table></figure><p>其中<code>List</code>结构定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data; <span class="comment">/* 存储结点数据 */</span></span><br><span class="line">    PtrToNode   Next; <span class="comment">/* 指向下一个结点的指针 */</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List; <span class="comment">/* 定义单链表类型 */</span></span><br></pre></td></tr></table></figure><p><code>L</code>是给定单链表，函数<code>Reverse</code>要返回被逆转后的链表。</p><h3 id="裁判测试程序样例："><a href="#裁判测试程序样例：" class="headerlink" title="裁判测试程序样例："></a>裁判测试程序样例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    PtrToNode   Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Read</span><span class="params">()</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">( List L )</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Reverse</span><span class="params">( List L )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List L1, L2;</span><br><span class="line">    L1 = Read();</span><br><span class="line">    L2 = Reverse(L1);</span><br><span class="line">    Print(L1);</span><br><span class="line">    Print(L2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 4 5 2</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2 5 4 3 1</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    PtrToNode   Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Read</span><span class="params">()</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">( List L )</span></span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">Reverse</span><span class="params">( List L )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List L1, L2;</span><br><span class="line">    L1 = Read();</span><br><span class="line">    L2 = Reverse(L1);</span><br><span class="line">    Print(L1);</span><br><span class="line">    Print(L2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">List <span class="title">Read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PtrToNode head=<span class="literal">NULL</span>;</span><br><span class="line">PtrToNode <span class="built_in">list</span>=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len);</span><br><span class="line"><span class="keyword">if</span>(len==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">head=(PtrToNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">head-&gt;Data=num;</span><br><span class="line">head-&gt;Next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">list</span>=head;</span><br><span class="line">len--;</span><br><span class="line"><span class="keyword">while</span>(len)</span><br><span class="line">&#123;</span><br><span class="line">     PtrToNode node=(PtrToNode)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">node-&gt;Data=num;</span><br><span class="line">node-&gt;Next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">list</span>-&gt;Next=node;</span><br><span class="line"><span class="built_in">list</span>=node;</span><br><span class="line">len--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">( List L )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L==<span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line"><span class="keyword">while</span>(L!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,L-&gt;Data);</span><br><span class="line">    L=L-&gt;Next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">List <span class="title">Reverse</span><span class="params">( List L )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L==<span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">PtrToNode l1=<span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//PtrToNode l3=L;</span></span><br><span class="line">PtrToNode l2=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(L!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">l1=L-&gt;Next;</span><br><span class="line">L-&gt;Next=l2;</span><br><span class="line">l2=L;</span><br><span class="line">L=l1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;6-1-单链表逆转（20-分）&quot;&gt;&lt;a href=&quot;#6-1-单链表逆转（20-分）&quot; class=&quot;headerlink&quot; title=&quot;6-1 单链表逆转（20 分）&quot;&gt;&lt;/a&gt;6-1 单链表逆转（20 分）&lt;/h4&gt;&lt;p&gt;本题要求实现一个函数，将给定的单链表逆转。&lt;/p&gt;
&lt;h3 id=&quot;函数接口定义：&quot;&gt;&lt;a href=&quot;#函数接口定义：&quot; class=&quot;headerlink&quot; title=&quot;函数接口定义：&quot;&gt;&lt;/a&gt;函数接口定义：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List Reverse( List L );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中&lt;code&gt;List&lt;/code&gt;结构定义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Node&lt;/span&gt; *&lt;span class=&quot;title&quot;&gt;PtrToNode&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Node&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ElementType Data; &lt;span class=&quot;comment&quot;&gt;/* 存储结点数据 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PtrToNode   Next; &lt;span class=&quot;comment&quot;&gt;/* 指向下一个结点的指针 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; PtrToNode List; &lt;span class=&quot;comment&quot;&gt;/* 定义单链表类型 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;L&lt;/code&gt;是给定单链表，函数&lt;code&gt;Reverse&lt;/code&gt;要返回被逆转后的链表。&lt;/p&gt;
&lt;h3 id=&quot;裁判测试程序样例：&quot;&gt;&lt;a href=&quot;#裁判测试程序样例：&quot; class=&quot;headerlink&quot; title=&quot;裁判测试程序样例：&quot;&gt;&lt;/a&gt;裁判测试程序样例：&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ElementType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Node&lt;/span&gt; *&lt;span class=&quot;title&quot;&gt;PtrToNode&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Node&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ElementType Data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PtrToNode   Next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; PtrToNode List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;List &lt;span class=&quot;title&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/* 细节在此不表 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Print&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( List L )&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/* 细节在此不表 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;List &lt;span class=&quot;title&quot;&gt;Reverse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( List L )&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    List L1, L2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L1 = Read();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L2 = Reverse(L1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Print(L1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Print(L2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 你的代码将被嵌在这里 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 3 4 5 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 5 4 3 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="数据结构与算法题目集（中文）" scheme="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86%EF%BC%88%E4%B8%AD%E6%96%87%EF%BC%89/"/>
    
    
      <category term="数据结构与算法题目集（中文）" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86%EF%BC%88%E4%B8%AD%E6%96%87%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>7-38 数列求和-加强版（20 分）</title>
    <link href="/2018/04/15/jichu7-38/"/>
    <id>/2018/04/15/jichu7-38/</id>
    <published>2018-04-15T13:38:00.000Z</published>
    <updated>2018-04-15T14:12:51.549Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-38-数列求和-加强版（20-分）"><a href="#7-38-数列求和-加强版（20-分）" class="headerlink" title="7-38 数列求和-加强版（20 分）"></a>7-38 数列求和-加强版（20 分）</h4><p>给定某数字A（1≤A≤9）以及非负整数N（0≤N≤100000），求数列之和S=A+AA+AAA+⋯+AA⋯A（N个A）。例如A=1, N=3时，S=1+11+111=123。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入数字A与非负整数N。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出其N项数列之和S的值。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 3</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt; </span></span></span><br><span class="line"><span class="keyword">int</span> num[<span class="number">1000000</span>]; </span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> <span class="keyword">int</span> A; </span><br><span class="line"> <span class="keyword">int</span> N;</span><br><span class="line"> <span class="keyword">int</span> i; </span><br><span class="line"> <span class="keyword">int</span> j; </span><br><span class="line"> <span class="keyword">int</span> t; </span><br><span class="line"> <span class="keyword">int</span> flag; </span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;A,&amp;N); </span><br><span class="line"> <span class="keyword">if</span>(N == <span class="number">0</span>) </span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"0\n"</span>); </span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line"> &#123; </span><br><span class="line">flag = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span>(i=N, j=<span class="number">0</span>; i&gt;=<span class="number">1</span>; i--, j++) </span><br><span class="line"> &#123; </span><br><span class="line">t = A*i + flag; </span><br><span class="line">flag = t / <span class="number">10</span>; </span><br><span class="line">num[j] = t % <span class="number">10</span>; </span><br><span class="line">&#125; </span><br><span class="line"> <span class="keyword">if</span>(flag &gt; <span class="number">0</span>)</span><br><span class="line"> &#123; </span><br><span class="line"> num[j] = flag; </span><br><span class="line"> j++; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">for</span>(i=j<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) </span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,num[i]); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-38-数列求和-加强版（20-分）&quot;&gt;&lt;a href=&quot;#7-38-数列求和-加强版（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-38 数列求和-加强版（20 分）&quot;&gt;&lt;/a&gt;7-38 数列求和-加强版（20 分）&lt;/h4&gt;&lt;p&gt;给定某数字A（1≤A≤9）以及非负整数N（0≤N≤100000），求数列之和S=A+AA+AAA+⋯+AA⋯A（N个A）。例如A=1, N=3时，S=1+11+111=123。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入数字A与非负整数N。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;输出其N项数列之和S的值。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-37 整数分解为若干项之和（20 分）</title>
    <link href="/2018/04/15/jichu7-37/"/>
    <id>/2018/04/15/jichu7-37/</id>
    <published>2018-04-15T13:37:00.000Z</published>
    <updated>2018-04-15T14:13:00.889Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-37-整数分解为若干项之和（20-分）"><a href="#7-37-整数分解为若干项之和（20-分）" class="headerlink" title="7-37 整数分解为若干项之和（20 分）"></a>7-37 整数分解为若干项之和（20 分）</h4><p>将一个正整数N分解成几个正整数相加，可以有多种分解方法，例如7=6+1，7=5+2，7=5+1+1，…。编程求出正整数N的所有整数分解式子。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个输入包含一个测试用例，即正整数N (0&lt;N≤30)。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按递增顺序输出N的所有整数分解式子。递增顺序是指：对于两个分解序列N1={n1,n2,⋯}和N2={m1,m2,⋯}，若存在i使得n1=m1,⋯,ni=mi，但是ni+1&lt;mi+1,则N1序列必定在N2序列之前输出。每个式子由小到大相加，式子间用分号隔开，且每输出4个式子后换行。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">7=1+1+1+1+1+1+1;7=1+1+1+1+1+2;7=1+1+1+1+3;7=1+1+1+2+2</span><br><span class="line">7=1+1+1+4;7=1+1+2+3;7=1+1+5;7=1+2+2+2</span><br><span class="line">7=1+2+4;7=1+3+3;7=1+6;7=2+2+3</span><br><span class="line">7=2+5;7=3+4;7=7</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">深度优先搜索</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> item[<span class="number">31</span>];</span><br><span class="line"><span class="keyword">int</span> top=<span class="number">0</span>;<span class="comment">/*当前数组元素个数*/</span></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;<span class="comment">/*累加和*/</span></span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">/*所给的数*/</span></span><br><span class="line"><span class="keyword">int</span> k;<span class="comment">/*记录每行输出是否满了四个*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(sum==n)&#123;</span><br><span class="line">       k++;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"%d=%d"</span>,n,item[<span class="number">0</span>]);</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=top<span class="number">-1</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"+%d"</span>,item[i]);</span><br><span class="line">       <span class="keyword">if</span>(k%<span class="number">4</span>==<span class="number">0</span>||top==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">";"</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(sum&gt;n)&#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=number;i&lt;=n;i++)&#123;</span><br><span class="line">       sum=sum+i;</span><br><span class="line">       item[top++]=i;</span><br><span class="line">       dfs(i);</span><br><span class="line">       sum=sum-i;</span><br><span class="line">       top--;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-37-整数分解为若干项之和（20-分）&quot;&gt;&lt;a href=&quot;#7-37-整数分解为若干项之和（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-37 整数分解为若干项之和（20 分）&quot;&gt;&lt;/a&gt;7-37 整数分解为若干项之和（20 分）&lt;/h4&gt;&lt;p&gt;将一个正整数N分解成几个正整数相加，可以有多种分解方法，例如7=6+1，7=5+2，7=5+1+1，…。编程求出正整数N的所有整数分解式子。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;每个输入包含一个测试用例，即正整数N (0&amp;lt;N≤30)。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;按递增顺序输出N的所有整数分解式子。递增顺序是指：对于两个分解序列N1={n1,n2,⋯}和N2={m1,m2,⋯}，若存在i使得n1=m1,⋯,ni=mi，但是ni+1&amp;lt;mi+1,则N1序列必定在N2序列之前输出。每个式子由小到大相加，式子间用分号隔开，且每输出4个式子后换行。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;7=1+1+1+1+1+1+1;7=1+1+1+1+1+2;7=1+1+1+1+3;7=1+1+1+2+2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7=1+1+1+4;7=1+1+2+3;7=1+1+5;7=1+2+2+2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7=1+2+4;7=1+3+3;7=1+6;7=2+2+3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7=2+5;7=3+4;7=7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-36 复数四则运算（15 分）</title>
    <link href="/2018/04/15/jichu7-36/"/>
    <id>/2018/04/15/jichu7-36/</id>
    <published>2018-04-15T13:36:00.000Z</published>
    <updated>2018-04-15T14:09:42.701Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-36-复数四则运算（15-分）"><a href="#7-36-复数四则运算（15-分）" class="headerlink" title="7-36 复数四则运算（15 分）"></a>7-36 复数四则运算（15 分）</h4><p>本题要求编写程序，计算2个复数的和、差、积、商。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中按照<code>a1 b1 a2 b2</code>的格式给出2个复数C1=<code>a1+b1i</code>和C2=<code>a2+b2i</code>的实部和虚部。题目保证C2不为0。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>分别在4行中按照<code>(a1+b1i) 运算符 (a2+b2i) = 结果</code>的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位。如果结果的实部或者虚部为0，则不输出。如果结果为0，则输出0.0。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3.08 -2.04 5.06</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(2.0+3.1i) + (-2.0+5.1i) = 8.1i</span><br><span class="line">(2.0+3.1i) - (-2.0+5.1i) = 4.0-2.0i</span><br><span class="line">(2.0+3.1i) * (-2.0+5.1i) = -19.7+3.8i</span><br><span class="line">(2.0+3.1i) / (-2.0+5.1i) = 0.4-0.6i</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 -1 -1.01</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1.0+1.0i) + (-1.0-1.0i) = 0.0</span><br><span class="line">(1.0+1.0i) - (-1.0-1.0i) = 2.0+2.0i</span><br><span class="line">(1.0+1.0i) * (-1.0-1.0i) = -2.0i</span><br><span class="line">(1.0+1.0i) / (-1.0-1.0i) = -1.0</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两个复数运算前不变化，但输出时要保留后一位；</span></span><br><span class="line"><span class="comment">//运算结果，由题意，要先保留一位小数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> num1;</span><br><span class="line"><span class="keyword">double</span> num2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> item[<span class="number">4</span>]=<span class="string">"+-*/"</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myprintf</span><span class="params">(<span class="keyword">double</span> num1,<span class="keyword">double</span> num2,<span class="keyword">int</span> flag)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;<span class="comment">//运算结果输出</span></span><br><span class="line"> <span class="keyword">if</span>(num1==<span class="number">0</span>&amp;&amp;num2==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0.0"</span>);</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num1!=<span class="number">0</span>&amp;&amp;num2==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.1f"</span>,num1);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num1==<span class="number">0</span>&amp;&amp;num2!=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.1fi"</span>,num2);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.1f"</span>,num1);</span><br><span class="line"><span class="keyword">if</span>(num2&gt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"+%.1fi"</span>,num2);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.1fi"</span>,num2);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//复数输出</span></span><br><span class="line"><span class="keyword">if</span>(num2&lt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.1f%.1fi"</span>,num1,num2);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.1f+%.1fi"</span>,num1,num2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">simpl</span><span class="params">(<span class="keyword">double</span> num)</span></span>&#123;<span class="comment">//运算结果保留一位小数</span></span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">num=(<span class="keyword">double</span>)<span class="built_in">floor</span>((num+<span class="number">0.05</span>)*<span class="number">10</span>)/<span class="number">10</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num&lt;<span class="number">0</span>)&#123;</span><br><span class="line">num=<span class="built_in">fabs</span>(num);</span><br><span class="line">num=-(<span class="keyword">double</span>)<span class="built_in">floor</span>((num+<span class="number">0.05</span>)*<span class="number">10</span>)/<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getresult</span><span class="params">(struct data cal[],<span class="keyword">int</span> time)</span><span class="comment">//运算</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">double</span> temp1,temp2,temp;</span><br><span class="line"> <span class="keyword">switch</span>(time)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">0</span>:cal[<span class="number">2</span>].num1=cal[<span class="number">0</span>].num1+cal[<span class="number">1</span>].num1;</span><br><span class="line">cal[<span class="number">2</span>].num2=cal[<span class="number">0</span>].num2+cal[<span class="number">1</span>].num2;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">1</span>:cal[<span class="number">2</span>].num1=cal[<span class="number">0</span>].num1-cal[<span class="number">1</span>].num1;</span><br><span class="line">cal[<span class="number">2</span>].num2=cal[<span class="number">0</span>].num2-cal[<span class="number">1</span>].num2;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">2</span>:cal[<span class="number">2</span>].num1=cal[<span class="number">0</span>].num1*cal[<span class="number">1</span>].num1-cal[<span class="number">0</span>].num2*cal[<span class="number">1</span>].num2;</span><br><span class="line">cal[<span class="number">2</span>].num2=cal[<span class="number">0</span>].num1*cal[<span class="number">1</span>].num2+cal[<span class="number">0</span>].num2*cal[<span class="number">1</span>].num1;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">3</span>:temp1=cal[<span class="number">0</span>].num1*cal[<span class="number">1</span>].num1+cal[<span class="number">0</span>].num2*cal[<span class="number">1</span>].num2;</span><br><span class="line">temp2=cal[<span class="number">0</span>].num2*cal[<span class="number">1</span>].num1-cal[<span class="number">0</span>].num1*cal[<span class="number">1</span>].num2;</span><br><span class="line">temp=cal[<span class="number">1</span>].num2*cal[<span class="number">1</span>].num2+cal[<span class="number">1</span>].num1*cal[<span class="number">1</span>].num1;</span><br><span class="line">cal[<span class="number">2</span>].num1=temp1/temp;</span><br><span class="line">cal[<span class="number">2</span>].num2=temp2/temp;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> cal[<span class="number">2</span>].num1=simpl(cal[<span class="number">2</span>].num1);</span><br><span class="line"> cal[<span class="number">2</span>].num2=simpl(cal[<span class="number">2</span>].num2);</span><br><span class="line"> myprintf(cal[<span class="number">2</span>].num1,cal[<span class="number">2</span>].num2,<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span> <span class="title">cal</span>[3];</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;cal[i].num1,&amp;cal[i].num2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">myprintf(cal[<span class="number">0</span>].num1,cal[<span class="number">0</span>].num2,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %c "</span>,item[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">myprintf(cal[<span class="number">1</span>].num1,cal[<span class="number">1</span>].num2,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">") = "</span>);</span><br><span class="line"><span class="comment">//printf(" = ",item[i]);</span></span><br><span class="line">getresult(cal,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-36-复数四则运算（15-分）&quot;&gt;&lt;a href=&quot;#7-36-复数四则运算（15-分）&quot; class=&quot;headerlink&quot; title=&quot;7-36 复数四则运算（15 分）&quot;&gt;&lt;/a&gt;7-36 复数四则运算（15 分）&lt;/h4&gt;&lt;p&gt;本题要求编写程序，计算2个复数的和、差、积、商。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中按照&lt;code&gt;a1 b1 a2 b2&lt;/code&gt;的格式给出2个复数C1=&lt;code&gt;a1+b1i&lt;/code&gt;和C2=&lt;code&gt;a2+b2i&lt;/code&gt;的实部和虚部。题目保证C2不为0。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;分别在4行中按照&lt;code&gt;(a1+b1i) 运算符 (a2+b2i) = 结果&lt;/code&gt;的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位。如果结果的实部或者虚部为0，则不输出。如果结果为0，则输出0.0。&lt;/p&gt;
&lt;h3 id=&quot;输入样例1：&quot;&gt;&lt;a href=&quot;#输入样例1：&quot; class=&quot;headerlink&quot; title=&quot;输入样例1：&quot;&gt;&lt;/a&gt;输入样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2 3.08 -2.04 5.06&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例1：&quot;&gt;&lt;a href=&quot;#输出样例1：&quot; class=&quot;headerlink&quot; title=&quot;输出样例1：&quot;&gt;&lt;/a&gt;输出样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(2.0+3.1i) + (-2.0+5.1i) = 8.1i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2.0+3.1i) - (-2.0+5.1i) = 4.0-2.0i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2.0+3.1i) * (-2.0+5.1i) = -19.7+3.8i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2.0+3.1i) / (-2.0+5.1i) = 0.4-0.6i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入样例2：&quot;&gt;&lt;a href=&quot;#输入样例2：&quot; class=&quot;headerlink&quot; title=&quot;输入样例2：&quot;&gt;&lt;/a&gt;输入样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 1 -1 -1.01&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例2：&quot;&gt;&lt;a href=&quot;#输出样例2：&quot; class=&quot;headerlink&quot; title=&quot;输出样例2：&quot;&gt;&lt;/a&gt;输出样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(1.0+1.0i) + (-1.0-1.0i) = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1.0+1.0i) - (-1.0-1.0i) = 2.0+2.0i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1.0+1.0i) * (-1.0-1.0i) = -2.0i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1.0+1.0i) / (-1.0-1.0i) = -1.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-35 有理数均值（20 分）</title>
    <link href="/2018/04/15/jichu7-35/"/>
    <id>/2018/04/15/jichu7-35/</id>
    <published>2018-04-15T13:34:00.000Z</published>
    <updated>2018-04-15T13:35:32.290Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-35-有理数均值（20-分）"><a href="#7-35-有理数均值（20-分）" class="headerlink" title="7-35 有理数均值（20 分）"></a>7-35 有理数均值（20 分）</h4><p>本题要求编写程序，计算N个有理数的平均值。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出正整数N（≤100）；第二行中按照<code>a1/b1 a2/b2 …</code>的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照<code>a/b</code>的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1/2 1/6 3/6 -5/10</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1/6</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4/3 2/3</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (q==<span class="number">0</span>) <span class="keyword">return</span> p;</span><br><span class="line"><span class="keyword">int</span> r = p%q;</span><br><span class="line"><span class="keyword">return</span> gcd(q,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> N,sumA=<span class="number">0</span>,sumB=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d/%d"</span>,&amp;a,&amp;b);</span><br><span class="line">sumA *= b;</span><br><span class="line">sumA += a*sumB;</span><br><span class="line">sumB *= b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==N<span class="number">-1</span>) sumB*=N;</span><br><span class="line"><span class="keyword">int</span> divisor = gcd(sumA,sumB);</span><br><span class="line">sumA/=divisor;sumB/=divisor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sumA==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sumB==<span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,sumA);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d/%d"</span>,sumA,sumB);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-35-有理数均值（20-分）&quot;&gt;&lt;a href=&quot;#7-35-有理数均值（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-35 有理数均值（20 分）&quot;&gt;&lt;/a&gt;7-35 有理数均值（20 分）&lt;/h4&gt;&lt;p&gt;本题要求编写程序，计算N个有理数的平均值。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入第一行给出正整数N（≤100）；第二行中按照&lt;code&gt;a1/b1 a2/b2 …&lt;/code&gt;的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中按照&lt;code&gt;a/b&lt;/code&gt;的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。&lt;/p&gt;
&lt;h3 id=&quot;输入样例1：&quot;&gt;&lt;a href=&quot;#输入样例1：&quot; class=&quot;headerlink&quot; title=&quot;输入样例1：&quot;&gt;&lt;/a&gt;输入样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1/2 1/6 3/6 -5/10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例1：&quot;&gt;&lt;a href=&quot;#输出样例1：&quot; class=&quot;headerlink&quot; title=&quot;输出样例1：&quot;&gt;&lt;/a&gt;输出样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1/6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入样例2：&quot;&gt;&lt;a href=&quot;#输入样例2：&quot; class=&quot;headerlink&quot; title=&quot;输入样例2：&quot;&gt;&lt;/a&gt;输入样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4/3 2/3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例2：&quot;&gt;&lt;a href=&quot;#输出样例2：&quot; class=&quot;headerlink&quot; title=&quot;输出样例2：&quot;&gt;&lt;/a&gt;输出样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-34 通讯录的录入与显示（10 分）</title>
    <link href="/2018/04/15/jichu7-34/"/>
    <id>/2018/04/15/jichu7-34/</id>
    <published>2018-04-15T13:33:00.000Z</published>
    <updated>2018-04-15T13:34:10.021Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-34-通讯录的录入与显示（10-分）"><a href="#7-34-通讯录的录入与显示（10-分）" class="headerlink" title="7-34 通讯录的录入与显示（10 分）"></a>7-34 通讯录的录入与显示（10 分）</h4><p>通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入N条记录，并且根据要求显示任意某条记录。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出正整数N（≤10）；随后N行，每行按照格式<code>姓名 生日 性别 固话 手机</code>给出一条记录。其中<code>姓名</code>是不超过10个字符、不包含空格的非空字符串；生日按<code>yyyy/mm/dd</code>的格式给出年月日；性别用<code>M</code>表示“男”、<code>F</code>表示“女”；<code>固话</code>和<code>手机</code>均为不超过15位的连续数字，前面有可能出现<code>+</code>。</p><p>在通讯录记录输入完成后，最后一行给出正整数K，并且随后给出K个整数，表示要查询的记录编号（从0到N−1顺序编号）。数字间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一条要查询的记录编号，在一行中按照<code>姓名 固话 手机 性别 生日</code>的格式输出该记录。若要查询的记录不存在，则输出<code>Not Found</code>。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">Chris 1984/03/10 F +86181779452 13707010007</span><br><span class="line">LaoLao 1967/11/30 F 057187951100 +8618618623333</span><br><span class="line">QiaoLin 1980/01/01 M 84172333 10086</span><br><span class="line">2 1 7</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LaoLao 057187951100 +8618618623333 F 1967/11/30</span><br><span class="line">Not Found</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">11</span>];</span><br><span class="line"><span class="keyword">char</span> birthday[<span class="number">11</span>];</span><br><span class="line"><span class="keyword">char</span> sex;</span><br><span class="line"><span class="keyword">char</span> num[<span class="number">17</span>];</span><br><span class="line"><span class="keyword">char</span> phone[<span class="number">17</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;type;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(type* head,<span class="keyword">int</span> N)</span></span>;</span><br><span class="line"><span class="function">type* <span class="title">input</span><span class="params">(<span class="keyword">int</span> N)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">type *head;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="comment">//int i=0,j=0;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">head=input(N);</span><br><span class="line">output(head,N);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">type* <span class="title">input</span><span class="params">(<span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">type *p,*q,*head;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">p=q=(type*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(type));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)    &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s %s %c %s %s\n"</span>,p-&gt;name,p-&gt;birthday,&amp;(p-&gt;sex),p-&gt;num,p-&gt;phone);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)    &#123;</span><br><span class="line">head=p;</span><br><span class="line">&#125;    <span class="keyword">else</span> &#123;</span><br><span class="line">q-&gt;next=p;</span><br><span class="line">&#125;</span><br><span class="line">q=p;</span><br><span class="line">p=(type*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(type));</span><br><span class="line">&#125;</span><br><span class="line">q-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(type* head,<span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line"><span class="keyword">int</span> K,i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K);</span><br><span class="line"><span class="keyword">int</span> a[K];</span><br><span class="line">type *q;</span><br><span class="line"><span class="comment">//p=q=(type*)malloc(sizeof(type));</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;K;i++)    &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;K;i++)    &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;N&amp;&amp;a[i]&gt;=<span class="number">0</span>)    &#123;</span><br><span class="line">q=head;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;a[i];j++)    &#123;</span><br><span class="line">q=q-&gt;next;                </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %s %c %s\n"</span>,q-&gt;name,q-&gt;num,q-&gt;phone,q-&gt;sex,q-&gt;birthday);    </span><br><span class="line">&#125;    <span class="keyword">else</span>    &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Not Found\n"</span>);    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-34-通讯录的录入与显示（10-分）&quot;&gt;&lt;a href=&quot;#7-34-通讯录的录入与显示（10-分）&quot; class=&quot;headerlink&quot; title=&quot;7-34 通讯录的录入与显示（10 分）&quot;&gt;&lt;/a&gt;7-34 通讯录的录入与显示（10 分）&lt;/h4&gt;&lt;p&gt;通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入N条记录，并且根据要求显示任意某条记录。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在第一行给出正整数N（≤10）；随后N行，每行按照格式&lt;code&gt;姓名 生日 性别 固话 手机&lt;/code&gt;给出一条记录。其中&lt;code&gt;姓名&lt;/code&gt;是不超过10个字符、不包含空格的非空字符串；生日按&lt;code&gt;yyyy/mm/dd&lt;/code&gt;的格式给出年月日；性别用&lt;code&gt;M&lt;/code&gt;表示“男”、&lt;code&gt;F&lt;/code&gt;表示“女”；&lt;code&gt;固话&lt;/code&gt;和&lt;code&gt;手机&lt;/code&gt;均为不超过15位的连续数字，前面有可能出现&lt;code&gt;+&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在通讯录记录输入完成后，最后一行给出正整数K，并且随后给出K个整数，表示要查询的记录编号（从0到N−1顺序编号）。数字间以空格分隔。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;对每一条要查询的记录编号，在一行中按照&lt;code&gt;姓名 固话 手机 性别 生日&lt;/code&gt;的格式输出该记录。若要查询的记录不存在，则输出&lt;code&gt;Not Found&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chris 1984/03/10 F +86181779452 13707010007&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LaoLao 1967/11/30 F 057187951100 +8618618623333&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;QiaoLin 1980/01/01 M 84172333 10086&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 1 7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LaoLao 057187951100 +8618618623333 F 1967/11/30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Not Found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-33 有理数加法（15 分）</title>
    <link href="/2018/04/15/jichu7-33/"/>
    <id>/2018/04/15/jichu7-33/</id>
    <published>2018-04-15T13:31:00.000Z</published>
    <updated>2018-04-15T13:32:13.944Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-33-有理数加法（15-分）"><a href="#7-33-有理数加法（15-分）" class="headerlink" title="7-33 有理数加法（15 分）"></a>7-33 有理数加法（15 分）</h4><p>本题要求编写程序，计算两个有理数的和。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中按照<code>a1/b1 a2/b2</code>的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照<code>a/b</code>的格式输出两个有理数的和。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1/3 1/6</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1/2</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4/3 2/3</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fraction</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> a;   <span class="comment">//分子</span></span><br><span class="line"><span class="keyword">int</span> b;  <span class="comment">//分母</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fraction</span> <span class="title">f1</span>, <span class="title">f2</span>, <span class="title">f3</span>;</span></span><br><span class="line"><span class="keyword">int</span> g;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d/%d %d/%d"</span>, &amp;f1.a, &amp;f1.b, &amp;f2.a, &amp;f2.b);</span><br><span class="line">f3.a = f1.a*f2.b + f2.a*f1.b;</span><br><span class="line">f3.b = f1.b*f2.b;</span><br><span class="line">g = gcd(f3.a, f3.b);</span><br><span class="line">f3.a /= g;</span><br><span class="line">f3.b /= g;</span><br><span class="line"><span class="keyword">if</span> (f3.b == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, f3.a);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d/%d"</span>, f3.a, f3.b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = x%y;</span><br><span class="line"><span class="keyword">if</span> (r == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">x = y;</span><br><span class="line">y = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-33-有理数加法（15-分）&quot;&gt;&lt;a href=&quot;#7-33-有理数加法（15-分）&quot; class=&quot;headerlink&quot; title=&quot;7-33 有理数加法（15 分）&quot;&gt;&lt;/a&gt;7-33 有理数加法（15 分）&lt;/h4&gt;&lt;p&gt;本题要求编写程序，计算两个有理数的和。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中按照&lt;code&gt;a1/b1 a2/b2&lt;/code&gt;的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中按照&lt;code&gt;a/b&lt;/code&gt;的格式输出两个有理数的和。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。&lt;/p&gt;
&lt;h3 id=&quot;输入样例1：&quot;&gt;&lt;a href=&quot;#输入样例1：&quot; class=&quot;headerlink&quot; title=&quot;输入样例1：&quot;&gt;&lt;/a&gt;输入样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1/3 1/6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例1：&quot;&gt;&lt;a href=&quot;#输出样例1：&quot; class=&quot;headerlink&quot; title=&quot;输出样例1：&quot;&gt;&lt;/a&gt;输出样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1/2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入样例2：&quot;&gt;&lt;a href=&quot;#输入样例2：&quot; class=&quot;headerlink&quot; title=&quot;输入样例2：&quot;&gt;&lt;/a&gt;输入样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;4/3 2/3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例2：&quot;&gt;&lt;a href=&quot;#输出样例2：&quot; class=&quot;headerlink&quot; title=&quot;输出样例2：&quot;&gt;&lt;/a&gt;输出样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-32 说反话-加强版（20 分）</title>
    <link href="/2018/04/15/jichu7-32/"/>
    <id>/2018/04/15/jichu7-32/</id>
    <published>2018-04-15T13:30:00.000Z</published>
    <updated>2018-04-15T13:30:28.734Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-32-说反话-加强版（20-分）"><a href="#7-32-说反话-加强版（20-分）" class="headerlink" title="7-32 说反话-加强版（20 分）"></a>7-32 说反话-加强版（20 分）</h4><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>测试输入包含一个测试用例，在一行内给出总长度不超过500 000的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用若干个空格分开。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>每个测试用例的输出占一行，输出倒序后的句子，并且保证单词间只有1个空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World   Here I Come</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Come I Here World Hello</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">500001</span>];</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> m=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">500001</span>;i++)&#123;   <span class="comment">//此处i&lt;500000就会在最后一个测试点报错</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'\n'</span>)&#123;</span><br><span class="line">m=i;</span><br><span class="line">a[i]=<span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//从a[0]到a[i-1]共有i个字符</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=m<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]!=<span class="string">' '</span>&amp;&amp;a[i<span class="number">-1</span>]!=<span class="string">' '</span>&amp;&amp;i!=<span class="number">0</span>)&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]!=<span class="string">' '</span>&amp;&amp;a[i<span class="number">-1</span>]==<span class="string">' '</span>)&#123;</span><br><span class="line">num++;</span><br><span class="line">flag++;</span><br><span class="line">p=&amp;a[i];</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]!=<span class="string">' '</span>&amp;&amp;i==<span class="number">0</span>)&#123;</span><br><span class="line">num++;</span><br><span class="line">flag++;</span><br><span class="line">p=&amp;a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>&amp;&amp;num!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(;num&gt;<span class="number">0</span>;num--)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,*p);</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">flag++;<span class="comment">//防止重复判断flag==1的情况</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(flag&gt;<span class="number">1</span>&amp;&amp;num!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>]==<span class="string">' '</span>||i==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(;num&gt;<span class="number">0</span>;num--)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,*p);</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-32-说反话-加强版（20-分）&quot;&gt;&lt;a href=&quot;#7-32-说反话-加强版（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-32 说反话-加强版（20 分）&quot;&gt;&lt;/a&gt;7-32 说反话-加强版（20 分）&lt;/h4&gt;&lt;p&gt;给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;测试输入包含一个测试用例，在一行内给出总长度不超过500 000的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用若干个空格分开。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;每个测试用例的输出占一行，输出倒序后的句子，并且保证单词间只有1个空格。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello World   Here I Come&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Come I Here World Hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-31 字符串循环左移（20 分）</title>
    <link href="/2018/04/15/jichu7-31/"/>
    <id>/2018/04/15/jichu7-31/</id>
    <published>2018-04-15T13:28:00.000Z</published>
    <updated>2018-04-15T13:28:59.109Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-31-字符串循环左移（20-分）"><a href="#7-31-字符串循环左移（20-分）" class="headerlink" title="7-31 字符串循环左移（20 分）"></a>7-31 字符串循环左移（20 分）</h4><p>输入一个字符串和一个非负整数N，要求将字符串循环左移N次。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第1行中给出一个不超过100个字符长度的、以回车结束的非空字符串；第2行给出非负整数N。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出循环左移N次后的字符串。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">llo World!He</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">101</span>];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="keyword">while</span>((c=getchar()) != <span class="string">'\n'</span>)&#123;<span class="comment">// 记录字符串</span></span><br><span class="line">str[i] = (<span class="keyword">char</span>) c;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">str[i] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">char</span> *start;</span><br><span class="line">start = &amp;str[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sp;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;sp);</span><br><span class="line"><span class="keyword">char</span> sa[<span class="number">101</span>]; <span class="comment">//生成新的字符串</span></span><br><span class="line"></span><br><span class="line">sp = sp%(<span class="built_in">strlen</span>(str));</span><br><span class="line"><span class="built_in">strcpy</span>(sa, start+sp);</span><br><span class="line"> *(start + sp) = <span class="string">'\0'</span>;</span><br><span class="line"><span class="built_in">strcat</span>(sa, start);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, sa);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-31-字符串循环左移（20-分）&quot;&gt;&lt;a href=&quot;#7-31-字符串循环左移（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-31 字符串循环左移（20 分）&quot;&gt;&lt;/a&gt;7-31 字符串循环左移（20 分）&lt;/h4&gt;&lt;p&gt;输入一个字符串和一个非负整数N，要求将字符串循环左移N次。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在第1行中给出一个不超过100个字符长度的、以回车结束的非空字符串；第2行给出非负整数N。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出循环左移N次后的字符串。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello World!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;llo World!He&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-30 字符串的冒泡排序（20 分）</title>
    <link href="/2018/04/15/jichu7-30/"/>
    <id>/2018/04/15/jichu7-30/</id>
    <published>2018-04-15T13:22:00.000Z</published>
    <updated>2018-04-15T13:27:46.231Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-30-字符串的冒泡排序（20-分）"><a href="#7-30-字符串的冒泡排序（20-分）" class="headerlink" title="7-30 字符串的冒泡排序（20 分）"></a>7-30 字符串的冒泡排序（20 分）</h4><p>我们已经知道了将N个整数按从小到大排序的冒泡排序法。本题要求将此方法用于字符串序列，并对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果序列。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第1行中给出N和K（1≤K&lt;N≤100），此后N行，每行包含一个长度不超过10的、仅由小写英文字母组成的非空字符串。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出冒泡排序法扫描完第K遍后的中间结果序列，每行包含一个字符串。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">best</span><br><span class="line">cat</span><br><span class="line">east</span><br><span class="line">a</span><br><span class="line">free</span><br><span class="line">day</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">best</span><br><span class="line">a</span><br><span class="line">cat</span><br><span class="line">day</span><br><span class="line">east</span><br><span class="line">free</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">101</span>][<span class="number">11</span>];</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">11</span>];</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;*a[i]);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m<span class="number">-1</span>-j;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a[i],a[i+<span class="number">1</span>])&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(b,a[i]);</span><br><span class="line"><span class="built_in">strcpy</span>(a[i],a[i+<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">strcpy</span>(a[i+<span class="number">1</span>],b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-30-字符串的冒泡排序（20-分）&quot;&gt;&lt;a href=&quot;#7-30-字符串的冒泡排序（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-30 字符串的冒泡排序（20 分）&quot;&gt;&lt;/a&gt;7-30 字符串的冒泡排序（20 分）&lt;/h4&gt;&lt;p&gt;我们已经知道了将N个整数按从小到大排序的冒泡排序法。本题要求将此方法用于字符串序列，并对任意给定的K（&amp;lt;N），输出扫描完第K遍后的中间结果序列。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在第1行中给出N和K（1≤K&amp;lt;N≤100），此后N行，每行包含一个长度不超过10的、仅由小写英文字母组成的非空字符串。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;输出冒泡排序法扫描完第K遍后的中间结果序列，每行包含一个字符串。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;6 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;best&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;east&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;day&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;best&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;day&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;east&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-29 删除字符串中的子串（20 分）</title>
    <link href="/2018/04/15/jichu7-29/"/>
    <id>/2018/04/15/jichu7-29/</id>
    <published>2018-04-15T13:20:00.000Z</published>
    <updated>2018-04-15T13:21:08.970Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-29-删除字符串中的子串（20-分）"><a href="#7-29-删除字符串中的子串（20-分）" class="headerlink" title="7-29 删除字符串中的子串（20 分）"></a>7-29 删除字符串中的子串（20 分）</h4><p>输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tomcat is a male ccatat</span><br><span class="line">cat</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tom is a male</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s1[<span class="number">80</span>]=&#123;<span class="string">""</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> s2[<span class="number">80</span>]=&#123;<span class="string">""</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> m=<span class="number">0</span>;<span class="comment">//s1共输入m个字符</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;<span class="comment">//s2共输入n个字符</span></span><br><span class="line"><span class="keyword">int</span> comp=<span class="number">0</span>;<span class="comment">//用于标记是否重复</span></span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;s1[i]);</span><br><span class="line"><span class="keyword">if</span>(s1[i]==<span class="string">'\n'</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">m++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;s2[j]);</span><br><span class="line"><span class="keyword">if</span>(s2[j]==<span class="string">'\n'</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;m;a++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s1[a]==s2[<span class="number">0</span>])&#123;</span><br><span class="line">comp=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(b=<span class="number">0</span>;b&lt;=n<span class="number">-1</span>;b++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s1[a+b]!=s2[b])&#123;</span><br><span class="line">comp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(comp==<span class="number">1</span>)&#123;</span><br><span class="line">m=m-n;</span><br><span class="line"><span class="keyword">for</span>(c=a;c&lt;m;c++)&#123;</span><br><span class="line">s1[c]=s1[c+n];</span><br><span class="line">&#125;</span><br><span class="line">a=<span class="number">-1</span>;<span class="comment">//此处a=-1而不是0，防止s1数组初始位置开始即与s2重合</span></span><br><span class="line">s1[m]=<span class="string">'\0'</span>;</span><br><span class="line">comp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,s1[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-29-删除字符串中的子串（20-分）&quot;&gt;&lt;a href=&quot;#7-29-删除字符串中的子串（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-29 删除字符串中的子串（20 分）&quot;&gt;&lt;/a&gt;7-29 删除字符串中的子串（20 分）&lt;/h4&gt;&lt;p&gt;输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Tomcat is a male ccatat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Tom is a male&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-28 猴子选大王（20 分）</title>
    <link href="/2018/04/15/jichu7-28/"/>
    <id>/2018/04/15/jichu7-28/</id>
    <published>2018-04-15T13:18:00.000Z</published>
    <updated>2018-04-15T13:19:38.150Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-28-猴子选大王（20-分）"><a href="#7-28-猴子选大王（20-分）" class="headerlink" title="7-28 猴子选大王（20 分）"></a>7-28 猴子选大王（20 分）</h4><p>一群猴子要选新猴王。新猴王的选择方法是：让N只候选猴子围成一圈，从某位置起顺序编号为1~N号。从第1号开始报数，每轮从1报到3，凡报到3的猴子即退出圈子，接着又从紧邻的下一只猴子开始同样的报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给一个正整数N（≤1000）。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出当选猴王的编号。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m,i,s=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span> ; i&lt;=m ; i++)</span><br><span class="line">   s = (s+<span class="number">3</span>) % i ;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-28-猴子选大王（20-分）&quot;&gt;&lt;a href=&quot;#7-28-猴子选大王（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-28 猴子选大王（20 分）&quot;&gt;&lt;/a&gt;7-28 猴子选大王（20 分）&lt;/h4&gt;&lt;p&gt;一群猴子要选新猴王。新猴王的选择方法是：让N只候选猴子围成一圈，从某位置起顺序编号为1~N号。从第1号开始报数，每轮从1报到3，凡报到3的猴子即退出圈子，接着又从紧邻的下一只猴子开始同样的报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给一个正整数N（≤1000）。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出当选猴王的编号。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-27 冒泡法排序（20 分）</title>
    <link href="/2018/04/15/jichu7-27/"/>
    <id>/2018/04/15/jichu7-27/</id>
    <published>2018-04-15T13:17:00.000Z</published>
    <updated>2018-04-15T13:17:43.937Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-27-冒泡法排序（20-分）"><a href="#7-27-冒泡法排序（20-分）" class="headerlink" title="7-27 冒泡法排序（20 分）"></a>7-27 冒泡法排序（20 分）</h4><p>将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−1个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。</p><p>本题要求对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果数列。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第1行中给出N和K（1≤K&lt;N≤100），在第2行中给出N个待排序的整数，数字间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">2 3 5 1 6 4</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1 3 4 5 6</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 101</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//====region for 前期输入工作=======</span></span><br><span class="line"><span class="keyword">int</span> A[MAX] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> N,K;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;K);</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"><span class="keyword">for</span> ( count = <span class="number">0</span>; count &lt; N; count++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;A[count]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//====endregion=====================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=====实现冒泡排序=================</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"><span class="keyword">for</span> ( i =<span class="number">0</span>;i &lt; K; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (count = <span class="number">0</span>;count &lt; N - i - <span class="number">1</span>; count++)&#123;</span><br><span class="line"><span class="keyword">if</span> ( A[count] &gt; A[count + <span class="number">1</span>])&#123;</span><br><span class="line">tmp = A[count + <span class="number">1</span>];</span><br><span class="line">A[count + <span class="number">1</span>] = A[count];</span><br><span class="line">A[count] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//========冒泡算法结束===========================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=========打印结果=========================</span></span><br><span class="line"><span class="keyword">for</span> ( i =<span class="number">0</span>; i&lt; N<span class="number">-1</span>; i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, A[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, A[N<span class="number">-1</span>]);</span><br><span class="line"><span class="comment">//========打印结束=========================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-27-冒泡法排序（20-分）&quot;&gt;&lt;a href=&quot;#7-27-冒泡法排序（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-27 冒泡法排序（20 分）&quot;&gt;&lt;/a&gt;7-27 冒泡法排序（20 分）&lt;/h4&gt;&lt;p&gt;将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−1个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。&lt;/p&gt;
&lt;p&gt;本题要求对任意给定的K（&amp;lt;N），输出扫描完第K遍后的中间结果数列。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在第1行中给出N和K（1≤K&amp;lt;N≤100），在第2行中给出N个待排序的整数，数字间以空格分隔。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;6 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 3 5 1 6 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2 1 3 4 5 6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-26 单词长度（15 分）</title>
    <link href="/2018/04/15/jichu7-26/"/>
    <id>/2018/04/15/jichu7-26/</id>
    <published>2018-04-15T13:15:00.000Z</published>
    <updated>2018-04-15T13:16:16.903Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-26-单词长度（15-分）"><a href="#7-26-单词长度（15-分）" class="headerlink" title="7-26 单词长度（15 分）"></a>7-26 单词长度（15 分）</h4><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以<code>.</code>结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如<code>it&#39;s</code>算一个单词，长度为4。注意，行中可能出现连续的空格；最后的<code>.</code>不计算在内。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一行文本，以<code>.</code>结束</p><p><strong>提示：</strong>用<code>scanf(&quot;%c&quot;,...);</code>来读入一个字符，直到读到<code>.</code>为止。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">It&apos;s great to see you here.</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 5 2 3 3 4</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">int</span> cot=<span class="number">0</span>,ans[<span class="number">100</span>]= &#123;<span class="number">0</span>&#125;,i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((c=getchar())!=<span class="string">'.'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (c!=<span class="string">' '</span>)</span><br><span class="line">&#123;</span><br><span class="line">cot++;</span><br><span class="line">ans[i]=cot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (cot!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans[i] = cot;</span><br><span class="line">i++;</span><br><span class="line">cot=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (ans[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">while</span>(ans[i]!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[i]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,ans[i]);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-26-单词长度（15-分）&quot;&gt;&lt;a href=&quot;#7-26-单词长度（15-分）&quot; class=&quot;headerlink&quot; title=&quot;7-26 单词长度（15 分）&quot;&gt;&lt;/a&gt;7-26 单词长度（15 分）&lt;/h4&gt;&lt;p&gt;你的程序要读入一行文本，其中以空格分隔为若干个单词，以&lt;code&gt;.&lt;/code&gt;结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如&lt;code&gt;it&amp;#39;s&lt;/code&gt;算一个单词，长度为4。注意，行中可能出现连续的空格；最后的&lt;code&gt;.&lt;/code&gt;不计算在内。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给出一行文本，以&lt;code&gt;.&lt;/code&gt;结束&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;用&lt;code&gt;scanf(&amp;quot;%c&amp;quot;,...);&lt;/code&gt;来读入一个字符，直到读到&lt;code&gt;.&lt;/code&gt;为止。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;It&amp;apos;s great to see you here.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;4 5 2 3 3 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-25 念数字（15 分）</title>
    <link href="/2018/04/15/jichu7-25/"/>
    <id>/2018/04/15/jichu7-25/</id>
    <published>2018-04-15T13:11:00.000Z</published>
    <updated>2018-04-15T13:13:27.636Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-25-念数字（15-分）"><a href="#7-25-念数字（15-分）" class="headerlink" title="7-25 念数字（15 分）"></a>7-25 念数字（15 分）</h4><p>输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出<code>fu</code>字。十个数字对应的拼音如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0: ling</span><br><span class="line">1: yi</span><br><span class="line">2: er</span><br><span class="line">3: san</span><br><span class="line">4: si</span><br><span class="line">5: wu</span><br><span class="line">6: liu</span><br><span class="line">7: qi</span><br><span class="line">8: ba</span><br><span class="line">9: jiu</span><br></pre></td></tr></table></figure><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个整数，如：<code>1234</code>。</p><p><strong>提示：整数包括负数、零和正数。</strong></p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如 <code>yi er san si</code>。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-600</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fu liu ling ling</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (n &lt; <span class="number">0</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"fu "</span>);</span><br><span class="line">n = -n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t = n,mask = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t &gt; <span class="number">9</span>) </span><br><span class="line">&#123; </span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">mask *= <span class="number">10</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> *s[] = &#123; <span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>, <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="keyword">while</span> (mask &gt; <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line">d = n / mask;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s[d]);</span><br><span class="line"><span class="keyword">if</span> (mask &gt; <span class="number">9</span>) </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">n %= mask;</span><br><span class="line">mask /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-25-念数字（15-分）&quot;&gt;&lt;a href=&quot;#7-25-念数字（15-分）&quot; class=&quot;headerlink&quot; title=&quot;7-25 念数字（15 分）&quot;&gt;&lt;/a&gt;7-25 念数字（15 分）&lt;/h4&gt;&lt;p&gt;输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出&lt;code&gt;fu&lt;/code&gt;字。十个数字对应的拼音如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0: ling&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1: yi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2: er&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3: san&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4: si&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5: wu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6: liu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7: qi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8: ba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9: jiu&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给出一个整数，如：&lt;code&gt;1234&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示：整数包括负数、零和正数。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如 &lt;code&gt;yi er san si&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-600&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fu liu ling ling&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-24 约分最简分式（15 分）</title>
    <link href="/2018/04/15/jichu7-24/"/>
    <id>/2018/04/15/jichu7-24/</id>
    <published>2018-04-15T13:10:00.000Z</published>
    <updated>2018-04-15T13:11:06.820Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-24-约分最简分式（15-分）"><a href="#7-24-约分最简分式（15-分）" class="headerlink" title="7-24 约分最简分式（15 分）"></a>7-24 约分最简分式（15 分）</h4><p>分数可以表示为<code>分子/分母</code>的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个分数，分子和分母中间以斜杠<code>/</code>分隔，如：<code>12/34</code>表示34分之12。分子和分母都是正整数（不包含0，如果不清楚正整数的定义的话）。</p><p><strong>提示：</strong>在<code>scanf</code>的格式字符串中加入<code>/</code>，让<code>scanf</code>来处理这个斜杠。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用<code>分子/分母</code>的形式表示分数。如 <code>5/6</code>表示6分之5。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">66/120</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11/20</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> zi,mu,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d/%d"</span>,&amp;zi,&amp;mu);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=mu;i&gt;=<span class="number">2</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(zi%i==<span class="number">0</span>&amp;&amp;mu%i==<span class="number">0</span>)&#123;</span><br><span class="line"> zi=zi/i;</span><br><span class="line"> mu=mu/i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d/%d"</span>,zi,mu);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-24-约分最简分式（15-分）&quot;&gt;&lt;a href=&quot;#7-24-约分最简分式（15-分）&quot; class=&quot;headerlink&quot; title=&quot;7-24 约分最简分式（15 分）&quot;&gt;&lt;/a&gt;7-24 约分最简分式（15 分）&lt;/h4&gt;&lt;p&gt;分数可以表示为&lt;code&gt;分子/分母&lt;/code&gt;的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给出一个分数，分子和分母中间以斜杠&lt;code&gt;/&lt;/code&gt;分隔，如：&lt;code&gt;12/34&lt;/code&gt;表示34分之12。分子和分母都是正整数（不包含0，如果不清楚正整数的定义的话）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;在&lt;code&gt;scanf&lt;/code&gt;的格式字符串中加入&lt;code&gt;/&lt;/code&gt;，让&lt;code&gt;scanf&lt;/code&gt;来处理这个斜杠。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用&lt;code&gt;分子/分母&lt;/code&gt;的形式表示分数。如 &lt;code&gt;5/6&lt;/code&gt;表示6分之5。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;66/120&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;11/20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-23 币值转换（20 分）</title>
    <link href="/2018/04/15/jichu7-23/"/>
    <id>/2018/04/15/jichu7-23/</id>
    <published>2018-04-15T13:08:00.000Z</published>
    <updated>2018-04-15T13:09:41.614Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-23-币值转换（20-分）"><a href="#7-23-币值转换（20-分）" class="headerlink" title="7-23 币值转换（20 分）"></a>7-23 币值转换（20 分）</h4><p>输入一个整数（位数不超过9位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如23108元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字0-9，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是23108元应被转换输出为“cWdQbBai”元。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不超过9位的非负整数。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">813227345</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iYbQdBcScWhQdBeSf</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6900</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gQjB</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>]=&#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">10</span>]=&#123;<span class="string">'0'</span>,<span class="string">'S'</span>,<span class="string">'B'</span>,<span class="string">'Q'</span>,<span class="string">'W'</span>,<span class="string">'S'</span>,<span class="string">'B'</span>,<span class="string">'Q'</span>,<span class="string">'Y'</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> flag[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,&#125;;</span><br><span class="line"><span class="keyword">long</span> n;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%ld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">long</span> t=n;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">int</span> hou=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(t&gt;<span class="number">0</span>)&#123;</span><br><span class="line">c[len]=t%<span class="number">10</span>;</span><br><span class="line">t/=<span class="number">10</span>;</span><br><span class="line">len++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(c[j]==<span class="number">0</span>)&#123;</span><br><span class="line">flag[j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=len<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line"><span class="keyword">if</span>(j==len<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(len==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,a[c[j]]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag[j]==<span class="number">1</span>&amp;&amp;flag[j<span class="number">-1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">8</span>||j&lt;=<span class="number">4</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j&gt;<span class="number">4</span>&amp;&amp;j&lt;<span class="number">8</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"W"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j&gt;<span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(c[j]!=<span class="number">0</span>&amp;&amp;flag[j]==<span class="number">1</span>&amp;&amp;flag[j<span class="number">-1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c%cW"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[j]!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[j]==<span class="number">0</span>&amp;&amp;c[j<span class="number">-1</span>]!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"a"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(c[j]!=<span class="number">0</span>&amp;&amp;flag[j]==<span class="number">1</span>&amp;&amp;flag[j<span class="number">-1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[j]!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[j]==<span class="number">0</span>&amp;&amp;c[j<span class="number">-1</span>]!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Wa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j&lt;<span class="number">4</span>&amp;&amp;j&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(c[j]!=<span class="number">0</span>&amp;&amp;flag[j]==<span class="number">1</span>&amp;&amp;flag[j<span class="number">-1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[j]!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[c[j]],b[j]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[j]==<span class="number">0</span>&amp;&amp;c[j<span class="number">-1</span>]!=<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"a"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,a[c[j]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-23-币值转换（20-分）&quot;&gt;&lt;a href=&quot;#7-23-币值转换（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-23 币值转换（20 分）&quot;&gt;&lt;/a&gt;7-23 币值转换（20 分）&lt;/h4&gt;&lt;p&gt;输入一个整数（位数不超过9位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如23108元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字0-9，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是23108元应被转换输出为“cWdQbBai”元。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给出一个不超过9位的非负整数。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。&lt;/p&gt;
&lt;h3 id=&quot;输入样例1：&quot;&gt;&lt;a href=&quot;#输入样例1：&quot; class=&quot;headerlink&quot; title=&quot;输入样例1：&quot;&gt;&lt;/a&gt;输入样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;813227345&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例1：&quot;&gt;&lt;a href=&quot;#输出样例1：&quot; class=&quot;headerlink&quot; title=&quot;输出样例1：&quot;&gt;&lt;/a&gt;输出样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;iYbQdBcScWhQdBeSf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入样例2：&quot;&gt;&lt;a href=&quot;#输入样例2：&quot; class=&quot;headerlink&quot; title=&quot;输入样例2：&quot;&gt;&lt;/a&gt;输入样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;6900&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例2：&quot;&gt;&lt;a href=&quot;#输出样例2：&quot; class=&quot;headerlink&quot; title=&quot;输出样例2：&quot;&gt;&lt;/a&gt;输出样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gQjB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-22 龟兔赛跑（20 分）</title>
    <link href="/2018/04/15/jichu7-22/"/>
    <id>/2018/04/15/jichu7-22/</id>
    <published>2018-04-15T13:04:00.000Z</published>
    <updated>2018-04-15T13:05:18.949Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-22-龟兔赛跑（20-分）"><a href="#7-22-龟兔赛跑（20-分）" class="headerlink" title="7-22 龟兔赛跑（20 分）"></a>7-22 龟兔赛跑（20 分）</h4><p>乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出比赛时间T（分钟）。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出比赛的结果：乌龟赢输出<code>@_@</code>，兔子赢输出<code>^_^</code>，平局则输出<code>-_-</code>；后跟1空格，再输出胜利者跑完的距离。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">242</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@_@ 726</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T, i;</span><br><span class="line"><span class="keyword">int</span> rabbitT=<span class="number">0</span>; <span class="comment">//兔子跑的时间</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">if</span>(T&lt;<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"^_^ %d\n"</span>,T*<span class="number">9</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">rabbitT=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">10</span>;i&lt;=T;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">0</span>)   <span class="comment">//每10分钟回头，比较</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(rabbitT*<span class="number">9</span>&gt;i*<span class="number">3</span> &amp;&amp; (T-i)&gt;=<span class="number">30</span>) <span class="comment">//兔子大于乌龟，剩余时间不小于30分钟</span></span><br><span class="line">i=i+<span class="number">29</span>; <span class="comment">//不是i=i+30, 最后还有i++</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rabbitT*<span class="number">9</span>&gt;i*<span class="number">3</span> &amp;&amp; (T-i)&lt;<span class="number">30</span>)  <span class="comment">//兔子大于乌龟，剩余时间小于30分钟</span></span><br><span class="line">&#123;</span><br><span class="line">i=T;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(T-i&gt;=<span class="number">10</span>) <span class="comment">//兔子小于乌龟，剩余时间不小于10分钟，兔子真正跑的时间+10</span></span><br><span class="line">&#123;</span><br><span class="line">rabbitT+=<span class="number">10</span>;</span><br><span class="line">i=i+<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="comment">//兔子小于乌龟，剩余时间小于10分钟, 兔子真正跑的时间+T-i</span></span><br><span class="line">&#123;</span><br><span class="line">rabbitT+=T-i;</span><br><span class="line">i=T;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i*<span class="number">3</span>&gt;rabbitT*<span class="number">9</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"@_@ %d\n"</span>,i*<span class="number">3</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i*<span class="number">3</span>&lt;rabbitT*<span class="number">9</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"^_^ %d\n"</span>,rabbitT*<span class="number">9</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-_- %d\n"</span>,rabbitT*<span class="number">9</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-22-龟兔赛跑（20-分）&quot;&gt;&lt;a href=&quot;#7-22-龟兔赛跑（20-分）&quot; class=&quot;headerlink&quot; title=&quot;7-22 龟兔赛跑（20 分）&quot;&gt;&lt;/a&gt;7-22 龟兔赛跑（20 分）&lt;/h4&gt;&lt;p&gt;乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给出比赛时间T（分钟）。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;在一行中输出比赛的结果：乌龟赢输出&lt;code&gt;@_@&lt;/code&gt;，兔子赢输出&lt;code&gt;^_^&lt;/code&gt;，平局则输出&lt;code&gt;-_-&lt;/code&gt;；后跟1空格，再输出胜利者跑完的距离。&lt;/p&gt;
&lt;h3 id=&quot;输入样例：&quot;&gt;&lt;a href=&quot;#输入样例：&quot; class=&quot;headerlink&quot; title=&quot;输入样例：&quot;&gt;&lt;/a&gt;输入样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例：&quot;&gt;&lt;a href=&quot;#输出样例：&quot; class=&quot;headerlink&quot; title=&quot;输出样例：&quot;&gt;&lt;/a&gt;输出样例：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@_@ 726&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>7-21 求特殊方程的正整数解（15 分）</title>
    <link href="/2018/04/15/jichu7-21/"/>
    <id>/2018/04/15/jichu7-21/</id>
    <published>2018-04-15T12:51:00.000Z</published>
    <updated>2018-04-15T12:53:30.815Z</updated>
    
    <content type="html"><![CDATA[<h4 id="7-21-求特殊方程的正整数解（15-分）"><a href="#7-21-求特殊方程的正整数解（15-分）" class="headerlink" title="7-21 求特殊方程的正整数解（15 分）"></a>7-21 求特殊方程的正整数解（15 分）</h4><p>本题要求对任意给定的正整数N，求方程X2+Y2=N的全部正整数解。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正整数N（≤10000）。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出方程X2+Y2=N的全部正整数解，其中X≤Y。每组解占1行，两数字间以1空格分隔，按X的递增顺序输出。如果没有解，则输出<code>No Solution</code>。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">884</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 28</span><br><span class="line">20 22</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No Solution</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, x, y;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> half = n / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">1</span>; x &lt;= half; ++x) &#123;</span><br><span class="line"><span class="keyword">for</span>(y = x; y &lt;= half; ++y) &#123;</span><br><span class="line"><span class="keyword">if</span>(x * x + y * y == n) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;7-21-求特殊方程的正整数解（15-分）&quot;&gt;&lt;a href=&quot;#7-21-求特殊方程的正整数解（15-分）&quot; class=&quot;headerlink&quot; title=&quot;7-21 求特殊方程的正整数解（15 分）&quot;&gt;&lt;/a&gt;7-21 求特殊方程的正整数解（15 分）&lt;/h4&gt;&lt;p&gt;本题要求对任意给定的正整数N，求方程X2+Y2=N的全部正整数解。&lt;/p&gt;
&lt;h3 id=&quot;输入格式：&quot;&gt;&lt;a href=&quot;#输入格式：&quot; class=&quot;headerlink&quot; title=&quot;输入格式：&quot;&gt;&lt;/a&gt;输入格式：&lt;/h3&gt;&lt;p&gt;输入在一行中给出正整数N（≤10000）。&lt;/p&gt;
&lt;h3 id=&quot;输出格式：&quot;&gt;&lt;a href=&quot;#输出格式：&quot; class=&quot;headerlink&quot; title=&quot;输出格式：&quot;&gt;&lt;/a&gt;输出格式：&lt;/h3&gt;&lt;p&gt;输出方程X2+Y2=N的全部正整数解，其中X≤Y。每组解占1行，两数字间以1空格分隔，按X的递增顺序输出。如果没有解，则输出&lt;code&gt;No Solution&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;输入样例1：&quot;&gt;&lt;a href=&quot;#输入样例1：&quot; class=&quot;headerlink&quot; title=&quot;输入样例1：&quot;&gt;&lt;/a&gt;输入样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;884&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例1：&quot;&gt;&lt;a href=&quot;#输出样例1：&quot; class=&quot;headerlink&quot; title=&quot;输出样例1：&quot;&gt;&lt;/a&gt;输出样例1：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;10 28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20 22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入样例2：&quot;&gt;&lt;a href=&quot;#输入样例2：&quot; class=&quot;headerlink&quot; title=&quot;输入样例2：&quot;&gt;&lt;/a&gt;输入样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出样例2：&quot;&gt;&lt;a href=&quot;#输出样例2：&quot; class=&quot;headerlink&quot; title=&quot;输出样例2：&quot;&gt;&lt;/a&gt;输出样例2：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;No Solution&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="基础编程题目集" scheme="/categories/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
    
      <category term="基础编程题目集" scheme="/tags/%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"/>
    
  </entry>
  
</feed>
