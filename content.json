{"meta":{"title":"auhanjie's Blog","subtitle":"ad astra per aspera","description":"學習筆記","author":"auhanjie","url":""},"pages":[{"title":"About","date":"2016-03-20T02:33:39.000Z","updated":"2017-06-04T10:14:56.000Z","comments":true,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 概況本人就讀於廣州大學，主要是弄JAVA WEB。現在學習goLang和安卓開發 More info: Writing 簡歷More info: Writing 聯繫我 Email:**@gmail.com"},{"title":"Tags","date":"2018-01-29T14:57:23.820Z","updated":"2017-01-30T02:53:18.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"archives","date":"2016-03-20T02:35:42.000Z","updated":"2016-03-20T02:35:44.000Z","comments":true,"path":"archives/index.html","permalink":"/archives/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-01-29T14:57:23.820Z","updated":"2017-01-30T02:53:18.000Z","comments":true,"path":"categories/index.html","permalink":"/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"7-38 数列求和-加强版（20 分）","slug":"jichu7-38","date":"2018-04-15T13:38:00.000Z","updated":"2018-04-15T14:12:51.549Z","comments":true,"path":"2018/04/15/jichu7-38/","link":"","permalink":"/2018/04/15/jichu7-38/","excerpt":"7-38 数列求和-加强版（20 分）给定某数字A（1≤A≤9）以及非负整数N（0≤N≤100000），求数列之和S=A+AA+AAA+⋯+AA⋯A（N个A）。例如A=1, N=3时，S=1+11+111=123。 输入格式：输入数字A与非负整数N。 输出格式：输出其N项数列之和S的值。 输入样例：11 3 输出样例：1123","text":"7-38 数列求和-加强版（20 分）给定某数字A（1≤A≤9）以及非负整数N（0≤N≤100000），求数列之和S=A+AA+AAA+⋯+AA⋯A（N个A）。例如A=1, N=3时，S=1+11+111=123。 输入格式：输入数字A与非负整数N。 输出格式：输出其N项数列之和S的值。 输入样例：11 3 输出样例：1123 123456789101112131415161718192021222324252627282930313233343536#include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;math.h&gt; int num[1000000]; int main() &#123; int A; int N; int i; int j; int t; int flag; scanf(\"%d%d\",&amp;A,&amp;N); if(N == 0) printf(\"0\\n\"); else &#123; flag = 0; for(i=N, j=0; i&gt;=1; i--, j++) &#123; t = A*i + flag; flag = t / 10; num[j] = t % 10; &#125; if(flag &gt; 0) &#123; num[j] = flag; j++; &#125; for(i=j-1; i&gt;=0; i--) &#123; printf(\"%d\",num[i]); &#125; &#125; return 0; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-37 整数分解为若干项之和（20 分）","slug":"jichu7-37","date":"2018-04-15T13:37:00.000Z","updated":"2018-04-15T14:13:00.889Z","comments":true,"path":"2018/04/15/jichu7-37/","link":"","permalink":"/2018/04/15/jichu7-37/","excerpt":"7-37 整数分解为若干项之和（20 分）将一个正整数N分解成几个正整数相加，可以有多种分解方法，例如7=6+1，7=5+2，7=5+1+1，…。编程求出正整数N的所有整数分解式子。 输入格式：每个输入包含一个测试用例，即正整数N (0&lt;N≤30)。 输出格式：按递增顺序输出N的所有整数分解式子。递增顺序是指：对于两个分解序列N1={n1,n2,⋯}和N2={m1,m2,⋯}，若存在i使得n1=m1,⋯,ni=mi，但是ni+1&lt;mi+1,则N1序列必定在N2序列之前输出。每个式子由小到大相加，式子间用分号隔开，且每输出4个式子后换行。 输入样例：17 输出样例：12347=1+1+1+1+1+1+1;7=1+1+1+1+1+2;7=1+1+1+1+3;7=1+1+1+2+27=1+1+1+4;7=1+1+2+3;7=1+1+5;7=1+2+2+27=1+2+4;7=1+3+3;7=1+6;7=2+2+37=2+5;7=3+4;7=7","text":"7-37 整数分解为若干项之和（20 分）将一个正整数N分解成几个正整数相加，可以有多种分解方法，例如7=6+1，7=5+2，7=5+1+1，…。编程求出正整数N的所有整数分解式子。 输入格式：每个输入包含一个测试用例，即正整数N (0&lt;N≤30)。 输出格式：按递增顺序输出N的所有整数分解式子。递增顺序是指：对于两个分解序列N1={n1,n2,⋯}和N2={m1,m2,⋯}，若存在i使得n1=m1,⋯,ni=mi，但是ni+1&lt;mi+1,则N1序列必定在N2序列之前输出。每个式子由小到大相加，式子间用分号隔开，且每输出4个式子后换行。 输入样例：17 输出样例：12347=1+1+1+1+1+1+1;7=1+1+1+1+1+2;7=1+1+1+1+3;7=1+1+1+2+27=1+1+1+4;7=1+1+2+3;7=1+1+5;7=1+2+2+27=1+2+4;7=1+3+3;7=1+6;7=2+2+37=2+5;7=3+4;7=7 1234567891011121314151617181920212223242526272829303132333435363738394041/*深度优先搜索*/#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int item[31];int top=0;/*当前数组元素个数*/int sum=0;/*累加和*/int n;/*所给的数*/int k;/*记录每行输出是否满了四个*/void dfs(int number)&#123; if(sum==n)&#123; k++; printf(\"%d=%d\",n,item[0]); for(int i=1;i&lt;=top-1;i++) printf(\"+%d\",item[i]); if(k%4==0||top==1) printf(\"\\n\"); else printf(\";\"); &#125; if(sum&gt;n)&#123; return; &#125; for(int i=number;i&lt;=n;i++)&#123; sum=sum+i; item[top++]=i; dfs(i); sum=sum-i; top--; &#125;&#125;int main()&#123; scanf(\"%d\",&amp;n); dfs(1); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-36 复数四则运算（15 分）","slug":"jichu7-36","date":"2018-04-15T13:36:00.000Z","updated":"2018-04-15T14:09:42.701Z","comments":true,"path":"2018/04/15/jichu7-36/","link":"","permalink":"/2018/04/15/jichu7-36/","excerpt":"7-36 复数四则运算（15 分）本题要求编写程序，计算2个复数的和、差、积、商。 输入格式：输入在一行中按照a1 b1 a2 b2的格式给出2个复数C1=a1+b1i和C2=a2+b2i的实部和虚部。题目保证C2不为0。 输出格式：分别在4行中按照(a1+b1i) 运算符 (a2+b2i) = 结果的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位。如果结果的实部或者虚部为0，则不输出。如果结果为0，则输出0.0。 输入样例1：12 3.08 -2.04 5.06 输出样例1：1234(2.0+3.1i) + (-2.0+5.1i) = 8.1i(2.0+3.1i) - (-2.0+5.1i) = 4.0-2.0i(2.0+3.1i) * (-2.0+5.1i) = -19.7+3.8i(2.0+3.1i) / (-2.0+5.1i) = 0.4-0.6i 输入样例2：11 1 -1 -1.01 输出样例2：1234(1.0+1.0i) + (-1.0-1.0i) = 0.0(1.0+1.0i) - (-1.0-1.0i) = 2.0+2.0i(1.0+1.0i) * (-1.0-1.0i) = -2.0i(1.0+1.0i) / (-1.0-1.0i) = -1.0","text":"7-36 复数四则运算（15 分）本题要求编写程序，计算2个复数的和、差、积、商。 输入格式：输入在一行中按照a1 b1 a2 b2的格式给出2个复数C1=a1+b1i和C2=a2+b2i的实部和虚部。题目保证C2不为0。 输出格式：分别在4行中按照(a1+b1i) 运算符 (a2+b2i) = 结果的格式顺序输出2个复数的和、差、积、商，数字精确到小数点后1位。如果结果的实部或者虚部为0，则不输出。如果结果为0，则输出0.0。 输入样例1：12 3.08 -2.04 5.06 输出样例1：1234(2.0+3.1i) + (-2.0+5.1i) = 8.1i(2.0+3.1i) - (-2.0+5.1i) = 4.0-2.0i(2.0+3.1i) * (-2.0+5.1i) = -19.7+3.8i(2.0+3.1i) / (-2.0+5.1i) = 0.4-0.6i 输入样例2：11 1 -1 -1.01 输出样例2：1234(1.0+1.0i) + (-1.0-1.0i) = 0.0(1.0+1.0i) - (-1.0-1.0i) = 2.0+2.0i(1.0+1.0i) * (-1.0-1.0i) = -2.0i(1.0+1.0i) / (-1.0-1.0i) = -1.0 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394//两个复数运算前不变化，但输出时要保留后一位；//运算结果，由题意，要先保留一位小数#include &lt;stdio.h&gt;#include &lt;math.h&gt;struct data&#123; double num1; double num2;&#125;;char item[4]=\"+-*/\";void myprintf(double num1,double num2,int flag)&#123; if(flag)&#123;//运算结果输出 if(num1==0&amp;&amp;num2==0) printf(\"0.0\"); else&#123; if(num1!=0&amp;&amp;num2==0) printf(\"%.1f\",num1); else if(num1==0&amp;&amp;num2!=0) printf(\"%.1fi\",num2); else&#123; printf(\"%.1f\",num1); if(num2&gt;0) printf(\"+%.1fi\",num2); else printf(\"%.1fi\",num2); &#125; &#125; &#125; else&#123;//复数输出 if(num2&lt;0)&#123; printf(\"%.1f%.1fi\",num1,num2); &#125;else&#123; printf(\"%.1f+%.1fi\",num1,num2); &#125; &#125;&#125;double simpl(double num)&#123;//运算结果保留一位小数 if(num&gt;0) num=(double)floor((num+0.05)*10)/10; else if(num&lt;0)&#123; num=fabs(num); num=-(double)floor((num+0.05)*10)/10; &#125; return num;&#125;void getresult(struct data cal[],int time)//运算&#123; double temp1,temp2,temp; switch(time) &#123; case 0:cal[2].num1=cal[0].num1+cal[1].num1; cal[2].num2=cal[0].num2+cal[1].num2; break; case 1:cal[2].num1=cal[0].num1-cal[1].num1; cal[2].num2=cal[0].num2-cal[1].num2; break; case 2:cal[2].num1=cal[0].num1*cal[1].num1-cal[0].num2*cal[1].num2; cal[2].num2=cal[0].num1*cal[1].num2+cal[0].num2*cal[1].num1; break; case 3:temp1=cal[0].num1*cal[1].num1+cal[0].num2*cal[1].num2; temp2=cal[0].num2*cal[1].num1-cal[0].num1*cal[1].num2; temp=cal[1].num2*cal[1].num2+cal[1].num1*cal[1].num1; cal[2].num1=temp1/temp; cal[2].num2=temp2/temp; break; &#125; cal[2].num1=simpl(cal[2].num1); cal[2].num2=simpl(cal[2].num2); myprintf(cal[2].num1,cal[2].num2,1); printf(\"\\n\");&#125;int main()&#123; struct data cal[3]; for(int i=0;i&lt;=1;i++)&#123; scanf(\"%lf%lf\",&amp;cal[i].num1,&amp;cal[i].num2); &#125; for(int i=0;i&lt;4;i++)&#123; printf(\"(\"); myprintf(cal[0].num1,cal[0].num2,0); printf(\")\"); printf(\" %c \",item[i]); printf(\"(\"); myprintf(cal[1].num1,cal[1].num2,0); printf(\") = \"); //printf(\" = \",item[i]); getresult(cal,i); &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-35 有理数均值（20 分）","slug":"jichu7-35","date":"2018-04-15T13:34:00.000Z","updated":"2018-04-15T13:35:32.290Z","comments":true,"path":"2018/04/15/jichu7-35/","link":"","permalink":"/2018/04/15/jichu7-35/","excerpt":"7-35 有理数均值（20 分）本题要求编写程序，计算N个有理数的平均值。 输入格式：输入第一行给出正整数N（≤100）；第二行中按照a1/b1 a2/b2 …的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。 输出格式：在一行中按照a/b的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。 输入样例1：1241/2 1/6 3/6 -5/10 输出样例1：11/6 输入样例2：1224/3 2/3 输出样例2：11","text":"7-35 有理数均值（20 分）本题要求编写程序，计算N个有理数的平均值。 输入格式：输入第一行给出正整数N（≤100）；第二行中按照a1/b1 a2/b2 …的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。 输出格式：在一行中按照a/b的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。 输入样例1：1241/2 1/6 3/6 -5/10 输出样例1：11/6 输入样例2：1224/3 2/3 输出样例2：11 1234567891011121314151617181920212223242526272829303132333435#include&lt;stdio.h&gt;int gcd(int p,int q)&#123; if (q==0) return p; int r = p%q; return gcd(q,r);&#125;int main()&#123; int N,sumA=0,sumB=1; scanf(\"%d\",&amp;N); for(int i=0; i&lt;N; i++) &#123; int a=0,b=1; scanf(\"%d/%d\",&amp;a,&amp;b); sumA *= b; sumA += a*sumB; sumB *= b; if(i==N-1) sumB*=N; int divisor = gcd(sumA,sumB); sumA/=divisor;sumB/=divisor; &#125; if (sumA==0) printf(\"0\"); else if(sumB==1) printf(\"%d\",sumA); else printf(\"%d/%d\",sumA,sumB); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-34 通讯录的录入与显示（10 分）","slug":"jichu7-34","date":"2018-04-15T13:33:00.000Z","updated":"2018-04-15T13:34:10.021Z","comments":true,"path":"2018/04/15/jichu7-34/","link":"","permalink":"/2018/04/15/jichu7-34/","excerpt":"7-34 通讯录的录入与显示（10 分）通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入N条记录，并且根据要求显示任意某条记录。 输入格式：输入在第一行给出正整数N（≤10）；随后N行，每行按照格式姓名 生日 性别 固话 手机给出一条记录。其中姓名是不超过10个字符、不包含空格的非空字符串；生日按yyyy/mm/dd的格式给出年月日；性别用M表示“男”、F表示“女”；固话和手机均为不超过15位的连续数字，前面有可能出现+。 在通讯录记录输入完成后，最后一行给出正整数K，并且随后给出K个整数，表示要查询的记录编号（从0到N−1顺序编号）。数字间以空格分隔。 输出格式：对每一条要查询的记录编号，在一行中按照姓名 固话 手机 性别 生日的格式输出该记录。若要查询的记录不存在，则输出Not Found。 输入样例：123453Chris 1984/03/10 F +86181779452 13707010007LaoLao 1967/11/30 F 057187951100 +8618618623333QiaoLin 1980/01/01 M 84172333 100862 1 7 输出样例：12LaoLao 057187951100 +8618618623333 F 1967/11/30Not Found","text":"7-34 通讯录的录入与显示（10 分）通讯录中的一条记录包含下述基本信息：朋友的姓名、出生日期、性别、固定电话号码、移动电话号码。 本题要求编写程序，录入N条记录，并且根据要求显示任意某条记录。 输入格式：输入在第一行给出正整数N（≤10）；随后N行，每行按照格式姓名 生日 性别 固话 手机给出一条记录。其中姓名是不超过10个字符、不包含空格的非空字符串；生日按yyyy/mm/dd的格式给出年月日；性别用M表示“男”、F表示“女”；固话和手机均为不超过15位的连续数字，前面有可能出现+。 在通讯录记录输入完成后，最后一行给出正整数K，并且随后给出K个整数，表示要查询的记录编号（从0到N−1顺序编号）。数字间以空格分隔。 输出格式：对每一条要查询的记录编号，在一行中按照姓名 固话 手机 性别 生日的格式输出该记录。若要查询的记录不存在，则输出Not Found。 输入样例：123453Chris 1984/03/10 F +86181779452 13707010007LaoLao 1967/11/30 F 057187951100 +8618618623333QiaoLin 1980/01/01 M 84172333 100862 1 7 输出样例：12LaoLao 057187951100 +8618618623333 F 1967/11/30Not Found 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;typedef struct node&#123; char name[11]; char birthday[11]; char sex; char num[17]; char phone[17]; struct node* next;&#125;type;void output(type* head,int N);type* input(int N);int main(void)&#123; type *head; int N; //int i=0,j=0; scanf(\"%d\",&amp;N); head=input(N); output(head,N); return 0;&#125;type* input(int N)&#123; type *p,*q,*head; int i=0; p=q=(type*)malloc(sizeof(type)); for(i=0;i&lt;N;i++) &#123; scanf(\"%s %s %c %s %s\\n\",p-&gt;name,p-&gt;birthday,&amp;(p-&gt;sex),p-&gt;num,p-&gt;phone); if(i==0) &#123; head=p; &#125; else &#123; q-&gt;next=p; &#125; q=p; p=(type*)malloc(sizeof(type)); &#125; q-&gt;next=NULL; p-&gt;next=NULL; return head;&#125;void output(type* head,int N)&#123; int K,i,j; scanf(\"%d\",&amp;K); int a[K]; type *q; //p=q=(type*)malloc(sizeof(type)); for(i=0;i&lt;K;i++) &#123; scanf(\"%d\",&amp;a[i]); &#125; for(i=0;i&lt;K;i++) &#123; if(a[i]&lt;N&amp;&amp;a[i]&gt;=0) &#123; q=head; for(j=0;j&lt;a[i];j++) &#123; q=q-&gt;next; &#125; printf(\"%s %s %s %c %s\\n\",q-&gt;name,q-&gt;num,q-&gt;phone,q-&gt;sex,q-&gt;birthday); &#125; else &#123; printf(\"Not Found\\n\"); &#125; &#125;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-33 有理数加法（15 分）","slug":"jichu7-33","date":"2018-04-15T13:31:00.000Z","updated":"2018-04-15T13:32:13.944Z","comments":true,"path":"2018/04/15/jichu7-33/","link":"","permalink":"/2018/04/15/jichu7-33/","excerpt":"7-33 有理数加法（15 分）本题要求编写程序，计算两个有理数的和。 输入格式：输入在一行中按照a1/b1 a2/b2的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。 输出格式：在一行中按照a/b的格式输出两个有理数的和。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。 输入样例1：11/3 1/6 输出样例1：11/2 输入样例2：14/3 2/3 输出样例2：12","text":"7-33 有理数加法（15 分）本题要求编写程序，计算两个有理数的和。 输入格式：输入在一行中按照a1/b1 a2/b2的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。 输出格式：在一行中按照a/b的格式输出两个有理数的和。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。 输入样例1：11/3 1/6 输出样例1：11/2 输入样例2：14/3 2/3 输出样例2：12 12345678910111213141516171819202122232425262728293031323334353637#include &lt;stdio.h&gt;int gcd(int, int);struct fraction&#123; int a; //分子 int b; //分母&#125;;int main(void)&#123; struct fraction f1, f2, f3; int g; scanf(\"%d/%d %d/%d\", &amp;f1.a, &amp;f1.b, &amp;f2.a, &amp;f2.b); f3.a = f1.a*f2.b + f2.a*f1.b; f3.b = f1.b*f2.b; g = gcd(f3.a, f3.b); f3.a /= g; f3.b /= g; if (f3.b == 1) printf(\"%d\", f3.a); else printf(\"%d/%d\", f3.a, f3.b); return 0;&#125;int gcd(int x, int y)&#123; int r; while (1) &#123; r = x%y; if (r == 0) break; x = y; y = r; &#125; return y;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-32 说反话-加强版（20 分）","slug":"jichu7-32","date":"2018-04-15T13:30:00.000Z","updated":"2018-04-15T13:30:28.734Z","comments":true,"path":"2018/04/15/jichu7-32/","link":"","permalink":"/2018/04/15/jichu7-32/","excerpt":"7-32 说反话-加强版（20 分）给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。 输入格式：测试输入包含一个测试用例，在一行内给出总长度不超过500 000的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用若干个空格分开。 输出格式：每个测试用例的输出占一行，输出倒序后的句子，并且保证单词间只有1个空格。 输入样例：1Hello World Here I Come 输出样例：1Come I Here World Hello","text":"7-32 说反话-加强版（20 分）给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。 输入格式：测试输入包含一个测试用例，在一行内给出总长度不超过500 000的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用若干个空格分开。 输出格式：每个测试用例的输出占一行，输出倒序后的句子，并且保证单词间只有1个空格。 输入样例：1Hello World Here I Come 输出样例：1Come I Here World Hello 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;stdio.h&gt;char a[500001];char *p;int i;int m=0;int flag=0;int num=0;int main()&#123; for(i=0;i&lt;500001;i++)&#123; //此处i&lt;500000就会在最后一个测试点报错 scanf(\"%c\",&amp;a[i]); if(a[i]=='\\n')&#123; m=i; a[i]='\\0'; break; &#125;//从a[0]到a[i-1]共有i个字符 &#125; for(i=m-1;i&gt;=0;i--)&#123; if(a[i]!=' '&amp;&amp;a[i-1]!=' '&amp;&amp;i!=0)&#123; num++; &#125;else if(a[i]!=' '&amp;&amp;a[i-1]==' ')&#123; num++; flag++; p=&amp;a[i]; &#125;else if(a[i]!=' '&amp;&amp;i==0)&#123; num++; flag++; p=&amp;a[i]; &#125; if(flag==1&amp;&amp;num!=0)&#123; for(;num&gt;0;num--)&#123; printf(\"%c\",*p); p++; &#125; num=0; flag++;//防止重复判断flag==1的情况 &#125;else if(flag&gt;1&amp;&amp;num!=0)&#123; if(a[i-1]==' '||i==0)&#123; printf(\" \"); for(;num&gt;0;num--)&#123; printf(\"%c\",*p); p++; &#125; num=0; &#125; &#125; &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-31 字符串循环左移（20 分）","slug":"jichu7-31","date":"2018-04-15T13:28:00.000Z","updated":"2018-04-15T13:28:59.109Z","comments":true,"path":"2018/04/15/jichu7-31/","link":"","permalink":"/2018/04/15/jichu7-31/","excerpt":"7-31 字符串循环左移（20 分）输入一个字符串和一个非负整数N，要求将字符串循环左移N次。 输入格式：输入在第1行中给出一个不超过100个字符长度的、以回车结束的非空字符串；第2行给出非负整数N。 输出格式：在一行中输出循环左移N次后的字符串。 输入样例：12Hello World!2 输出样例：1llo World!He","text":"7-31 字符串循环左移（20 分）输入一个字符串和一个非负整数N，要求将字符串循环左移N次。 输入格式：输入在第1行中给出一个不超过100个字符长度的、以回车结束的非空字符串；第2行给出非负整数N。 输出格式：在一行中输出循环左移N次后的字符串。 输入样例：12Hello World!2 输出样例：1llo World!He 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(int argc, char const *argv[])&#123; char str[101]; int i = 0; int c; while((c=getchar()) != '\\n')&#123;// 记录字符串 str[i] = (char) c; i++; &#125; str[i] = '\\0'; char *start; start = &amp;str[0]; int sp; scanf(\"%d\", &amp;sp); char sa[101]; //生成新的字符串 sp = sp%(strlen(str)); strcpy(sa, start+sp); *(start + sp) = '\\0'; strcat(sa, start); printf(\"%s\\n\", sa);&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-30 字符串的冒泡排序（20 分）","slug":"jichu7-30","date":"2018-04-15T13:22:00.000Z","updated":"2018-04-15T13:27:46.231Z","comments":true,"path":"2018/04/15/jichu7-30/","link":"","permalink":"/2018/04/15/jichu7-30/","excerpt":"7-30 字符串的冒泡排序（20 分）我们已经知道了将N个整数按从小到大排序的冒泡排序法。本题要求将此方法用于字符串序列，并对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果序列。 输入格式：输入在第1行中给出N和K（1≤K&lt;N≤100），此后N行，每行包含一个长度不超过10的、仅由小写英文字母组成的非空字符串。 输出格式：输出冒泡排序法扫描完第K遍后的中间结果序列，每行包含一个字符串。 输入样例：12345676 2bestcateastafreeday 输出样例：123456bestacatdayeastfree","text":"7-30 字符串的冒泡排序（20 分）我们已经知道了将N个整数按从小到大排序的冒泡排序法。本题要求将此方法用于字符串序列，并对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果序列。 输入格式：输入在第1行中给出N和K（1≤K&lt;N≤100），此后N行，每行包含一个长度不超过10的、仅由小写英文字母组成的非空字符串。 输出格式：输出冒泡排序法扫描完第K遍后的中间结果序列，每行包含一个字符串。 输入样例：12345676 2bestcateastafreeday 输出样例：123456bestacatdayeastfree 1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main()&#123; int m,n; while(scanf(\"%d%d\",&amp;m,&amp;n)!=EOF) &#123; char a[101][11]; char b[11]; int i,j; for(i=0;i&lt;m;i++) scanf(\"%s\",&amp;*a[i]); for(j=0;j&lt;n;j++) &#123; for(i=0;i&lt;m-1-j;i++) &#123; if(strcmp(a[i],a[i+1])&gt;0) &#123; strcpy(b,a[i]); strcpy(a[i],a[i+1]); strcpy(a[i+1],b); &#125; &#125; &#125; for(i=0;i&lt;m;i++) printf(\"%s\\n\",a[i]); &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-29 删除字符串中的子串（20 分）","slug":"jichu7-29","date":"2018-04-15T13:20:00.000Z","updated":"2018-04-15T13:21:08.970Z","comments":true,"path":"2018/04/15/jichu7-29/","link":"","permalink":"/2018/04/15/jichu7-29/","excerpt":"7-29 删除字符串中的子串（20 分）输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。 输入格式：输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。 输出格式：在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。 输入样例：12Tomcat is a male ccatatcat 输出样例：1Tom is a male","text":"7-29 删除字符串中的子串（20 分）输入2个字符串S1和S2，要求删除字符串S1中出现的所有子串S2，即结果字符串中不能包含S2。 输入格式：输入在2行中分别给出不超过80个字符长度的、以回车结束的2个非空字符串，对应S1和S2。 输出格式：在一行中输出删除字符串S1中出现的所有子串S2后的结果字符串。 输入样例：12Tomcat is a male ccatatcat 输出样例：1Tom is a male 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;stdio.h&gt;char s1[80]=&#123;\"\"&#125;;char s2[80]=&#123;\"\"&#125;;int main()&#123; int i,j; int m=0;//s1共输入m个字符 int n=0;//s2共输入n个字符 int comp=0;//用于标记是否重复 int a,b; int c; for(i=0;;i++)&#123; scanf(\"%c\",&amp;s1[i]); if(s1[i]=='\\n')&#123; break; &#125; m++; &#125; for(j=0;;j++)&#123; scanf(\"%c\",&amp;s2[j]); if(s2[j]=='\\n')&#123; break; &#125; n++; &#125; for(a=0;a&lt;m;a++)&#123; if(s1[a]==s2[0])&#123; comp=1; &#125; for(b=0;b&lt;=n-1;b++)&#123; if(s1[a+b]!=s2[b])&#123; comp=0; &#125; &#125; if(comp==1)&#123; m=m-n; for(c=a;c&lt;m;c++)&#123; s1[c]=s1[c+n]; &#125; a=-1;//此处a=-1而不是0，防止s1数组初始位置开始即与s2重合 s1[m]='\\0'; comp=0; &#125; &#125; for(int i=0;i&lt;m;i++)&#123; printf(\"%c\",s1[i]); &#125;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-28 猴子选大王（20 分）","slug":"jichu7-28","date":"2018-04-15T13:18:00.000Z","updated":"2018-04-15T13:19:38.150Z","comments":true,"path":"2018/04/15/jichu7-28/","link":"","permalink":"/2018/04/15/jichu7-28/","excerpt":"7-28 猴子选大王（20 分）一群猴子要选新猴王。新猴王的选择方法是：让N只候选猴子围成一圈，从某位置起顺序编号为1~N号。从第1号开始报数，每轮从1报到3，凡报到3的猴子即退出圈子，接着又从紧邻的下一只猴子开始同样的报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？ 输入格式：输入在一行中给一个正整数N（≤1000）。 输出格式：在一行中输出当选猴王的编号。 输入样例：111 输出样例：17","text":"7-28 猴子选大王（20 分）一群猴子要选新猴王。新猴王的选择方法是：让N只候选猴子围成一圈，从某位置起顺序编号为1~N号。从第1号开始报数，每轮从1报到3，凡报到3的猴子即退出圈子，接着又从紧邻的下一只猴子开始同样的报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？ 输入格式：输入在一行中给一个正整数N（≤1000）。 输出格式：在一行中输出当选猴王的编号。 输入样例：111 输出样例：17 12345678910#include &lt;stdio.h&gt;int main()&#123; int m,i,s=0; scanf(\"%d\",&amp;m); for(i=1 ; i&lt;=m ; i++) s = (s+3) % i ; printf(\"%d\\n\",s+1); return 0 ;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-27 冒泡法排序（20 分）","slug":"jichu7-27","date":"2018-04-15T13:17:00.000Z","updated":"2018-04-15T13:17:43.937Z","comments":true,"path":"2018/04/15/jichu7-27/","link":"","permalink":"/2018/04/15/jichu7-27/","excerpt":"7-27 冒泡法排序（20 分）将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−1个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。 本题要求对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果数列。 输入格式：输入在第1行中给出N和K（1≤K&lt;N≤100），在第2行中给出N个待排序的整数，数字间以空格分隔。 输出格式：在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。 输入样例：126 22 3 5 1 6 4 输出样例：12 1 3 4 5 6","text":"7-27 冒泡法排序（20 分）将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−1个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。 本题要求对任意给定的K（&lt;N），输出扫描完第K遍后的中间结果数列。 输入格式：输入在第1行中给出N和K（1≤K&lt;N≤100），在第2行中给出N个待排序的整数，数字间以空格分隔。 输出格式：在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。 输入样例：126 22 3 5 1 6 4 输出样例：12 1 3 4 5 6 1234567891011121314151617181920212223242526272829303132333435363738394041#include&lt;stdio.h&gt;#define MAX 101int main (void)&#123; //====region for 前期输入工作======= int A[MAX] = &#123;0&#125;; int N,K; scanf(\"%d %d\", &amp;N, &amp;K); int count; for ( count = 0; count &lt; N; count++)&#123; scanf(\"%d\", &amp;A[count]); &#125; //====endregion===================== //=====实现冒泡排序================= int i; int tmp; for ( i =0;i &lt; K; i++)&#123; for (count = 0;count &lt; N - i - 1; count++)&#123; if ( A[count] &gt; A[count + 1])&#123; tmp = A[count + 1]; A[count + 1] = A[count]; A[count] = tmp; &#125; &#125; &#125; //========冒泡算法结束=========================== //=========打印结果========================= for ( i =0; i&lt; N-1; i++)&#123; printf(\"%d \", A[i]); &#125; printf(\"%d\", A[N-1]); //========打印结束========================= return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-26 单词长度（15 分）","slug":"jichu7-26","date":"2018-04-15T13:15:00.000Z","updated":"2018-04-15T13:16:16.903Z","comments":true,"path":"2018/04/15/jichu7-26/","link":"","permalink":"/2018/04/15/jichu7-26/","excerpt":"7-26 单词长度（15 分）你的程序要读入一行文本，其中以空格分隔为若干个单词，以.结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如it&#39;s算一个单词，长度为4。注意，行中可能出现连续的空格；最后的.不计算在内。 输入格式：输入在一行中给出一行文本，以.结束 提示：用scanf(&quot;%c&quot;,...);来读入一个字符，直到读到.为止。 输出格式：在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。 输入样例：1It&apos;s great to see you here. 输出样例：14 5 2 3 3 4","text":"7-26 单词长度（15 分）你的程序要读入一行文本，其中以空格分隔为若干个单词，以.结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如it&#39;s算一个单词，长度为4。注意，行中可能出现连续的空格；最后的.不计算在内。 输入格式：输入在一行中给出一行文本，以.结束 提示：用scanf(&quot;%c&quot;,...);来读入一个字符，直到读到.为止。 输出格式：在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。 输入样例：1It&apos;s great to see you here. 输出样例：14 5 2 3 3 4 123456789101112131415161718192021222324252627282930313233343536#include&lt;stdio.h&gt;int main()&#123; char c; int cot=0,ans[100]= &#123;0&#125;,i=0; while ((c=getchar())!='.') &#123; if (c!=' ') &#123; cot++; ans[i]=cot; &#125; else if (cot!=0) &#123; ans[i] = cot; i++; cot=0; &#125; &#125; i=0; if (ans[0]==0) printf(\"%d\",ans[0]); else while(ans[i]!=0) &#123; if (i==0) printf(\"%d\",ans[i]); else printf(\" %d\",ans[i]); i++; &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-25 念数字（15 分）","slug":"jichu7-25","date":"2018-04-15T13:11:00.000Z","updated":"2018-04-15T13:13:27.636Z","comments":true,"path":"2018/04/15/jichu7-25/","link":"","permalink":"/2018/04/15/jichu7-25/","excerpt":"7-25 念数字（15 分）输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出fu字。十个数字对应的拼音如下： 123456789100: ling1: yi2: er3: san4: si5: wu6: liu7: qi8: ba9: jiu 输入格式：输入在一行中给出一个整数，如：1234。 提示：整数包括负数、零和正数。 输出格式：在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如 yi er san si。 输入样例：1-600 输出样例：1fu liu ling ling","text":"7-25 念数字（15 分）输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出fu字。十个数字对应的拼音如下： 123456789100: ling1: yi2: er3: san4: si5: wu6: liu7: qi8: ba9: jiu 输入格式：输入在一行中给出一个整数，如：1234。 提示：整数包括负数、零和正数。 输出格式：在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如 yi er san si。 输入样例：1-600 输出样例：1fu liu ling ling 123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;int main()&#123; int n; scanf(\"%d\", &amp;n); if (n &lt; 0) &#123; printf(\"fu \"); n = -n; &#125; int t = n,mask = 1; while(t &gt; 9) &#123; t /= 10; mask *= 10; &#125; char *s[] = &#123; \"ling\", \"yi\", \"er\", \"san\", \"si\", \"wu\", \"liu\", \"qi\", \"ba\", \"jiu\" &#125;; int d; while (mask &gt; 0) &#123; d = n / mask; printf(\"%s\", s[d]); if (mask &gt; 9) printf(\" \"); n %= mask; mask /= 10; &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-24 约分最简分式（15 分）","slug":"jichu7-24","date":"2018-04-15T13:10:00.000Z","updated":"2018-04-15T13:11:06.820Z","comments":true,"path":"2018/04/15/jichu7-24/","link":"","permalink":"/2018/04/15/jichu7-24/","excerpt":"7-24 约分最简分式（15 分）分数可以表示为分子/分母的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。 输入格式：输入在一行中给出一个分数，分子和分母中间以斜杠/分隔，如：12/34表示34分之12。分子和分母都是正整数（不包含0，如果不清楚正整数的定义的话）。 提示：在scanf的格式字符串中加入/，让scanf来处理这个斜杠。 输出格式：在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用分子/分母的形式表示分数。如 5/6表示6分之5。 输入样例：166/120 输出样例：111/20","text":"7-24 约分最简分式（15 分）分数可以表示为分子/分母的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。 输入格式：输入在一行中给出一个分数，分子和分母中间以斜杠/分隔，如：12/34表示34分之12。分子和分母都是正整数（不包含0，如果不清楚正整数的定义的话）。 提示：在scanf的格式字符串中加入/，让scanf来处理这个斜杠。 输出格式：在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用分子/分母的形式表示分数。如 5/6表示6分之5。 输入样例：166/120 输出样例：111/20 123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main()&#123; int zi,mu,i; scanf(\"%d/%d\",&amp;zi,&amp;mu); for(i=mu;i&gt;=2;i--)&#123; if(zi%i==0&amp;&amp;mu%i==0)&#123; zi=zi/i; mu=mu/i; &#125; &#125; printf(\"%d/%d\",zi,mu); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-23 币值转换（20 分）","slug":"jichu7-23","date":"2018-04-15T13:08:00.000Z","updated":"2018-04-15T13:09:41.614Z","comments":true,"path":"2018/04/15/jichu7-23/","link":"","permalink":"/2018/04/15/jichu7-23/","excerpt":"7-23 币值转换（20 分）输入一个整数（位数不超过9位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如23108元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字0-9，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是23108元应被转换输出为“cWdQbBai”元。 输入格式：输入在一行中给出一个不超过9位的非负整数。 输出格式：在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。 输入样例1：1813227345 输出样例1：1iYbQdBcScWhQdBeSf 输入样例2：16900 输出样例2：1gQjB","text":"7-23 币值转换（20 分）输入一个整数（位数不超过9位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如23108元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字0-9，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是23108元应被转换输出为“cWdQbBai”元。 输入格式：输入在一行中给出一个不超过9位的非负整数。 输出格式：在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。 输入样例1：1813227345 输出样例1：1iYbQdBcScWhQdBeSf 输入样例2：16900 输出样例2：1gQjB 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include &lt;stdio.h&gt;int main()&#123; char a[10]=&#123;'a','b','c','d','e','f','g','h','i','j'&#125;; char b[10]=&#123;'0','S','B','Q','W','S','B','Q','Y'&#125;; int c[10]=&#123;0&#125;; int flag[10]=&#123;1,1,1,1,1,1,1,1,1,1,&#125;; long n; int len=0; scanf(\"%ld\",&amp;n); long t=n; int j; int hou=0; while(t&gt;0)&#123; c[len]=t%10; t/=10; len++; &#125; if(n==0) printf(\"a\"); else&#123; for(j=0;j&lt;len;j++)&#123; if(c[j]==0)&#123; flag[j]=0; &#125; else break; &#125; for(j=len-1;j&gt;=0;j--)&#123; if(j==len-1)&#123; if(len==1)&#123; printf(\"%c\",a[c[j]]); break; &#125; else if(flag[j]==1&amp;&amp;flag[j-1]==0)&#123; printf(\"%c%c\",a[c[j]],b[j]); if(j==8||j&lt;=4) break; else if(j&gt;4&amp;&amp;j&lt;8)&#123; printf(\"W\"); break; &#125; &#125; else printf(\"%c%c\",a[c[j]],b[j]); &#125; else if(j&gt;4)&#123; if(c[j]!=0&amp;&amp;flag[j]==1&amp;&amp;flag[j-1]==0)&#123; printf(\"%c%cW\",a[c[j]],b[j]); break; &#125; else if(c[j]!=0) printf(\"%c%c\",a[c[j]],b[j]); else if(c[j]==0&amp;&amp;c[j-1]!=0) printf(\"a\"); &#125; else if(j==4)&#123; if(c[j]!=0&amp;&amp;flag[j]==1&amp;&amp;flag[j-1]==0)&#123; printf(\"%c%c\",a[c[j]],b[j]); break; &#125; else if(c[j]!=0) printf(\"%c%c\",a[c[j]],b[j]); else if(c[j]==0&amp;&amp;c[j-1]!=0) printf(\"Wa\"); &#125; else if(j&lt;4&amp;&amp;j&gt;0)&#123; if(c[j]!=0&amp;&amp;flag[j]==1&amp;&amp;flag[j-1]==0)&#123; printf(\"%c%c\",a[c[j]],b[j]); break; &#125; else if(c[j]!=0) printf(\"%c%c\",a[c[j]],b[j]); else if(c[j]==0&amp;&amp;c[j-1]!=0) printf(\"a\"); &#125; else if(j==0)&#123; printf(\"%c\",a[c[j]]); &#125; &#125; &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-22 龟兔赛跑（20 分）","slug":"jichu7-22","date":"2018-04-15T13:04:00.000Z","updated":"2018-04-15T13:05:18.949Z","comments":true,"path":"2018/04/15/jichu7-22/","link":"","permalink":"/2018/04/15/jichu7-22/","excerpt":"7-22 龟兔赛跑（20 分）乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？ 输入格式：输入在一行中给出比赛时间T（分钟）。 输出格式：在一行中输出比赛的结果：乌龟赢输出@_@，兔子赢输出^_^，平局则输出-_-；后跟1空格，再输出胜利者跑完的距离。 输入样例：1242 输出样例：1@_@ 726","text":"7-22 龟兔赛跑（20 分）乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？ 输入格式：输入在一行中给出比赛时间T（分钟）。 输出格式：在一行中输出比赛的结果：乌龟赢输出@_@，兔子赢输出^_^，平局则输出-_-；后跟1空格，再输出胜利者跑完的距离。 输入样例：1242 输出样例：1@_@ 726 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;stdio.h&gt;int main()&#123; int T, i; int rabbitT=0; //兔子跑的时间 scanf(\"%d\",&amp;T); if(T&lt;10) &#123; printf(\"^_^ %d\\n\",T*9); return 0; &#125; rabbitT=10; for(i=10;i&lt;=T;i++) &#123; if(i%10==0) //每10分钟回头，比较 &#123; if(rabbitT*9&gt;i*3 &amp;&amp; (T-i)&gt;=30) //兔子大于乌龟，剩余时间不小于30分钟 i=i+29; //不是i=i+30, 最后还有i++ else if(rabbitT*9&gt;i*3 &amp;&amp; (T-i)&lt;30) //兔子大于乌龟，剩余时间小于30分钟 &#123; i=T; break; &#125; else if(T-i&gt;=10) //兔子小于乌龟，剩余时间不小于10分钟，兔子真正跑的时间+10 &#123; rabbitT+=10; i=i+9; &#125; else //兔子小于乌龟，剩余时间小于10分钟, 兔子真正跑的时间+T-i &#123; rabbitT+=T-i; i=T; break; &#125; &#125; &#125; if(i*3&gt;rabbitT*9) printf(\"@_@ %d\\n\",i*3); else if(i*3&lt;rabbitT*9) printf(\"^_^ %d\\n\",rabbitT*9); else printf(\"-_- %d\\n\",rabbitT*9); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-21 求特殊方程的正整数解（15 分）","slug":"jichu7-21","date":"2018-04-15T12:51:00.000Z","updated":"2018-04-15T12:53:30.815Z","comments":true,"path":"2018/04/15/jichu7-21/","link":"","permalink":"/2018/04/15/jichu7-21/","excerpt":"7-21 求特殊方程的正整数解（15 分）本题要求对任意给定的正整数N，求方程X2+Y2=N的全部正整数解。 输入格式：输入在一行中给出正整数N（≤10000）。 输出格式：输出方程X2+Y2=N的全部正整数解，其中X≤Y。每组解占1行，两数字间以1空格分隔，按X的递增顺序输出。如果没有解，则输出No Solution。 输入样例1：1884 输出样例1：1210 2820 22 输入样例2：111 输出样例2：1No Solution","text":"7-21 求特殊方程的正整数解（15 分）本题要求对任意给定的正整数N，求方程X2+Y2=N的全部正整数解。 输入格式：输入在一行中给出正整数N（≤10000）。 输出格式：输出方程X2+Y2=N的全部正整数解，其中X≤Y。每组解占1行，两数字间以1空格分隔，按X的递增顺序输出。如果没有解，则输出No Solution。 输入样例1：1884 输出样例1：1210 2820 22 输入样例2：111 输出样例2：1No Solution 12345678910111213141516171819#include &lt;stdio.h&gt; int main(void) &#123; int n, x, y; int flag = 0; scanf(\"%d\", &amp;n); int half = n / 2; for(x = 1; x &lt;= half; ++x) &#123; for(y = x; y &lt;= half; ++y) &#123; if(x * x + y * y == n) &#123; flag = 1; printf(\"%d %d\\n\", x, y); &#125; &#125; &#125; if(!flag) printf(\"No Solution\\n\"); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-20 打印九九口诀表（15 分）","slug":"jichu7-20","date":"2018-04-15T12:49:00.000Z","updated":"2018-04-15T12:51:03.820Z","comments":true,"path":"2018/04/15/jichu7-20/","link":"","permalink":"/2018/04/15/jichu7-20/","excerpt":"7-20 打印九九口诀表（15 分）下面是一个完整的下三角九九口诀表： 1234567891*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 本题要求对任意给定的一位正整数N，输出从1*1到N*N的部分口诀表。 输入格式：输入在一行中给出一个正整数N（1≤N≤9）。 输出格式：输出下三角N*N部分口诀表，其中等号右边数字占4位、左对齐。 输入样例：14 输出样例：12341*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16","text":"7-20 打印九九口诀表（15 分）下面是一个完整的下三角九九口诀表： 1234567891*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 本题要求对任意给定的一位正整数N，输出从1*1到N*N的部分口诀表。 输入格式：输入在一行中给出一个正整数N（1≤N≤9）。 输出格式：输出下三角N*N部分口诀表，其中等号右边数字占4位、左对齐。 输入样例：14 输出样例：12341*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16 123456789101112#include &lt;stdio.h&gt; int main(void) &#123; int i, j, n; scanf(\"%d\", &amp;n); for(i = 1; i &lt;= n; ++i) &#123; for(j = 1; j &lt;= i; ++j) &#123; printf(\"%d*%d=%-4d\", j, i, i * j); &#125; printf(\"\\n\"); &#125; return 0; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-19 支票面额（15 分）","slug":"jichu7-19","date":"2018-04-15T12:47:00.000Z","updated":"2018-04-15T12:48:38.963Z","comments":true,"path":"2018/04/15/jichu7-19/","link":"","permalink":"/2018/04/15/jichu7-19/","excerpt":"7-19 支票面额（15 分）一个采购员去银行兑换一张y元f分的支票，结果出纳员错给了f元y分。采购员用去了n分之后才发觉有错，于是清点了余额尚有2y元2f分，问该支票面额是多少？ 输入格式：输入在一行中给出小于100的正整数n。 输出格式：在一行中按格式y.f输出该支票的原始面额。如果无解，则输出No Solution。 输入样例1：123 输出样例1：125.51 输入样例2：122 输出样例2：1No Solution","text":"7-19 支票面额（15 分）一个采购员去银行兑换一张y元f分的支票，结果出纳员错给了f元y分。采购员用去了n分之后才发觉有错，于是清点了余额尚有2y元2f分，问该支票面额是多少？ 输入格式：输入在一行中给出小于100的正整数n。 输出格式：在一行中按格式y.f输出该支票的原始面额。如果无解，则输出No Solution。 输入样例1：123 输出样例1：125.51 输入样例2：122 输出样例2：1No Solution 123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main()&#123; int n,i,j,count=0; scanf(\"%d\",&amp;n); for(i=0;i&lt;100;i++) for(j=0;j&lt;100;j++) if(98*j-199*i-n==0)&#123; count=1; printf(\"%d.%d\", i, j); &#125; if(count==0)printf(\"No Solution\"); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-18 二分法求多项式单根（20 分）","slug":"jichu7-18","date":"2018-04-15T12:43:00.000Z","updated":"2018-04-15T12:43:25.932Z","comments":true,"path":"2018/04/15/jichu7-18/","link":"","permalink":"/2018/04/15/jichu7-18/","excerpt":"7-18 二分法求多项式单根（20 分）二分法求函数根的原理为：如果连续函数f(x)在区间[a,b]的两个端点取值异号，即f(a)f(b)&lt;0，则它在这个区间内至少存在1个根r，即f(r)=0。 二分法的步骤为： 检查区间长度，如果小于给定阈值，则停止，输出区间中点(a+b)/2；否则 如果f(a)f(b)&lt;0，则计算中点的值f((a+b)/2)； 如果f((a+b)/2)正好为0，则(a+b)/2就是要求的根；否则 如果f((a+b)/2)与f(a)同号，则说明根在区间[(a+b)/2,b]，令a=(a+b)/2，重复循环； 如果f((a+b)/2)与f(b)同号，则说明根在区间[a,(a+b)/2]，令b=(a+b)/2，重复循环。 本题目要求编写程序，计算给定3阶多项式f(x)=a3x3+a2x2+a1x+a0在给定区间[a,b]内的根。 输入格式：输入在第1行中顺序给出多项式的4个系数a3、a2、a1、a0，在第2行中顺序给出区间端点a和b。题目保证多项式在给定区间内存在唯一单根。 输出格式：在一行中输出该多项式在该区间内的根，精确到小数点后2位。 输入样例：123 -1 -3 1-0.5 0.5 输出样例：10.33","text":"7-18 二分法求多项式单根（20 分）二分法求函数根的原理为：如果连续函数f(x)在区间[a,b]的两个端点取值异号，即f(a)f(b)&lt;0，则它在这个区间内至少存在1个根r，即f(r)=0。 二分法的步骤为： 检查区间长度，如果小于给定阈值，则停止，输出区间中点(a+b)/2；否则 如果f(a)f(b)&lt;0，则计算中点的值f((a+b)/2)； 如果f((a+b)/2)正好为0，则(a+b)/2就是要求的根；否则 如果f((a+b)/2)与f(a)同号，则说明根在区间[(a+b)/2,b]，令a=(a+b)/2，重复循环； 如果f((a+b)/2)与f(b)同号，则说明根在区间[a,(a+b)/2]，令b=(a+b)/2，重复循环。 本题目要求编写程序，计算给定3阶多项式f(x)=a3x3+a2x2+a1x+a0在给定区间[a,b]内的根。 输入格式：输入在第1行中顺序给出多项式的4个系数a3、a2、a1、a0，在第2行中顺序给出区间端点a和b。题目保证多项式在给定区间内存在唯一单根。 输出格式：在一行中输出该多项式在该区间内的根，精确到小数点后2位。 输入样例：123 -1 -3 1-0.5 0.5 输出样例：10.33 1234567891011121314151617181920212223242526272829303132333435#include &lt;stdio.h&gt;#include &lt;math.h&gt;double a3, a2, a1, a0;double f(double a)&#123; return a3*pow(a,3)+a2*pow(a,2)+a1*a+a0;&#125;int main()&#123; int ok=1; double a,b; scanf(\"%lf%lf%lf%lf\",&amp;a3,&amp;a2,&amp;a1,&amp;a0); scanf(\"%lf%lf\",&amp;a,&amp;b); while((b-a)&gt;0.001) &#123; if(f((a+b)/2)==0) &#123; printf(\"%.2f\\n\",(a+b)/2); ok=0; break; &#125; else if(f((a+b)/2)*f(a)&gt;0) &#123; a=(a+b)/2; &#125; else// if(f((a+b)/2)*f(b)&gt;0) &#123; b=(a+b)/2; &#125; &#125; if(ok) printf(\"%.2f\\n\",(a+b)/2); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-17 爬动的蠕虫（15 分）","slug":"jichu7-17","date":"2018-04-15T12:40:00.000Z","updated":"2018-04-15T12:41:14.921Z","comments":true,"path":"2018/04/15/jichu7-17/","link":"","permalink":"/2018/04/15/jichu7-17/","excerpt":"7-17 爬动的蠕虫（15 分）一条蠕虫长1寸，在一口深为N寸的井的底部。已知蠕虫每1分钟可以向上爬U寸，但必须休息1分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？ 这里要求不足1分钟按1分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为0）。 输入格式：输入在一行中顺序给出3个正整数N、U、D，其中D&lt;U，N不超过100。 输出格式：在一行中输出蠕虫爬出井的时间，以分钟为单位。 输入样例：112 3 1 输出样例：111","text":"7-17 爬动的蠕虫（15 分）一条蠕虫长1寸，在一口深为N寸的井的底部。已知蠕虫每1分钟可以向上爬U寸，但必须休息1分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？ 这里要求不足1分钟按1分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为0）。 输入格式：输入在一行中顺序给出3个正整数N、U、D，其中D&lt;U，N不超过100。 输出格式：在一行中输出蠕虫爬出井的时间，以分钟为单位。 输入样例：112 3 1 输出样例：111 12345678910111213141516171819202122232425262728293031/*假设爬行一分钟，休息一分钟*/ #include&lt;stdio.h&gt; int main() &#123; int n, u, d;//井口高度，上爬量和下滑量 int time = 0, distance = 0;//虫虫消耗的时间(分钟)，距离井底的距离(寸) scanf(\"%i %i %i\", &amp;n, &amp;u, &amp;d); /** * 第1分钟，爬； * 第2分钟，滑； * 第3分钟，爬； * 第4分钟，滑； * ... * 时间为偶数，虫虫下滑； * 时间为奇数，虫虫上爬。 */ do &#123; time++; if (time % 2 != 0) &#123; distance += u; &#125; else &#123; distance -= d; &#125; &#125; while (distance &lt; n); printf(\"%i\\n\", time); return 0; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-16 求符合给定条件的整数集（15 分）","slug":"jichu7-16","date":"2018-04-15T12:36:00.000Z","updated":"2018-04-15T12:38:44.786Z","comments":true,"path":"2018/04/15/jichu7-16/","link":"","permalink":"/2018/04/15/jichu7-16/","excerpt":"7-16 求符合给定条件的整数集（15 分）给定不超过6的正整数A，考虑从A开始的连续4个数字。请输出所有由它们组成的无重复数字的3位数。 输入格式：输入在一行中给出A。 输出格式：输出满足条件的的3位数，要求从小到大，每行6个整数。整数间以空格分隔，但行末不能有多余空格。 输入样例：12 输出样例：1234234 235 243 245 253 254324 325 342 345 352 354423 425 432 435 452 453523 524 532 534 542 543","text":"7-16 求符合给定条件的整数集（15 分）给定不超过6的正整数A，考虑从A开始的连续4个数字。请输出所有由它们组成的无重复数字的3位数。 输入格式：输入在一行中给出A。 输出格式：输出满足条件的的3位数，要求从小到大，每行6个整数。整数间以空格分隔，但行末不能有多余空格。 输入样例：12 输出样例：1234234 235 243 245 253 254324 325 342 345 352 354423 425 432 435 452 453523 524 532 534 542 543 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int main()&#123; int start; scanf(\"%d\", &amp;start); int end; int n = 0; end = start + 4; for(int i = start; i&lt;end; i++)&#123; for(int j = start; j&lt;end; j++)&#123; if(i == j) continue; for(int k = start; k&lt;end; k++)&#123; if(k == j) continue; if(k == i) continue; n++; if(n%6)&#123; printf(\"%d \", i*100+j*10+k); &#125;else&#123; printf(\"%d\\n\", i*100+j*10+k); &#125; &#125; &#125; &#125;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-15 计算圆周率（15 分）","slug":"jichu7-15","date":"2018-04-15T12:33:00.000Z","updated":"2018-04-15T12:34:21.776Z","comments":true,"path":"2018/04/15/jichu7-15/","link":"","permalink":"/2018/04/15/jichu7-15/","excerpt":"7-15 计算圆周率（15 分）根据下面关系式，求圆周率的值，直到最后一项的值小于给定阈值。 2π=1+31+3×52!+3×5×73!+⋯+3×5×7×⋯×(2n+1)n!+⋯ 输入格式：输入在一行中给出小于1的阈值。 输出格式：在一行中输出满足阈值条件的近似圆周率，输出到小数点后6位。 输入样例：10.01 输出样例：13.132157","text":"7-15 计算圆周率（15 分）根据下面关系式，求圆周率的值，直到最后一项的值小于给定阈值。 2π=1+31+3×52!+3×5×73!+⋯+3×5×7×⋯×(2n+1)n!+⋯ 输入格式：输入在一行中给出小于1的阈值。 输出格式：在一行中输出满足阈值条件的近似圆周率，输出到小数点后6位。 输入样例：10.01 输出样例：13.132157 12345678910111213141516171819#include&lt;stdio.h&gt;int main()&#123; int i = 1; double up=1.0f; double down=1.0f; double sum=1.0f;//右边式子第一项为1，在此直接处理 double n; scanf(\"%lf\",&amp;n);//输入阈值 do&#123; up*=i;//分子 down*=(2.0*i+1.0);//分母（奇数相乘，从1*3开始） i++; sum+=(up/down);//每一项的和累加 &#125;while(up/down&gt;=n);//如果当前项小于阈值，退出循环 printf(\"%.6lf\",2.0*sum);//最后不要忘记乘以2 return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-14 求整数段和（15 分）","slug":"jichu7-14","date":"2018-04-15T12:31:00.000Z","updated":"2018-04-15T12:32:27.967Z","comments":true,"path":"2018/04/15/jichu7-14/","link":"","permalink":"/2018/04/15/jichu7-14/","excerpt":"7-14 求整数段和（15 分）给定两个整数A和B，输出从A到B的所有整数以及这些数的和。 输入格式：输入在一行中给出2个整数A和B，其中−100≤A≤B≤100，其间以空格分隔。 输出格式：首先顺序输出从A到B的所有整数，每5个数字占一行，每个数字占5个字符宽度，向右对齐。最后在一行中按Sum = X的格式输出全部数字的和X。 输入样例：1-3 8 输出样例：1234 -3 -2 -1 0 1 2 3 4 5 6 7 8Sum = 30","text":"7-14 求整数段和（15 分）给定两个整数A和B，输出从A到B的所有整数以及这些数的和。 输入格式：输入在一行中给出2个整数A和B，其中−100≤A≤B≤100，其间以空格分隔。 输出格式：首先顺序输出从A到B的所有整数，每5个数字占一行，每个数字占5个字符宽度，向右对齐。最后在一行中按Sum = X的格式输出全部数字的和X。 输入样例：1-3 8 输出样例：1234 -3 -2 -1 0 1 2 3 4 5 6 7 8Sum = 30 123456789101112131415161718192021#include&lt;stdio.h&gt;int main()&#123; int a,b,i,cot=0,sum=0;//添加计数器 scanf(\"%d %d\",&amp;a,&amp;b);//输入区间 //以a为起点，如果a小于b，每次a累加1 for(i=a;i&lt;=b;i++)&#123; printf(\"%5d\",i);//题目要求占5个字符宽 cot++;//每输出一次，计数器累加1 if(cot%5==0&amp;&amp;i!=b)//如果当前计数器的值能被5整除那么换行 printf(\"\\n\"); &#125; printf(\"\\n\");//执行完循环后，换行输入总和 for(i=a;i&lt;=b;i++) sum+=i; printf(\"Sum = %d\",sum); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-13 日K蜡烛图（15 分）","slug":"jichu7-13","date":"2018-04-15T12:27:00.000Z","updated":"2018-04-15T12:30:08.136Z","comments":true,"path":"2018/04/15/jichu7-13/","link":"","permalink":"/2018/04/15/jichu7-13/","excerpt":"7-13 日K蜡烛图（15 分）股票价格涨跌趋势，常用蜡烛图技术中的K线图来表示，分为按日的日K线、按周的周K线、按月的月K线等。以日K线为例，每天股票价格从开盘到收盘走完一天，对应一根蜡烛小图，要表示四个价格：开盘价格Open（早上刚刚开始开盘买卖成交的第1笔价格）、收盘价格Close（下午收盘时最后一笔成交的价格）、中间的最高价High和最低价Low。 如果CloseOpen，表示为“R-Hollow”（即“空心红蜡烛”）；如果Open等于Close，则为“R-Cross”（即“十字红蜡烛”）。如果Low比Open和Close低，称为“Lower Shadow”（即“有下影线”），如果High比Open和Close高，称为“Upper Shadow”（即“有上影线”）。请编程序，根据给定的四个价格组合，判断当日的蜡烛是一根什么样的蜡烛。 输入格式：输入在一行中给出4个正实数，分别对应Open、High、Low、Close，其间以空格分隔。 输出格式：在一行中输出日K蜡烛的类型。如果有上、下影线，则在类型后加上with 影线类型。如果两种影线都有，则输出with Lower Shadow and Upper Shadow。 输入样例1：15.110 5.250 5.100 5.105 输出样例1：1BW-Solid with Lower Shadow and Upper Shadow 输入样例2：15.110 5.110 5.110 5.110 输出样例2：1R-Cross 输入样例3：15.110 5.125 5.112 5.126 输出样例3：1R-Hollow","text":"7-13 日K蜡烛图（15 分）股票价格涨跌趋势，常用蜡烛图技术中的K线图来表示，分为按日的日K线、按周的周K线、按月的月K线等。以日K线为例，每天股票价格从开盘到收盘走完一天，对应一根蜡烛小图，要表示四个价格：开盘价格Open（早上刚刚开始开盘买卖成交的第1笔价格）、收盘价格Close（下午收盘时最后一笔成交的价格）、中间的最高价High和最低价Low。 如果CloseOpen，表示为“R-Hollow”（即“空心红蜡烛”）；如果Open等于Close，则为“R-Cross”（即“十字红蜡烛”）。如果Low比Open和Close低，称为“Lower Shadow”（即“有下影线”），如果High比Open和Close高，称为“Upper Shadow”（即“有上影线”）。请编程序，根据给定的四个价格组合，判断当日的蜡烛是一根什么样的蜡烛。 输入格式：输入在一行中给出4个正实数，分别对应Open、High、Low、Close，其间以空格分隔。 输出格式：在一行中输出日K蜡烛的类型。如果有上、下影线，则在类型后加上with 影线类型。如果两种影线都有，则输出with Lower Shadow and Upper Shadow。 输入样例1：15.110 5.250 5.100 5.105 输出样例1：1BW-Solid with Lower Shadow and Upper Shadow 输入样例2：15.110 5.110 5.110 5.110 输出样例2：1R-Cross 输入样例3：15.110 5.125 5.112 5.126 输出样例3：1R-Hollow 12345678910111213141516171819202122232425262728#include&lt;stdio.h&gt;int main()&#123; double open,close,high,low; scanf(\"%lf %lf %lf %lf\",&amp;open,&amp;high,&amp;low,&amp;close); &#123; if(close&lt;open) printf(\"BW-Solid\"); else if(close&gt;open) printf(\"R-Hollow\"); else printf(\"R-Cross\"); &#125; &#123;//上下影线都存在的情况，记得加上前面的空格 if((low&lt;open&amp;&amp;low&lt;close)&amp;&amp;(high&gt;open&amp;&amp;high&gt;close)) printf(\" with Lower Shadow and Upper Shadow\"); //下影线 else if(low&lt;open&amp;&amp;low&lt;close) printf(\" with Lower Shadow\"); //上影线 else if(high&gt;open&amp;&amp;high&gt;close) printf(\" with Upper Shadow\"); &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-12 两个数的简单计算器（10 分）","slug":"jichu7-12","date":"2018-04-15T12:25:00.000Z","updated":"2018-04-15T12:26:39.157Z","comments":true,"path":"2018/04/15/jichu7-12/","link":"","permalink":"/2018/04/15/jichu7-12/","excerpt":"7-12 两个数的简单计算器（10 分）本题要求编写一个简单计算器程序，可根据输入的运算符，对2个整数进行加、减、乘、除或求余运算。题目保证输入和输出均不超过整型范围。 输入格式：输入在一行中依次输入操作数1、运算符、操作数2，其间以1个空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。 输出格式：当运算符为+、-、*、/、%时，在一行输出相应的运算结果。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出ERROR。 输入样例1：1-7 / 2 输出样例1：1-3 输入样例2：13 &amp; 6 输出样例2：1ERROR","text":"7-12 两个数的简单计算器（10 分）本题要求编写一个简单计算器程序，可根据输入的运算符，对2个整数进行加、减、乘、除或求余运算。题目保证输入和输出均不超过整型范围。 输入格式：输入在一行中依次输入操作数1、运算符、操作数2，其间以1个空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。 输出格式：当运算符为+、-、*、/、%时，在一行输出相应的运算结果。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出ERROR。 输入样例1：1-7 / 2 输出样例1：1-3 输入样例2：13 &amp; 6 输出样例2：1ERROR 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;int main(void)&#123; int a, b,d; char c; scanf(\"%d %c %d\", &amp;a, &amp;c, &amp;b); switch (c) &#123; case '+': &#123; d = a + b; printf(\"%d\", d); break; &#125; case '-': &#123; d = a - b; printf(\"%d\", d); break; &#125; case'*': &#123; d = a*b; printf(\"%d\", d); break; &#125; case'/': &#123; d = a / b; printf(\"%d\", d); break; &#125; case'%': &#123; d = a%b; printf(\"%d\", d); break; &#125; default: printf(\"ERROR\\n\"); break; &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-11 分段计算居民水费（10 分）","slug":"jichu7-11","date":"2018-04-15T12:14:00.000Z","updated":"2018-04-15T12:15:48.696Z","comments":true,"path":"2018/04/15/jichu7-11/","link":"","permalink":"/2018/04/15/jichu7-11/","excerpt":"7-11 分段计算居民水费（10 分）为鼓励居民节约用水，自来水公司采取按用水量阶梯式计价的办法，居民应交水费y（元）与月用水量x（吨）相关：当x不超过15吨时，y=4x/3；超过后，y=2.5x−17.5。请编写程序实现水费的计算。 输入格式：输入在一行中给出非负实数x。 输出格式：在一行输出应交的水费，精确到小数点后2位。 输入样例1：112 输出样例1：116.00 输入样例2：116 输出样例2：122.50","text":"7-11 分段计算居民水费（10 分）为鼓励居民节约用水，自来水公司采取按用水量阶梯式计价的办法，居民应交水费y（元）与月用水量x（吨）相关：当x不超过15吨时，y=4x/3；超过后，y=2.5x−17.5。请编写程序实现水费的计算。 输入格式：输入在一行中给出非负实数x。 输出格式：在一行输出应交的水费，精确到小数点后2位。 输入样例1：112 输出样例1：116.00 输入样例2：116 输出样例2：122.50 12345678910111213#include &lt;stdio.h&gt;int main()&#123; double x,y; scanf(\"%lf\",&amp;x); if(x&lt;=15)&#123; y=4*x/3; &#125; else y= 2.5*x-17.5 ; printf(\"%.2lf\\n\",y); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-10 计算工资（15 分）","slug":"jichu7-10","date":"2018-04-15T12:13:00.000Z","updated":"2018-04-15T12:14:02.121Z","comments":true,"path":"2018/04/15/jichu7-10/","link":"","permalink":"/2018/04/15/jichu7-10/","excerpt":"7-10 计算工资（15 分）某公司员工的工资计算方法如下：一周内工作时间不超过40小时，按正常工作时间计酬；超出40小时的工作时间部分，按正常工作时间报酬的1.5倍计酬。员工按进公司时间分为新职工和老职工，进公司不少于5年的员工为老职工，5年以下的为新职工。新职工的正常工资为30元/小时，老职工的正常工资为50元/小时。请按该计酬方式计算员工的工资。 输入格式：输入在一行中给出2个正整数，分别为某员工入职年数和周工作时间，其间以空格分隔。 输出格式：在一行输出该员工的周薪，精确到小数点后2位。 输入样例1：15 40 输出样例1：12000.00 输入样例2：13 50 输出样例2：11650.00","text":"7-10 计算工资（15 分）某公司员工的工资计算方法如下：一周内工作时间不超过40小时，按正常工作时间计酬；超出40小时的工作时间部分，按正常工作时间报酬的1.5倍计酬。员工按进公司时间分为新职工和老职工，进公司不少于5年的员工为老职工，5年以下的为新职工。新职工的正常工资为30元/小时，老职工的正常工资为50元/小时。请按该计酬方式计算员工的工资。 输入格式：输入在一行中给出2个正整数，分别为某员工入职年数和周工作时间，其间以空格分隔。 输出格式：在一行输出该员工的周薪，精确到小数点后2位。 输入样例1：15 40 输出样例1：12000.00 输入样例2：13 50 输出样例2：11650.00 12345678910111213141516#include&lt;stdio.h&gt;int main ()&#123; int y,h; float s; scanf(\"%d %d\",&amp;y,&amp;h); if(y&lt;5)&#123; if(h&gt;40)s=((h-40)*1.5+40)*30; else s=h*30; printf(\"%.2f\",s); &#125;else&#123; if(h&gt;40)s=((h-40)*1.5+40)*50; else s=h*50; printf(\"%.2f\",s); &#125;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-9 用天平找小球（10 分）","slug":"jichu7-9","date":"2018-04-15T12:12:00.000Z","updated":"2018-04-15T12:12:09.305Z","comments":true,"path":"2018/04/15/jichu7-9/","link":"","permalink":"/2018/04/15/jichu7-9/","excerpt":"7-9 用天平找小球（10 分）三个球A、B、C，大小形状相同且其中有一个球与其他球重量不同。要求找出这个不一样的球。 输入格式：输入在一行中给出3个正整数，顺序对应球A、B、C的重量。 输出格式：在一行中输出唯一的那个不一样的球。 输入样例：11 1 2 输出样例：1C","text":"7-9 用天平找小球（10 分）三个球A、B、C，大小形状相同且其中有一个球与其他球重量不同。要求找出这个不一样的球。 输入格式：输入在一行中给出3个正整数，顺序对应球A、B、C的重量。 输出格式：在一行中输出唯一的那个不一样的球。 输入样例：11 1 2 输出样例：1C 12345678910111213141516#include&lt;stdio.h&gt;int main()&#123; int a,b,c; scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;c); if(a==b&amp;&amp;a!=c) printf(\"C\"); if(a==c&amp;&amp;a!=b) printf(\"B\"); if(b==c&amp;&amp;b!=a) printf(\"A\"); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-8 超速判断（10 分）","slug":"jichu7-8","date":"2018-04-15T12:10:00.000Z","updated":"2018-04-15T12:10:24.064Z","comments":true,"path":"2018/04/15/jichu7-8/","link":"","permalink":"/2018/04/15/jichu7-8/","excerpt":"7-8 超速判断（10 分）模拟交通警察的雷达测速仪。输入汽车速度，如果速度超出60 mph，则显示“Speeding”，否则显示“OK”。 输入格式：输入在一行中给出1个不超过500的非负整数，即雷达测到的车速。 输出格式：在一行中输出测速仪显示结果，格式为：Speed: V - S，其中V是车速，S或者是Speeding、或者是OK。 输入样例1：140 输出样例1：1Speed: 40 - OK 输入样例2：175 输出样例2：1Speed: 75 - Speeding","text":"7-8 超速判断（10 分）模拟交通警察的雷达测速仪。输入汽车速度，如果速度超出60 mph，则显示“Speeding”，否则显示“OK”。 输入格式：输入在一行中给出1个不超过500的非负整数，即雷达测到的车速。 输出格式：在一行中输出测速仪显示结果，格式为：Speed: V - S，其中V是车速，S或者是Speeding、或者是OK。 输入样例1：140 输出样例1：1Speed: 40 - OK 输入样例2：175 输出样例2：1Speed: 75 - Speeding 123456789101112#include&lt;stdio.h&gt;int main()&#123; int speed; scanf(\"%d\",&amp;speed); if(speed&lt;=60) printf(\"Speed: %d - OK\",speed); else printf(\"Speed: %d - Speeding\",speed); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-7 12-24小时制（15 分）","slug":"jichu7-7","date":"2018-04-15T12:06:00.000Z","updated":"2018-04-15T12:07:57.848Z","comments":true,"path":"2018/04/15/jichu7-7/","link":"","permalink":"/2018/04/15/jichu7-7/","excerpt":"7-7 12-24小时制（15 分）编写一个程序，要求用户输入24小时制的时间，然后显示12小时制的时间。 输入格式：输入在一行中给出带有中间的:符号（半角的冒号）的24小时制的时间，如12:34表示12点34分。当小时或分钟数小于10时，均没有前导的零，如5:6表示5点零6分。 提示：在scanf的格式字符串中加入:，让scanf来处理这个冒号。 输出格式：在一行中输出这个时间对应的12小时制的时间，数字部分格式与输入的相同，然后跟上空格，再跟上表示上午的字符串AM或表示下午的字符串PM。如5:6 PM表示下午5点零6分。注意，在英文的习惯中，中午12点被认为是下午，所以24小时制的12:00就是12小时制的12:0 PM；而0点被认为是第二天的时间，所以是0:0 AM。 输入样例：121:11 输出样例：19:11 PM","text":"7-7 12-24小时制（15 分）编写一个程序，要求用户输入24小时制的时间，然后显示12小时制的时间。 输入格式：输入在一行中给出带有中间的:符号（半角的冒号）的24小时制的时间，如12:34表示12点34分。当小时或分钟数小于10时，均没有前导的零，如5:6表示5点零6分。 提示：在scanf的格式字符串中加入:，让scanf来处理这个冒号。 输出格式：在一行中输出这个时间对应的12小时制的时间，数字部分格式与输入的相同，然后跟上空格，再跟上表示上午的字符串AM或表示下午的字符串PM。如5:6 PM表示下午5点零6分。注意，在英文的习惯中，中午12点被认为是下午，所以24小时制的12:00就是12小时制的12:0 PM；而0点被认为是第二天的时间，所以是0:0 AM。 输入样例：121:11 输出样例：19:11 PM 1234567891011121314151617181920212223242526#include&lt;stdio.h&gt;int main()&#123; char c; int a, b; scanf(\"%d%c%d\", &amp;a, &amp;c, &amp;b); if (a &gt;= 12) &#123; if (a &gt;= 13)//计算大于等于13点的 &#123; if (a == 24) printf(\"0:%d AM\\n\", b); else &#123; a = a - 12; printf(\"%d:%d PM\\n\", a, b); &#125; &#125; else printf(\"%d:%d PM\\n\", a, b);//计算12点的 &#125; else//计算小于12点的 printf(\"%d:%d AM\\n\", a, b); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-6 混合类型数据格式化输入（5 分）","slug":"jichu7-6","date":"2018-04-15T12:04:00.000Z","updated":"2018-04-15T12:05:58.683Z","comments":true,"path":"2018/04/15/jichu7-6/","link":"","permalink":"/2018/04/15/jichu7-6/","excerpt":"7-6 混合类型数据格式化输入（5 分）本题要求编写程序，顺序读入浮点数1、整数、字符、浮点数2，再按照字符、整数、浮点数1、浮点数2的顺序输出。 输入格式：输入在一行中顺序给出浮点数1、整数、字符、浮点数2，其间以1个空格分隔。 输出格式：在一行中按照字符、整数、浮点数1、浮点数2的顺序输出，其中浮点数保留小数点后2位。 输入样例：12.12 88 c 4.7 输出样例：1c 88 2.12 4.70","text":"7-6 混合类型数据格式化输入（5 分）本题要求编写程序，顺序读入浮点数1、整数、字符、浮点数2，再按照字符、整数、浮点数1、浮点数2的顺序输出。 输入格式：输入在一行中顺序给出浮点数1、整数、字符、浮点数2，其间以1个空格分隔。 输出格式：在一行中按照字符、整数、浮点数1、浮点数2的顺序输出，其中浮点数保留小数点后2位。 输入样例：12.12 88 c 4.7 输出样例：1c 88 2.12 4.70 1234567891011#include &lt;stdio.h&gt; int main()&#123; int a; double b,c; char d; scanf(\"%lf %d %c %lf\",&amp;b,&amp;a,&amp;d,&amp;c); printf(\"%c %d %.2lf %.2lf\",d,a,b,c); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-5 表格输出（5 分）","slug":"jichu7-5","date":"2018-04-15T12:01:00.000Z","updated":"2018-04-15T12:02:17.140Z","comments":true,"path":"2018/04/15/jichu7-5/","link":"","permalink":"/2018/04/15/jichu7-5/","excerpt":"7-5 表格输出（5 分）本题要求编写程序，按照规定格式输出表格。 输入格式：本题目没有输入。 输出格式：要求严格按照给出的格式输出下列表格： 123456789------------------------------------Province Area(km2) Pop.(10K)------------------------------------Anhui 139600.00 6461.00Beijing 16410.54 1180.70Chongqing 82400.00 3144.23Shanghai 6340.50 1360.26Zhejiang 101800.00 4894.00------------------------------------","text":"7-5 表格输出（5 分）本题要求编写程序，按照规定格式输出表格。 输入格式：本题目没有输入。 输出格式：要求严格按照给出的格式输出下列表格： 123456789------------------------------------Province Area(km2) Pop.(10K)------------------------------------Anhui 139600.00 6461.00Beijing 16410.54 1180.70Chongqing 82400.00 3144.23Shanghai 6340.50 1360.26Zhejiang 101800.00 4894.00------------------------------------ 12345678910111213141516#include &lt;stdio.h&gt; int main()&#123; printf(\"------------------------------------\\n\"); printf(\"Province Area(km2) Pop.(10K)\\n\"); printf(\"------------------------------------\\n\"); printf(\"Anhui 139600.00 6461.00\\n\"); printf(\"Beijing 16410.54 1180.70\\n\"); printf(\"Chongqing 82400.00 3144.23\\n\"); printf(\"Shanghai 6340.50 1360.26\\n\"); printf(\"Zhejiang 101800.00 4894.00\\n\"); printf(\"------------------------------------\\n\"); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-4 BCD解密（10 分）","slug":"jichu7-4","date":"2018-04-13T08:27:00.000Z","updated":"2018-04-13T08:28:08.993Z","comments":true,"path":"2018/04/13/jichu7-4/","link":"","permalink":"/2018/04/13/jichu7-4/","excerpt":"7-4 BCD解密（10 分）BCD数是用一个字节来表达两位十进制的数，每四个比特表示一位。所以如果一个BCD数的十六进制是0x12，它表达的就是十进制的12。但是小明没学过BCD，把所有的BCD数都当作二进制数转换成十进制输出了。于是BCD的0x12被输出成了十进制的18了！ 现在，你的程序要读入这个错误的十进制数，然后输出正确的十进制数。提示：你可以把18转换回0x12，然后再转换回12。 输入格式：输入在一行中给出一个[0, 153]范围内的正整数，保证能转换回有效的BCD数，也就是说这个整数转换成十六进制时不会出现A-F的数字。 输出格式：输出对应的十进制数。 输入样例：118 输出样例：112","text":"7-4 BCD解密（10 分）BCD数是用一个字节来表达两位十进制的数，每四个比特表示一位。所以如果一个BCD数的十六进制是0x12，它表达的就是十进制的12。但是小明没学过BCD，把所有的BCD数都当作二进制数转换成十进制输出了。于是BCD的0x12被输出成了十进制的18了！ 现在，你的程序要读入这个错误的十进制数，然后输出正确的十进制数。提示：你可以把18转换回0x12，然后再转换回12。 输入格式：输入在一行中给出一个[0, 153]范围内的正整数，保证能转换回有效的BCD数，也就是说这个整数转换成十六进制时不会出现A-F的数字。 输出格式：输出对应的十进制数。 输入样例：118 输出样例：112 123456789101112#include &lt;stdio.h&gt; int main() &#123; int x; int n, a; scanf(\"%d\", &amp;x); a = x % 16; n = x / 16 * 10 + a; printf(\"%d\", n); return 0; &#125; //由于他给的输入范围恰好为16进制的0~9，实际上是把16进制的数转换成10进制输出，比较简单","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-3 逆序的三位数（10 分）","slug":"jichu7-3","date":"2018-04-13T08:25:00.000Z","updated":"2018-04-13T08:26:46.240Z","comments":true,"path":"2018/04/13/jichu7-3/","link":"","permalink":"/2018/04/13/jichu7-3/","excerpt":"7-3 逆序的三位数（10 分）程序每次读入一个正3位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。 输入格式：每个测试是一个3位的正整数。 输出格式：输出按位逆序的数。 输入样例：1123 输出样例：1321","text":"7-3 逆序的三位数（10 分）程序每次读入一个正3位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。 输入格式：每个测试是一个3位的正整数。 输出格式：输出按位逆序的数。 输入样例：1123 输出样例：1321 1234567891011121314#include &lt;stdio.h&gt;int main(int argc, const char * argv[])&#123; int a, b; scanf(\"%d\", &amp;a); b = a % 10 * 100 + a / 10 % 10 * 10 + a / 100; printf(\"%d\\n\", b); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"7-2 然后是几点（15 分）","slug":"jichu7-2","date":"2018-04-13T08:23:00.000Z","updated":"2018-04-13T08:25:15.920Z","comments":true,"path":"2018/04/13/jichu7-2/","link":"","permalink":"/2018/04/13/jichu7-2/","excerpt":"7-2 然后是几点（15 分）有时候人们用四位数字表示一个时间，比如1106表示11点零6分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。 读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，即5点30分表示为530。注意，第二个数字表示的分钟数可能超过60，也可能是负数。 输入格式：输入在一行中给出2个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即5点30分表示为530；流逝的分钟数可能超过60，也可能是负数。 输出格式：输出四位数字表示的终止时间。题目保证起始时间和终止时间在同一天内。 输入样例：11120 110 输出样例：11310","text":"7-2 然后是几点（15 分）有时候人们用四位数字表示一个时间，比如1106表示11点零6分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。 读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，即5点30分表示为530。注意，第二个数字表示的分钟数可能超过60，也可能是负数。 输入格式：输入在一行中给出2个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即5点30分表示为530；流逝的分钟数可能超过60，也可能是负数。 输出格式：输出四位数字表示的终止时间。题目保证起始时间和终止时间在同一天内。 输入样例：11120 110 输出样例：11310 123456789101112131415161718192021#include&lt;stdio.h&gt;int main()&#123; int t1,t2,t3; int hour1,minute1,hour2,minute2; scanf(\"%d %d\",&amp;t1,&amp;t2); hour2=t2/60; minute2=t2%60; hour1=t1/100; minute1=t1%100; int hour3=hour1+hour2; int minute3=minute2+minute1; if(minute3&gt;60) &#123; minute3=minute3%60; hour3++; &#125; t3=hour3*100+minute3; printf(\"%d\",t3); return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-12 判断奇偶性（10 分）","slug":"jichu7-1","date":"2018-04-13T08:22:00.000Z","updated":"2018-04-13T08:24:06.172Z","comments":true,"path":"2018/04/13/jichu7-1/","link":"","permalink":"/2018/04/13/jichu7-1/","excerpt":"7-1 厘米换算英尺英寸（15 分）如果已知英制长度的英尺foot和英寸inch的值，那么对应的米是(foot+inch/12)×0.3048。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了1英尺等于12英寸。 输入格式：输入在一行中给出1个正整数，单位是厘米。 输出格式：在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。 输入样例：1170 输出样例：15 6","text":"7-1 厘米换算英尺英寸（15 分）如果已知英制长度的英尺foot和英寸inch的值，那么对应的米是(foot+inch/12)×0.3048。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了1英尺等于12英寸。 输入格式：输入在一行中给出1个正整数，单位是厘米。 输出格式：在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。 输入样例：1170 输出样例：15 6 123456789101112#include &lt;stdio.h&gt; int main() &#123; int cm; int foot,inch; scanf(\"%d\",&amp;cm); foot= cm / 30.48; inch= 12 * (cm / 30.48 - foot); printf(\"%d %d\\n\", foot,inch); return 0; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-12 判断奇偶性（10 分）","slug":"jichu6-13","date":"2018-04-13T08:17:00.000Z","updated":"2018-04-13T08:21:36.217Z","comments":true,"path":"2018/04/13/jichu6-13/","link":"","permalink":"/2018/04/13/jichu6-13/","excerpt":"6-13 折半查找（15 分）给一个严格递增数列，函数int binSearch(SeqList T, KeyType k)用来二分地查找k在数列中的位置。 函数接口定义：1int binSearch(SeqList T, KeyType k) 其中T是有序表，k是查找的值。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;using namespace std;#define MAXLEN 50typedef int KeyType;typedef struct &#123; KeyType key; &#125; elementType; typedef struct&#123; elementType data[MAXLEN+1]; int len;&#125; SeqList; void creat(SeqList &amp;L)&#123; int i; cin&gt;&gt;L.len; for(i=1;i&lt;=L.len;i++) cin&gt;&gt;L.data[i].key; &#125;int binSearch(SeqList T, KeyType k);int main () &#123; SeqList L; KeyType k; creat(L); cin&gt;&gt;k; int pos=binSearch(L,k); if(pos==0) cout&lt;&lt;\"NOT FOUND\"&lt;&lt;endl; else cout&lt;&lt;pos&lt;&lt;endl; return 0;&#125;/* 请在这里填写答案 */ 输入格式：第一行输入一个整数n，表示有序表的元素个数，接下来一行n个数字，依次为表内元素值。 然后输入一个要查找的值。 输出格式：输出这个值在表内的位置，如果没有找到，输出”NOT FOUND”。 输入样例：12351 3 5 7 97 输出样例：14 输入样例：12351 3 5 7 910 输出样例：1NOT FOUND","text":"6-13 折半查找（15 分）给一个严格递增数列，函数int binSearch(SeqList T, KeyType k)用来二分地查找k在数列中的位置。 函数接口定义：1int binSearch(SeqList T, KeyType k) 其中T是有序表，k是查找的值。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;using namespace std;#define MAXLEN 50typedef int KeyType;typedef struct &#123; KeyType key; &#125; elementType; typedef struct&#123; elementType data[MAXLEN+1]; int len;&#125; SeqList; void creat(SeqList &amp;L)&#123; int i; cin&gt;&gt;L.len; for(i=1;i&lt;=L.len;i++) cin&gt;&gt;L.data[i].key; &#125;int binSearch(SeqList T, KeyType k);int main () &#123; SeqList L; KeyType k; creat(L); cin&gt;&gt;k; int pos=binSearch(L,k); if(pos==0) cout&lt;&lt;\"NOT FOUND\"&lt;&lt;endl; else cout&lt;&lt;pos&lt;&lt;endl; return 0;&#125;/* 请在这里填写答案 */ 输入格式：第一行输入一个整数n，表示有序表的元素个数，接下来一行n个数字，依次为表内元素值。 然后输入一个要查找的值。 输出格式：输出这个值在表内的位置，如果没有找到，输出”NOT FOUND”。 输入样例：12351 3 5 7 97 输出样例：14 输入样例：12351 3 5 7 910 输出样例：1NOT FOUND 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include &lt;iostream&gt;using namespace std;#define MAXLEN 50typedef int KeyType;typedef struct &#123; KeyType key; &#125; elementType; typedef struct&#123; elementType data[MAXLEN+1]; int len;&#125; SeqList; void creat(SeqList &amp;L)&#123; int i; cin&gt;&gt;L.len; for(i=1;i&lt;=L.len;i++) cin&gt;&gt;L.data[i].key; &#125;int binSearch(SeqList T, KeyType k);int main () &#123; SeqList L; KeyType k; creat(L); cin&gt;&gt;k; int pos=binSearch(L,k); if(pos==0) cout&lt;&lt;\"NOT FOUND\"&lt;&lt;endl; else cout&lt;&lt;pos&lt;&lt;endl; return 0;&#125;int binSearch(SeqList T, KeyType k)&#123; int mid; int i = 1,j = T.len;//i指向一行数据的第一个，j指向一行数据的最后一个 while(i&lt;j)&#123; mid = (i+j)/2;//折半查找 if(T.data[mid].key == k)&#123; return mid; &#125; if (T.data[mid].key&gt;k)&#123;//大于了 上限j就变化 j = mid -1; &#125; if(T.data[mid].key &lt; k)&#123;//小于了下限就变化 i = mid +1; &#125; &#125; return 0; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-12 判断奇偶性（10 分）","slug":"jichu6-12","date":"2018-04-13T08:17:00.000Z","updated":"2018-04-13T08:17:45.838Z","comments":true,"path":"2018/04/13/jichu6-12/","link":"","permalink":"/2018/04/13/jichu6-12/","excerpt":"6-12 判断奇偶性（10 分）本题要求实现判断给定整数奇偶性的函数。 函数接口定义：1int even( int n ); 其中n是用户传入的整型参数。当n为偶数时，函数返回1；n为奇数时返回0。注意：0是偶数。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int even( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); if (even(n)) printf(\"%d is even.\\n\", n); else printf(\"%d is odd.\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1-6 输出样例1：1-6 is even. 输入样例2：15 输出样例2：15 is odd.","text":"6-12 判断奇偶性（10 分）本题要求实现判断给定整数奇偶性的函数。 函数接口定义：1int even( int n ); 其中n是用户传入的整型参数。当n为偶数时，函数返回1；n为奇数时返回0。注意：0是偶数。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int even( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); if (even(n)) printf(\"%d is even.\\n\", n); else printf(\"%d is odd.\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1-6 输出样例1：1-6 is even. 输入样例2：15 输出样例2：15 is odd. 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int even( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); if (even(n)) printf(\"%d is even.\\n\", n); else printf(\"%d is odd.\\n\", n); return 0;&#125;int even( int n ) &#123; if(n%2==0) &#123; return 1; &#125; return 0; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-11 求自定类型元素序列的中位数（25 分）","slug":"jichu6-11","date":"2018-04-13T08:13:00.000Z","updated":"2018-04-13T08:15:54.036Z","comments":true,"path":"2018/04/13/jichu6-11/","link":"","permalink":"/2018/04/13/jichu6-11/","excerpt":"6-11 求自定类型元素序列的中位数（25 分）本题要求实现一个函数，求N个集合元素A[]的中位数，即序列中第⌊N/2+1⌋大的元素。其中集合元素的类型为自定义的ElementType。 函数接口定义：1ElementType Median( ElementType A[], int N ); 其中给定集合元素存放在数组A[]中，正整数N是数组元素个数。该函数须返回N个A[]元素的中位数，其值也必须是ElementType类型。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Median( ElementType A[], int N );int main ()&#123; ElementType A[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;A[i]); printf(\"%.2f\\n\", Median(A, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312.3 34 -5 输出样例：112.30","text":"6-11 求自定类型元素序列的中位数（25 分）本题要求实现一个函数，求N个集合元素A[]的中位数，即序列中第⌊N/2+1⌋大的元素。其中集合元素的类型为自定义的ElementType。 函数接口定义：1ElementType Median( ElementType A[], int N ); 其中给定集合元素存放在数组A[]中，正整数N是数组元素个数。该函数须返回N个A[]元素的中位数，其值也必须是ElementType类型。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Median( ElementType A[], int N );int main ()&#123; ElementType A[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;A[i]); printf(\"%.2f\\n\", Median(A, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312.3 34 -5 输出样例：112.30 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Median( ElementType A[], int N );int main ()&#123; ElementType A[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;A[i]); printf(\"%.2f\\n\", Median(A, N)); return 0;&#125;void shell_sort(ElementType A[],int N);ElementType Median(ElementType A[],int N)&#123; if(N==1) return A[0]; shell_sort(A,N); return A[N/2];&#125;void shell_sort(ElementType A[],int N)&#123; int i,j,gap; for(gap=N/2;gap&gt;0;gap/=2) for(i=gap;i&lt;N;i++) for(j=i-gap;j&gt;=0&amp;&amp;A[j]&gt;A[j+gap];j-=gap) &#123; ElementType temp=A[j]; A[j]=A[j+gap]; A[j+gap]=temp; &#125;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-10 阶乘计算升级版（20 分）","slug":"jichu6-10","date":"2018-04-13T08:11:00.000Z","updated":"2018-04-13T08:12:57.924Z","comments":true,"path":"2018/04/13/jichu6-10/","link":"","permalink":"/2018/04/13/jichu6-10/","excerpt":"6-10 阶乘计算升级版（20 分）本题要求实现一个打印非负整数阶乘的函数。 函数接口定义：1void Print_Factorial ( const int N ); 其中N是用户传入的参数，其值不超过1000。如果N是非负整数，则该函数必须在一行中打印出N!的值，否则打印“Invalid input”。 裁判测试程序样例：1234567891011121314#include &lt;stdio.h&gt;void Print_Factorial ( const int N );int main()&#123; int N; scanf(\"%d\", &amp;N); Print_Factorial(N); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：115 输出样例：11307674368000","text":"6-10 阶乘计算升级版（20 分）本题要求实现一个打印非负整数阶乘的函数。 函数接口定义：1void Print_Factorial ( const int N ); 其中N是用户传入的参数，其值不超过1000。如果N是非负整数，则该函数必须在一行中打印出N!的值，否则打印“Invalid input”。 裁判测试程序样例：1234567891011121314#include &lt;stdio.h&gt;void Print_Factorial ( const int N );int main()&#123; int N; scanf(\"%d\", &amp;N); Print_Factorial(N); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：115 输出样例：11307674368000 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;stdio.h&gt;void Print_Factorial ( const int N );int main()&#123; int N; scanf(\"%d\", &amp;N); Print_Factorial(N); return 0;&#125;void Print_Factorial ( const int N )&#123; long i,s=1; if(N&gt;=0&amp;&amp;N&lt;=12)&#123; for(i=2 ;i&lt;=N ;i++)&#123; s *= i; &#125; printf(\"%ld\\n\",s); &#125; else if(N&gt;12&amp;&amp;N&lt;=1000)&#123; int num[3000] = &#123;0&#125;; num[0] = 1; int k=1; //位数 int n=0; //进位 int temp; for(int i=2 ;i&lt;=N ;i++)&#123; for(int j=0;j&lt;k;j++)&#123; temp = num[j]*i+n; //每一位相乘 再+进位 num[j] = temp%10; //更新每一位的数字 n = temp/10; //判断能否进位 &#125; while(n!=0)&#123; //如果可以进位 num[k] = n%10; //新增一位 n /=10; //继续判断能否进位 k++; &#125; &#125; for(int x=k-1;x&gt;=0;x--)&#123; //输出数字 printf(\"%d\",num[x]); &#125; &#125; else&#123; printf(\"%s\\n\",\"Invalid input\"); &#125; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-9 统计个位数字（15 分）","slug":"jichu6-9","date":"2018-04-13T08:07:00.000Z","updated":"2018-04-13T08:10:56.355Z","comments":true,"path":"2018/04/13/jichu6-9/","link":"","permalink":"/2018/04/13/jichu6-9/","excerpt":"6-9 统计个位数字（15 分）本题要求实现一个函数，可统计任一整数中某个位数出现的次数。例如-21252中，2出现了3次，则该函数应该返回3。 函数接口定义：1int Count_Digit ( const int N, const int D ); 其中N和D都是用户传入的参数。N的值不超过int的范围；D是[0, 9]区间内的个位数。函数须返回N中D出现的次数。 裁判测试程序样例：1234567891011121314#include &lt;stdio.h&gt;int Count_Digit ( const int N, const int D );int main()&#123; int N, D; scanf(\"%d %d\", &amp;N, &amp;D); printf(\"%d\\n\", Count_Digit(N, D)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-21252 2 输出样例：13","text":"6-9 统计个位数字（15 分）本题要求实现一个函数，可统计任一整数中某个位数出现的次数。例如-21252中，2出现了3次，则该函数应该返回3。 函数接口定义：1int Count_Digit ( const int N, const int D ); 其中N和D都是用户传入的参数。N的值不超过int的范围；D是[0, 9]区间内的个位数。函数须返回N中D出现的次数。 裁判测试程序样例：1234567891011121314#include &lt;stdio.h&gt;int Count_Digit ( const int N, const int D );int main()&#123; int N, D; scanf(\"%d %d\", &amp;N, &amp;D); printf(\"%d\\n\", Count_Digit(N, D)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-21252 2 输出样例：13 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;int Count_Digit ( const int N, const int D );int main()&#123; int N, D; scanf(\"%d %d\", &amp;N, &amp;D); printf(\"%d\\n\", Count_Digit(N, D)); return 0;&#125;int Count_Digit ( const int N, const int D )&#123; int a[10] = &#123;0&#125;,n = N; if(n&lt;0) n = -n; else if(n==0) return 1; while(n) &#123; a[n%10]++; n/=10; &#125; return a[D];&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-8 简单阶乘计算（10 分）","slug":"jichu6-8","date":"2018-04-13T08:05:00.000Z","updated":"2018-04-13T08:06:45.024Z","comments":true,"path":"2018/04/13/jichu6-8/","link":"","permalink":"/2018/04/13/jichu6-8/","excerpt":"6-8 简单阶乘计算（10 分）本题要求实现一个计算非负整数阶乘的简单函数。 函数接口定义：1int Factorial( const int N ); 其中N是用户传入的参数，其值不超过12。如果N是非负整数，则该函数必须返回N的阶乘，否则返回0。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int Factorial( const int N );int main()&#123; int N, NF; scanf(\"%d\", &amp;N); NF = Factorial(N); if (NF) printf(\"%d! = %d\\n\", N, NF); else printf(\"Invalid input\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：15 输出样例：15! = 120","text":"6-8 简单阶乘计算（10 分）本题要求实现一个计算非负整数阶乘的简单函数。 函数接口定义：1int Factorial( const int N ); 其中N是用户传入的参数，其值不超过12。如果N是非负整数，则该函数必须返回N的阶乘，否则返回0。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int Factorial( const int N );int main()&#123; int N, NF; scanf(\"%d\", &amp;N); NF = Factorial(N); if (NF) printf(\"%d! = %d\\n\", N, NF); else printf(\"Invalid input\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：15 输出样例：15! = 120 12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;int Factorial( const int N );int main()&#123; int N, NF; scanf(\"%d\", &amp;N); NF = Factorial(N); if (NF) printf(\"%d! = %d\\n\", N, NF); else printf(\"Invalid input\\n\"); return 0;&#125;int Factorial( const int N )&#123; if(N&lt;0) return 0; int mul=1; int i; for(i=1;i&lt;=N;i++)&#123; mul=mul*i; &#125; return mul;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-7 统计某类完全平方数（20 分）","slug":"jichu6-7","date":"2018-04-13T08:04:00.000Z","updated":"2018-04-13T08:04:18.568Z","comments":true,"path":"2018/04/13/jichu6-7/","link":"","permalink":"/2018/04/13/jichu6-7/","excerpt":"6-7 统计某类完全平方数（20 分）本题要求实现一个函数，判断任一给定整数N是否满足条件：它是完全平方数，又至少有两位数字相同，如144、676等。 函数接口定义：1int IsTheNumber ( const int N ); 其中N是用户传入的参数。如果N满足条件，则该函数必须返回1，否则返回0。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;math.h&gt;int IsTheNumber ( const int N );int main()&#123; int n1, n2, i, cnt; scanf(\"%d %d\", &amp;n1, &amp;n2); cnt = 0; for ( i=n1; i&lt;=n2; i++ ) &#123; if ( IsTheNumber(i) ) cnt++; &#125; printf(\"cnt = %d\\n\", cnt); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1105 500 输出样例：1cnt = 6","text":"6-7 统计某类完全平方数（20 分）本题要求实现一个函数，判断任一给定整数N是否满足条件：它是完全平方数，又至少有两位数字相同，如144、676等。 函数接口定义：1int IsTheNumber ( const int N ); 其中N是用户传入的参数。如果N满足条件，则该函数必须返回1，否则返回0。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;math.h&gt;int IsTheNumber ( const int N );int main()&#123; int n1, n2, i, cnt; scanf(\"%d %d\", &amp;n1, &amp;n2); cnt = 0; for ( i=n1; i&lt;=n2; i++ ) &#123; if ( IsTheNumber(i) ) cnt++; &#125; printf(\"cnt = %d\\n\", cnt); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1105 500 输出样例：1cnt = 6 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;stdio.h&gt;#include &lt;math.h&gt;int IsTheNumber ( const int N );int main()&#123; int n1, n2, i, cnt; scanf(\"%d %d\", &amp;n1, &amp;n2); cnt = 0; for ( i=n1; i&lt;=n2; i++ ) &#123; if ( IsTheNumber(i) ) cnt++; &#125; printf(\"cnt = %d\\n\", cnt); return 0;&#125;int IsTheNumber ( const int N )&#123; int n,m; n=(int)sqrt(N); m=n*n; if(m==N) &#123; int num[10]=&#123;0&#125;; int i; while(m&gt;0) &#123; for(i=0;i&lt;=9;i++) &#123; if(m%10==i) &#123; num[i]+=1; if(num[i]==2) &#123; return 1; &#125; &#125; &#125; m=m/10; &#125; return 0; &#125; return 0;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-6 求单链表结点的阶乘和（15 分）","slug":"jichu6-6","date":"2018-04-13T08:00:00.000Z","updated":"2018-04-13T08:04:33.388Z","comments":true,"path":"2018/04/13/jichu6-6/","link":"","permalink":"/2018/04/13/jichu6-6/","excerpt":"6-6 求单链表结点的阶乘和（15 分）本题要求实现一个函数，求单链表L结点的阶乘和。这里默认所有结点的值非负，且题目保证结果在int范围内。 函数接口定义：1int FactorialSum( List L ); 其中单链表List的定义如下： 123456typedef struct Node *PtrToNode;struct Node &#123; int Data; /* 存储结点数据 */ PtrToNode Next; /* 指向下一个结点的指针 */&#125;;typedef PtrToNode List; /* 定义单链表类型 */ 裁判测试程序样例：123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;typedef struct Node *PtrToNode;struct Node &#123; int Data; /* 存储结点数据 */ PtrToNode Next; /* 指向下一个结点的指针 */&#125;;typedef PtrToNode List; /* 定义单链表类型 */int FactorialSum( List L );int main()&#123; int N, i; List L, p; scanf(\"%d\", &amp;N); L = NULL; for ( i=0; i&lt;N; i++ ) &#123; p = (List)malloc(sizeof(struct Node)); scanf(\"%d\", &amp;p-&gt;Data); p-&gt;Next = L; L = p; &#125; printf(\"%d\\n\", FactorialSum(L)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1235 3 6 输出样例：1846","text":"6-6 求单链表结点的阶乘和（15 分）本题要求实现一个函数，求单链表L结点的阶乘和。这里默认所有结点的值非负，且题目保证结果在int范围内。 函数接口定义：1int FactorialSum( List L ); 其中单链表List的定义如下： 123456typedef struct Node *PtrToNode;struct Node &#123; int Data; /* 存储结点数据 */ PtrToNode Next; /* 指向下一个结点的指针 */&#125;;typedef PtrToNode List; /* 定义单链表类型 */ 裁判测试程序样例：123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;typedef struct Node *PtrToNode;struct Node &#123; int Data; /* 存储结点数据 */ PtrToNode Next; /* 指向下一个结点的指针 */&#125;;typedef PtrToNode List; /* 定义单链表类型 */int FactorialSum( List L );int main()&#123; int N, i; List L, p; scanf(\"%d\", &amp;N); L = NULL; for ( i=0; i&lt;N; i++ ) &#123; p = (List)malloc(sizeof(struct Node)); scanf(\"%d\", &amp;p-&gt;Data); p-&gt;Next = L; L = p; &#125; printf(\"%d\\n\", FactorialSum(L)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1235 3 6 输出样例：1846 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;typedef struct Node *PtrToNode;struct Node &#123; int Data; /* 存储结点数据 */ PtrToNode Next; /* 指向下一个结点的指针 */&#125;;typedef PtrToNode List; /* 定义单链表类型 */int FactorialSum( List L );int main()&#123; int N, i; List L, p; scanf(\"%d\", &amp;N); L = NULL; for ( i=0; i&lt;N; i++ ) &#123; p = (List)malloc(sizeof(struct Node)); scanf(\"%d\", &amp;p-&gt;Data); p-&gt;Next = L; L = p; &#125; printf(\"%d\\n\", FactorialSum(L)); return 0;&#125;int FactorialSum(List L) &#123; int i, Num; int Sum = 0; while (L != NULL) //遍历整个链表 &#123; Num = 1; for (i = 1; i &lt;= L-&gt;Data; i++)//从每个节点读取数据计 &#123; Num = Num*i; //算每个节点数据的阶乘 &#125; Sum = Sum + Num; //对节点数据求和 L = L-&gt;Next; &#125; return Sum; //返回单链表结点的阶乘和&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-5 求自定类型元素的最大值（10 分）","slug":"jichu6-5","date":"2018-04-13T07:58:00.000Z","updated":"2018-04-13T07:59:35.034Z","comments":true,"path":"2018/04/13/jichu6-5/","link":"","permalink":"/2018/04/13/jichu6-5/","excerpt":"6-5 求自定类型元素的最大值（10 分）本题要求实现一个函数，求N个集合元素S[]中的最大值，其中集合元素的类型为自定义的ElementType。 函数接口定义：1ElementType Max( ElementType S[], int N ); 其中给定集合元素存放在数组S[]中，正整数N是数组元素个数。该函数须返回N个S[]元素中的最大值，其值也必须是ElementType类型。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Max( ElementType S[], int N );int main ()&#123; ElementType S[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;S[i]); printf(\"%.2f\\n\", Max(S, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312.3 34 -5 输出样例：134.00","text":"6-5 求自定类型元素的最大值（10 分）本题要求实现一个函数，求N个集合元素S[]中的最大值，其中集合元素的类型为自定义的ElementType。 函数接口定义：1ElementType Max( ElementType S[], int N ); 其中给定集合元素存放在数组S[]中，正整数N是数组元素个数。该函数须返回N个S[]元素中的最大值，其值也必须是ElementType类型。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Max( ElementType S[], int N );int main ()&#123; ElementType S[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;S[i]); printf(\"%.2f\\n\", Max(S, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312.3 34 -5 输出样例：134.00 123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Max( ElementType S[], int N );int main ()&#123; ElementType S[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;S[i]); printf(\"%.2f\\n\", Max(S, N)); return 0;&#125;ElementType Max( ElementType S[], int N ) &#123; int i; ElementType MAX=S[0]; for(i=1;i&lt;N;i++) &#123; if(MAX&lt;S[i]) MAX=S[i]; &#125; return MAX; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-4 求自定类型元素的平均（10 分）","slug":"jichu6-4","date":"2018-04-13T07:54:00.000Z","updated":"2018-04-13T07:56:06.455Z","comments":true,"path":"2018/04/13/jichu6-4/","link":"","permalink":"/2018/04/13/jichu6-4/","excerpt":"6-4 求自定类型元素的平均（10 分）本题要求实现一个函数，求N个集合元素S[]的平均值，其中集合元素的类型为自定义的ElementType。 函数接口定义：1ElementType Average( ElementType S[], int N ); 其中给定集合元素存放在数组S[]中，正整数N是数组元素个数。该函数须返回N个S[]元素的平均值，其值也必须是ElementType类型。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Average( ElementType S[], int N );int main ()&#123; ElementType S[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;S[i]); printf(\"%.2f\\n\", Average(S, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312.3 34 -5 输出样例：113.77","text":"6-4 求自定类型元素的平均（10 分）本题要求实现一个函数，求N个集合元素S[]的平均值，其中集合元素的类型为自定义的ElementType。 函数接口定义：1ElementType Average( ElementType S[], int N ); 其中给定集合元素存放在数组S[]中，正整数N是数组元素个数。该函数须返回N个S[]元素的平均值，其值也必须是ElementType类型。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Average( ElementType S[], int N );int main ()&#123; ElementType S[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;S[i]); printf(\"%.2f\\n\", Average(S, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312.3 34 -5 输出样例：113.77 1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#define MAXN 10typedef float ElementType;ElementType Average( ElementType S[], int N );int main ()&#123; ElementType S[MAXN]; int N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%f\", &amp;S[i]); printf(\"%.2f\\n\", Average(S, N)); return 0;&#125;ElementType Average( ElementType S[], int N)&#123; ElementType sum=0; for(int i=0;i&lt;N;i++) &#123; sum+=S[i]; &#125; return sum/N;&#125;;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-3 简单求和（10 分）","slug":"jichu6-3","date":"2018-04-13T07:51:00.000Z","updated":"2018-04-13T07:53:45.569Z","comments":true,"path":"2018/04/13/jichu6-3/","link":"","permalink":"/2018/04/13/jichu6-3/","excerpt":"6-3 简单求和（10 分）本题要求实现一个函数，求给定的N个整数的和。 函数接口定义：1int Sum ( int List[], int N ); 其中给定整数存放在数组List[]中，正整数N是数组元素个数。该函数须返回N个List[]元素的和。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 10int Sum ( int List[], int N );int main ()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%d\", &amp;List[i]); printf(\"%d\\n\", Sum(List, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312 34 -5 输出样例：141","text":"6-3 简单求和（10 分）本题要求实现一个函数，求给定的N个整数的和。 函数接口定义：1int Sum ( int List[], int N ); 其中给定整数存放在数组List[]中，正整数N是数组元素个数。该函数须返回N个List[]元素的和。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 10int Sum ( int List[], int N );int main ()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%d\", &amp;List[i]); printf(\"%d\\n\", Sum(List, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12312 34 -5 输出样例：141 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#define MAXN 10int Sum ( int List[], int N );int main ()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); for ( i=0; i&lt;N; i++ ) scanf(\"%d\", &amp;List[i]); printf(\"%d\\n\", Sum(List, N)); return 0;&#125;int Sum ( int List[], int N )&#123; int sum=0; for(int i=0;i&lt;N;i++) &#123; sum+=List[i]; &#125; return sum;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-2 多项式求值（15 分）","slug":"jichu6-2","date":"2018-04-13T07:47:00.000Z","updated":"2018-04-13T07:51:13.305Z","comments":true,"path":"2018/04/13/jichu6-2/","link":"","permalink":"/2018/04/13/jichu6-2/","excerpt":"6-2 多项式求值（15 分）本题要求实现一个函数，计算阶数为n，系数为a[0] … a[n]的多项式f(x)=∑i=0n(a[i]×xi) 在x点的值。 函数接口定义：1double f( int n, double a[], double x ); 其中n是多项式的阶数，a[]中存储系数，x是给定点。函数须返回多项式f(x)的值。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 10double f( int n, double a[], double x );int main()&#123; int n, i; double a[MAXN], x; scanf(\"%d %lf\", &amp;n, &amp;x); for ( i=0; i&lt;=n; i++ ) scanf(“%lf”, &amp;a[i]); printf(\"%.1f\\n\", f(n, a, x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：122 1.11 2.5 -38.7 输出样例：1-43.1","text":"6-2 多项式求值（15 分）本题要求实现一个函数，计算阶数为n，系数为a[0] … a[n]的多项式f(x)=∑i=0n(a[i]×xi) 在x点的值。 函数接口定义：1double f( int n, double a[], double x ); 其中n是多项式的阶数，a[]中存储系数，x是给定点。函数须返回多项式f(x)的值。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 10double f( int n, double a[], double x );int main()&#123; int n, i; double a[MAXN], x; scanf(\"%d %lf\", &amp;n, &amp;x); for ( i=0; i&lt;=n; i++ ) scanf(“%lf”, &amp;a[i]); printf(\"%.1f\\n\", f(n, a, x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：122 1.11 2.5 -38.7 输出样例：1-43.1 123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#define MAXN 10double f( int n, double a[], double x );int main()&#123; int n, i; double a[MAXN], x; scanf(\"%d %lf\", &amp;n, &amp;x); for ( i=0; i&lt;=n; i++ ) scanf(\"%lf\", &amp;a[i]); printf(\"%.1f\\n\", f(n, a, x)); return 0;&#125;double f( int n, double a[], double x ) &#123; int i; double b=1.0; double sum=a[0]; for(i=1;i&lt;=n;i++) &#123; b=b*x; sum=sum+b*a[i]; &#125; return sum; &#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"6-1 简单输出整数（10 分）","slug":"jichu6-1","date":"2018-04-13T07:46:00.000Z","updated":"2018-04-13T07:46:41.902Z","comments":true,"path":"2018/04/13/jichu6-1/","link":"","permalink":"/2018/04/13/jichu6-1/","excerpt":"6-1 简单输出整数（10 分）本题要求实现一个函数，对给定的正整数N，打印从1到N的全部正整数。 函数接口定义：1void PrintN ( int N ); 其中N是用户传入的参数。该函数必须将从1到N的全部正整数顺序打印出来，每个数字占1行。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void PrintN ( int N );int main ()&#123; int N; scanf(\"%d\", &amp;N); PrintN( N ); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：13 输出样例：123123","text":"6-1 简单输出整数（10 分）本题要求实现一个函数，对给定的正整数N，打印从1到N的全部正整数。 函数接口定义：1void PrintN ( int N ); 其中N是用户传入的参数。该函数必须将从1到N的全部正整数顺序打印出来，每个数字占1行。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void PrintN ( int N );int main ()&#123; int N; scanf(\"%d\", &amp;N); PrintN( N ); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：13 输出样例：123123 12345678910111213141516171819202122#include &lt;stdio.h&gt;void PrintN ( int N );int main ()&#123; int N; scanf(\"%d\", &amp;N); PrintN( N ); return 0;&#125;void PrintN(int N)&#123; int i; for(i=1;i&lt;=N;i++) &#123; printf(\"%d\\n\",i); &#125;&#125;","categories":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/categories/基础编程题目集/"}],"tags":[{"name":"基础编程题目集","slug":"基础编程题目集","permalink":"/tags/基础编程题目集/"}]},{"title":"习题11-8 单链表结点删除（20 分）","slug":"siti11-8","date":"2018-02-08T21:40:00.000Z","updated":"2018-04-03T03:04:45.748Z","comments":true,"path":"2018/02/09/siti11-8/","link":"","permalink":"/2018/02/09/siti11-8/","excerpt":"习题11-8 单链表结点删除（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中所有存储了某给定值的结点删除。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数deletem将单链表L中所有存储了m的结点删除。返回指向结果链表头结点的指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; int m; struct ListNode *L = readlist(); scanf(\"%d\", &amp;m); L = deletem(L, m); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1210 11 10 12 10 -110 输出样例：111 12","text":"习题11-8 单链表结点删除（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中所有存储了某给定值的结点删除。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数deletem将单链表L中所有存储了m的结点删除。返回指向结果链表头结点的指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; int m; struct ListNode *L = readlist(); scanf(\"%d\", &amp;m); L = deletem(L, m); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1210 11 10 12 10 -110 输出样例：111 12 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; int m; struct ListNode *L = readlist(); scanf(\"%d\", &amp;m); L = deletem(L, m); printlist(L); return 0;&#125;void PushBack(int X, struct ListNode **rear)&#123; struct ListNode *TmpCell; TmpCell = malloc(sizeof(struct ListNode)); TmpCell-&gt;data = X; TmpCell-&gt;next = NULL; (*rear)-&gt;next = TmpCell; *rear = TmpCell;&#125;struct ListNode *readlist()&#123; struct ListNode *TmpCell, *head, *tail; int data; head = tail = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; scanf(\"%d\", &amp;data); while (data != -1) &#123; PushBack(data, &amp;tail); scanf(\"%d\", &amp;data); &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;struct ListNode *deletem(struct ListNode *L, int m)&#123; struct ListNode *head, *p, *TmpCell; p = head = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; p-&gt;next = L; while (p-&gt;next != NULL) &#123; if (p-&gt;next-&gt;data == m) &#123; TmpCell = p-&gt;next; p-&gt;next = TmpCell-&gt;next; free(TmpCell); &#125; else p = p-&gt;next; &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-7 奇数值结点链表（20 分）","slug":"siti11-7","date":"2018-02-08T21:39:00.000Z","updated":"2018-04-03T03:04:26.045Z","comments":true,"path":"2018/02/09/siti11-7/","link":"","permalink":"/2018/02/09/siti11-7/","excerpt":"习题11-7 奇数值结点链表（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中奇数值的结点重新组成一个新的链表。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数getodd将单链表L中奇数值的结点分离出来，重新组成一个新的链表。返回指向新链表头结点的指针，同时将L中存储的地址改为删除了奇数值结点后的链表的头结点地址（所以要传入L的指针）。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *L, *Odd; L = readlist(); Odd = getodd(&amp;L); printlist(Odd); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 2 3 4 5 6 7 -1 输出样例：121 3 5 7 2 2 4 6","text":"习题11-7 奇数值结点链表（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中奇数值的结点重新组成一个新的链表。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数getodd将单链表L中奇数值的结点分离出来，重新组成一个新的链表。返回指向新链表头结点的指针，同时将L中存储的地址改为删除了奇数值结点后的链表的头结点地址（所以要传入L的指针）。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *L, *Odd; L = readlist(); Odd = getodd(&amp;L); printlist(Odd); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 2 3 4 5 6 7 -1 输出样例：121 3 5 7 2 2 4 6 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *L, *Odd; L = readlist(); Odd = getodd(&amp;L); printlist(Odd); printlist(L); return 0;&#125;void PushBack(int X, struct ListNode **rear)&#123; struct ListNode *TmpCell; TmpCell = malloc(sizeof(struct ListNode)); TmpCell-&gt;data = X; TmpCell-&gt;next = NULL; (*rear)-&gt;next = TmpCell; *rear = TmpCell;&#125;struct ListNode *readlist()&#123; struct ListNode *TmpCell, *head, *tail; int data; head = tail = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; scanf(\"%d\", &amp;data); while (data != -1) &#123; PushBack(data, &amp;tail); scanf(\"%d\", &amp;data); &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;struct ListNode *getodd(struct ListNode **L)&#123; struct ListNode *head, *p, *oddhead, *oddtail, *TmpCell; p = head = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; oddhead = oddtail = malloc(sizeof(struct ListNode)); oddhead-&gt;next = NULL; p-&gt;next = *L; while (p-&gt;next != NULL) &#123; if (p-&gt;next-&gt;data % 2 != 0) &#123; PushBack(p-&gt;next-&gt;data, &amp;oddtail); TmpCell = p-&gt;next; p-&gt;next = TmpCell-&gt;next; free(TmpCell); &#125; else p = p-&gt;next; &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); *L = head; TmpCell = oddhead; oddhead = oddhead-&gt;next; free(TmpCell); return oddhead;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-6 查找子串（20 分）","slug":"siti11-6","date":"2018-02-08T21:38:00.000Z","updated":"2018-04-03T03:04:05.861Z","comments":true,"path":"2018/02/09/siti11-6/","link":"","permalink":"/2018/02/09/siti11-6/","excerpt":"习题11-6 查找子串（20 分）本题要求实现一个字符串查找的简单函数。 函数接口定义：1char *search( char *s, char *t ); 函数search在字符串s中查找子串t，返回子串t在s中的首地址。若未找到，则返回NULL。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#define MAXS 30char *search(char *s, char *t);void ReadString( char s[] ); /* 裁判提供，细节不表 */int main()&#123; char s[MAXS], t[MAXS], *pos; ReadString(s); ReadString(t); pos = search(s, t); if ( pos != NULL ) printf(\"%d\\n\", pos - s); else printf(\"-1\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12The C Programming Languageram 输出样例1：110 输入样例2：12The C Programming Languagebored 输出样例2：1-1","text":"习题11-6 查找子串（20 分）本题要求实现一个字符串查找的简单函数。 函数接口定义：1char *search( char *s, char *t ); 函数search在字符串s中查找子串t，返回子串t在s中的首地址。若未找到，则返回NULL。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#define MAXS 30char *search(char *s, char *t);void ReadString( char s[] ); /* 裁判提供，细节不表 */int main()&#123; char s[MAXS], t[MAXS], *pos; ReadString(s); ReadString(t); pos = search(s, t); if ( pos != NULL ) printf(\"%d\\n\", pos - s); else printf(\"-1\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12The C Programming Languageram 输出样例1：110 输入样例2：12The C Programming Languagebored 输出样例2：1-1 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;stdio.h&gt;#define MAXS 30char *search(char *s, char *t);void ReadString( char s[] ); /* 裁判提供，细节不表 */int main()&#123; char s[MAXS], t[MAXS], *pos; ReadString(s); ReadString(t); pos = search(s, t); if ( pos != NULL ) printf(\"%d\\n\", pos - s); else printf(\"-1\\n\"); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;char *search(char *s, char *t)&#123; int i, j, sLen, tLen; for (i=0; s[i]!='\\0'; i++); sLen=i; for (j=0; t[j]!='\\0'; j++); tLen=j; i=j=0; while (i &lt; sLen &amp;&amp; j &lt; tLen) &#123; if (s[i] == t[j]) &#123; i++; j++; &#125; else &#123; i = i - j + 1; j = 0; &#125; &#125; if (j == tLen) return &amp;s[i - j]; else return NULL;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-5 指定位置输出字符串（20 分）","slug":"siti11-5","date":"2018-02-08T21:36:00.000Z","updated":"2018-04-03T03:03:46.293Z","comments":true,"path":"2018/02/09/siti11-5/","link":"","permalink":"/2018/02/09/siti11-5/","excerpt":"习题11-5 指定位置输出字符串（20 分）本题要求实现一个函数，对给定的一个字符串和两个字符，打印出给定字符串中从与第一个字符匹配的位置开始到与第二个字符匹配的位置之间的所有字符。 函数接口定义：1char *match( char *s, char ch1, char ch2 ); 函数match应打印s中从ch1到ch2之间的所有字符，并且返回ch1的地址。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXS 10char *match( char *s, char ch1, char ch2 );int main()&#123; char str[MAXS], ch_start, ch_end, *p; scanf(\"%s\\n\", str); scanf(\"%c %c\", &amp;ch_start, &amp;ch_end); p = match(str, ch_start, ch_end); printf(\"%s\\n\", p); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12programr g 输出样例1：12rogrogram 输入样例2：12programz o 输出样例2：12(空行)(空行) 输入样例3：12programg z 输出样例3：12gramgram","text":"习题11-5 指定位置输出字符串（20 分）本题要求实现一个函数，对给定的一个字符串和两个字符，打印出给定字符串中从与第一个字符匹配的位置开始到与第二个字符匹配的位置之间的所有字符。 函数接口定义：1char *match( char *s, char ch1, char ch2 ); 函数match应打印s中从ch1到ch2之间的所有字符，并且返回ch1的地址。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXS 10char *match( char *s, char ch1, char ch2 );int main()&#123; char str[MAXS], ch_start, ch_end, *p; scanf(\"%s\\n\", str); scanf(\"%c %c\", &amp;ch_start, &amp;ch_end); p = match(str, ch_start, ch_end); printf(\"%s\\n\", p); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12programr g 输出样例1：12rogrogram 输入样例2：12programz o 输出样例2：12(空行)(空行) 输入样例3：12programg z 输出样例3：12gramgram 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;stdio.h&gt;#define MAXS 10char *match( char *s, char ch1, char ch2 );int main()&#123; char str[MAXS], ch_start, ch_end, *p; scanf(\"%s\\n\", str); scanf(\"%c %c\", &amp;ch_start, &amp;ch_end); p = match(str, ch_start, ch_end); printf(\"%s\\n\", p); return 0;&#125;char *match(char *s, char ch1, char ch2)&#123; int i, ch1index, ch2index, flag; char *p, ch = '\\0'; flag = 0; ch1index = ch2index = 0; for (i=0; s[i] != '\\0'; i++) &#123; if (s[i] == ch1) &#123; ch1index = i; flag = 1; break; &#125; &#125; if (!flag) &#123; printf(\"\\n\"); p = &amp;ch; return p; &#125; for (; s[i] != '\\0'; i++) &#123; if (s[i] == ch2) &#123; ch2index = i; flag = 0; break; &#125; &#125; for (i=ch1index; i&lt;=ch2index; i++) printf(\"%c\", s[i]); if(flag) &#123; for (i=ch1index; s[i] != '\\0'; i++) printf(\"%c\", s[i]); &#125; printf(\"\\n\"); p = &amp;s[ch1index]; return p;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-4 字符串的连接（15 分）","slug":"siti11-4","date":"2018-02-08T21:35:00.000Z","updated":"2018-04-03T03:03:24.414Z","comments":true,"path":"2018/02/09/siti11-4/","link":"","permalink":"/2018/02/09/siti11-4/","excerpt":"习题11-4 字符串的连接（15 分）本题要求实现一个函数，将两个字符串连接起来。 函数接口定义：1char *str_cat( char *s, char *t ); 函数str_cat应将字符串t复制到字符串s的末端，并且返回字符串s的首地址。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12abcdef 输出样例：12abcdefabcdef","text":"习题11-4 字符串的连接（15 分）本题要求实现一个函数，将两个字符串连接起来。 函数接口定义：1char *str_cat( char *s, char *t ); 函数str_cat应将字符串t复制到字符串s的末端，并且返回字符串s的首地址。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12abcdef 输出样例：12abcdefabcdef 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;char *str_cat( char *s, char *t )&#123; char *p; p=strcat(s,t); return p;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-3 计算最长的字符串长度（15 分）","slug":"siti11-3","date":"2018-02-08T21:34:00.000Z","updated":"2018-04-03T03:03:03.772Z","comments":true,"path":"2018/02/09/siti11-3/","link":"","permalink":"/2018/02/09/siti11-3/","excerpt":"习题11-3 计算最长的字符串长度（15 分）本题要求实现一个函数，用于计算有n个元素的指针数组s中最长的字符串的长度。 函数接口定义：1int max_len( char *s[], int n ); 其中n个字符串存储在s[]中，函数max_len应返回其中最长字符串的长度。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAXN 10#define MAXS 20int max_len( char *s[], int n );int main()&#123; int i, n; char *string[MAXN] = &#123;NULL&#125;; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) &#123; string[i] = (char *)malloc(sizeof(char)*MAXS); scanf(\"%s\", string[i]); &#125; printf(\"%d\\n\", max_len(string, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：123454blueyellowredgreen 输出样例：16","text":"习题11-3 计算最长的字符串长度（15 分）本题要求实现一个函数，用于计算有n个元素的指针数组s中最长的字符串的长度。 函数接口定义：1int max_len( char *s[], int n ); 其中n个字符串存储在s[]中，函数max_len应返回其中最长字符串的长度。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAXN 10#define MAXS 20int max_len( char *s[], int n );int main()&#123; int i, n; char *string[MAXN] = &#123;NULL&#125;; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) &#123; string[i] = (char *)malloc(sizeof(char)*MAXS); scanf(\"%s\", string[i]); &#125; printf(\"%d\\n\", max_len(string, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：123454blueyellowredgreen 输出样例：16 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAXN 10#define MAXS 20int max_len( char *s[], int n );int main()&#123; int i, n; char *string[MAXN] = &#123;NULL&#125;; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) &#123; string[i] = (char *)malloc(sizeof(char)*MAXS); scanf(\"%s\", string[i]); &#125; printf(\"%d\\n\", max_len(string, n)); return 0;&#125;int max_len(char *s[], int n)&#123; int m=0,i,l; for (i=0; i&lt;n; i++) &#123; l=strlen(s[i]); if(m&lt;l) m=l; &#125; return m;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-2 查找星期（15 分）","slug":"siti11-2","date":"2018-02-08T21:32:00.000Z","updated":"2018-04-03T03:02:44.194Z","comments":true,"path":"2018/02/09/siti11-2/","link":"","permalink":"/2018/02/09/siti11-2/","excerpt":"习题11-2 查找星期（15 分）本题要求实现函数，可以根据下表查找到星期，返回对应的序号。 序号 星期 0 Sunday 1 Monday 2 Tuesday 3 Wednesday 4 Thursday 5 Friday 6 Saturday 函数接口定义：1int getindex( char *s ); 函数getindex应返回字符串s序号。如果传入的参数s不是一个代表星期的字符串，则返回-1。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 80int getindex( char *s );int main()&#123; int n; char s[MAXS]; scanf(\"%s\", s); n = getindex(s); if ( n==-1 ) printf(\"wrong input!\\n\"); else printf(\"%d\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1Tuesday 输出样例1：12 输入样例2：1today 输出样例2：1wrong input!","text":"习题11-2 查找星期（15 分）本题要求实现函数，可以根据下表查找到星期，返回对应的序号。 序号 星期 0 Sunday 1 Monday 2 Tuesday 3 Wednesday 4 Thursday 5 Friday 6 Saturday 函数接口定义：1int getindex( char *s ); 函数getindex应返回字符串s序号。如果传入的参数s不是一个代表星期的字符串，则返回-1。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 80int getindex( char *s );int main()&#123; int n; char s[MAXS]; scanf(\"%s\", s); n = getindex(s); if ( n==-1 ) printf(\"wrong input!\\n\"); else printf(\"%d\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1Tuesday 输出样例1：12 输入样例2：1today 输出样例2：1wrong input! 1234567891011121314151617181920212223242526272829303132333435#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 80int getindex( char *s );int main()&#123; int n; char s[MAXS]; scanf(\"%s\", s); n = getindex(s); if ( n==-1 ) printf(\"wrong input!\\n\"); else printf(\"%d\\n\", n); return 0;&#125;int getindex(char *s)&#123; char a[7][MAXS] = &#123;\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"&#125;; int i; for (i=0; i&lt;7; i++) &#123; if (strcmp(a[i],s) == 0) &#123; return i; &#125; &#125; if(i=7) return -1;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题11-1 输出月份英文名（15 分）","slug":"siti11-1","date":"2018-02-08T21:29:00.000Z","updated":"2018-04-03T03:02:22.141Z","comments":true,"path":"2018/02/09/siti11-1/","link":"","permalink":"/2018/02/09/siti11-1/","excerpt":"习题11-1 输出月份英文名（15 分）本题要求实现函数，可以返回一个给定月份的英文名称。 函数接口定义：1char *getmonth( int n ); 函数getmonth应返回存储了n对应的月份英文名称的字符串头指针。如果传入的参数n不是一个代表月份的数字，则返回空指针NULL。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;char *getmonth( int n );int main()&#123; int n; char *s; scanf(\"%d\", &amp;n); s = getmonth(n); if ( s==NULL ) printf(\"wrong input!\\n\"); else printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：15 输出样例1：1May 输入样例2：115 输出样例2：1wrong input!","text":"习题11-1 输出月份英文名（15 分）本题要求实现函数，可以返回一个给定月份的英文名称。 函数接口定义：1char *getmonth( int n ); 函数getmonth应返回存储了n对应的月份英文名称的字符串头指针。如果传入的参数n不是一个代表月份的数字，则返回空指针NULL。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;char *getmonth( int n );int main()&#123; int n; char *s; scanf(\"%d\", &amp;n); s = getmonth(n); if ( s==NULL ) printf(\"wrong input!\\n\"); else printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：15 输出样例1：1May 输入样例2：115 输出样例2：1wrong input! 123456789101112131415161718192021222324#include &lt;stdio.h&gt;char *getmonth( int n );int main()&#123; int n; char *s; scanf(\"%d\", &amp;n); s = getmonth(n); if ( s==NULL ) printf(\"wrong input!\\n\"); else printf(\"%s\\n\", s); return 0;&#125;char *getmonth(int n)&#123; char *s[] = &#123;\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"&#125;; if(n&lt;=0||n&gt;12) return NULL; else return(s[n-1]) &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-8 递归实现顺序输出整数（15 分）","slug":"siti10-8","date":"2018-02-08T03:39:00.000Z","updated":"2018-04-03T03:02:02.536Z","comments":true,"path":"2018/02/08/siti10-8/","link":"","permalink":"/2018/02/08/siti10-8/","excerpt":"习题10-8 递归实现顺序输出整数（15 分）本题要求实现一个函数，对一个整数进行按位顺序输出。 函数接口定义：1void printdigits( int n ); 函数printdigits应将n的每一位数字从高位到低位顺序打印出来，每位数字占一行。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void printdigits( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printdigits(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：112345 输出样例：1234512345","text":"习题10-8 递归实现顺序输出整数（15 分）本题要求实现一个函数，对一个整数进行按位顺序输出。 函数接口定义：1void printdigits( int n ); 函数printdigits应将n的每一位数字从高位到低位顺序打印出来，每位数字占一行。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void printdigits( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printdigits(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：112345 输出样例：1234512345 123456789101112131415161718192021222324#include &lt;stdio.h&gt;void printdigits( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printdigits(n); return 0;&#125; void printdigits(int num)&#123; if (num &lt;= 9) printf(\"%d\\n\", num); else &#123; printdigits(num / 10); printf(\"%d\\n\", num % 10); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-7 十进制转换二进制（15 分）","slug":"siti10-7","date":"2018-02-08T03:38:00.000Z","updated":"2018-04-03T03:01:43.390Z","comments":true,"path":"2018/02/08/siti10-7/","link":"","permalink":"/2018/02/08/siti10-7/","excerpt":"习题10-7 十进制转换二进制（15 分）本题要求实现一个函数，将正整数n转换为二进制后输出。 函数接口定义：1void dectobin( int n ); 函数dectobin应在一行中打印出二进制的n。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void dectobin( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); dectobin(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：11010","text":"习题10-7 十进制转换二进制（15 分）本题要求实现一个函数，将正整数n转换为二进制后输出。 函数接口定义：1void dectobin( int n ); 函数dectobin应在一行中打印出二进制的n。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void dectobin( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); dectobin(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：11010 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;void dectobin( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); dectobin(n); return 0;&#125;void dectobin(int n)&#123; if (n == 0) printf(\"0\"); else if (n == 1) printf(\"1\"); else &#123; dectobin(n/2); printf(\"%d\", n%2); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-6 递归求Fabonacci数列（10 分）","slug":"siti10-6","date":"2018-02-08T03:35:00.000Z","updated":"2018-04-03T03:01:23.713Z","comments":true,"path":"2018/02/08/siti10-6/","link":"","permalink":"/2018/02/08/siti10-6/","excerpt":"习题10-6 递归求Fabonacci数列（10 分）本题要求实现求Fabonacci数列项的函数。Fabonacci数列的定义如下： f(n)=f(n−2)+f(n−1) (n≥2)，其中f(0)=0，f(1)=1。 函数接口定义：1int f( int n ); 函数f应返回第n个Fabonacci数。题目保证输入输出在长整型范围内。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int f( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", f(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：16 输出样例：18","text":"习题10-6 递归求Fabonacci数列（10 分）本题要求实现求Fabonacci数列项的函数。Fabonacci数列的定义如下： f(n)=f(n−2)+f(n−1) (n≥2)，其中f(0)=0，f(1)=1。 函数接口定义：1int f( int n ); 函数f应返回第n个Fabonacci数。题目保证输入输出在长整型范围内。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int f( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", f(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：16 输出样例：18 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;int f( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", f(n)); return 0;&#125;int f(int n)&#123; int result; if (n == 0) result = 0; else if (n == 1) result = 1; else result = f(n-2) + f(n-1); return result;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-4 递归求简单交错幂级数的部分和（15 分）","slug":"siti10-4","date":"2018-02-08T03:31:00.000Z","updated":"2018-04-03T03:00:36.744Z","comments":true,"path":"2018/02/08/siti10-4/","link":"","permalink":"/2018/02/08/siti10-4/","excerpt":"习题10-4 递归求简单交错幂级数的部分和（15 分）本题要求实现一个函数，计算下列简单交错幂级数的部分和： f(x,n)=x−x2+x3−x4+⋯+(−1)n−1xn 函数接口定义：1double fn( double x, int n ); 其中题目保证传入的n是正整数，并且输入输出都在双精度范围内。函数fn应返回上述级数的部分和。建议尝试用递归实现。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double fn( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.2f\\n\", fn(x,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.5 12 输出样例：10.33","text":"习题10-4 递归求简单交错幂级数的部分和（15 分）本题要求实现一个函数，计算下列简单交错幂级数的部分和： f(x,n)=x−x2+x3−x4+⋯+(−1)n−1xn 函数接口定义：1double fn( double x, int n ); 其中题目保证传入的n是正整数，并且输入输出都在双精度范围内。函数fn应返回上述级数的部分和。建议尝试用递归实现。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double fn( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.2f\\n\", fn(x,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.5 12 输出样例：10.33 123456789101112131415161718192021222324#include &lt;stdio.h&gt;double fn( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.2f\\n\", fn(x,n)); return 0;&#125;double fn(double x, int n)&#123; double result; if (n == 0 || n == 1) result = x; else result = x - x*fn(x, n-1); return result;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-5 递归计算Ackermenn函数（15 分）","slug":"siti10-5","date":"2018-02-08T03:31:00.000Z","updated":"2018-04-03T03:01:02.704Z","comments":true,"path":"2018/02/08/siti10-5/","link":"","permalink":"/2018/02/08/siti10-5/","excerpt":"习题10-5 递归计算Ackermenn函数（15 分）本题要求实现Ackermenn函数的计算，其函数定义如下： 函数接口定义：1int Ack( int m, int n ); 其中m和n是用户传入的非负整数。函数Ack返回Ackermenn函数的相应值。题目保证输入输出都在长整型 范围内。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int Ack( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"%d\\n\", Ack(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：19","text":"习题10-5 递归计算Ackermenn函数（15 分）本题要求实现Ackermenn函数的计算，其函数定义如下： 函数接口定义：1int Ack( int m, int n ); 其中m和n是用户传入的非负整数。函数Ack返回Ackermenn函数的相应值。题目保证输入输出都在长整型 范围内。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int Ack( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"%d\\n\", Ack(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：19 12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;int Ack( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"%d\\n\", Ack(m, n)); return 0;&#125;int Ack(int m, int n)&#123; int result; if (m == 0) result = n+1; else &#123; if (n == 0) result = Ack(m - 1, 1); else result = Ack(m-1, Ack(m, n-1)); &#125; return result;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-3 递归实现指数函数（15 分）","slug":"siti10-3","date":"2018-02-08T03:30:00.000Z","updated":"2018-04-03T03:00:13.400Z","comments":true,"path":"2018/02/08/siti10-3/","link":"","permalink":"/2018/02/08/siti10-3/","excerpt":"习题10-3 递归实现指数函数（15 分）本题要求实现一个计算xn（n≥1）的函数。 函数接口定义：1double calc_pow( double x, int n ); 函数calc_pow应返回x的n次幂的值。建议用递归实现。题目保证结果在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double calc_pow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.0f\\n\", calc_pow(x, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：18","text":"习题10-3 递归实现指数函数（15 分）本题要求实现一个计算xn（n≥1）的函数。 函数接口定义：1double calc_pow( double x, int n ); 函数calc_pow应返回x的n次幂的值。建议用递归实现。题目保证结果在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double calc_pow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.0f\\n\", calc_pow(x, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：18 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;double calc_pow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.0f\\n\", calc_pow(x, n)); return 0;&#125;double calc_pow(double x, int n)&#123; double result; if (n == 0) result = 1; else result = x*calc_pow(x, n-1); return result;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-2 递归求阶乘和（15 分）","slug":"siti10-2","date":"2018-02-08T03:28:00.000Z","updated":"2018-04-03T02:58:47.559Z","comments":true,"path":"2018/02/08/siti10-2/","link":"","permalink":"/2018/02/08/siti10-2/","excerpt":"习题10-2 递归求阶乘和（15 分）本题要求实现一个计算非负整数阶乘的简单函数，并利用该函数求 1!+2!+3!+…+n! 的值。 函数接口定义：12double fact( int n );double factsum( int n ); 函数fact应返回n的阶乘，建议用递归实现。函数factsum应返回 1!+2!+…+n! 的值。题目保证输入输出在双精度范围内。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;double fact( int n );double factsum( int n );int main()&#123; int n; scanf(\"%d\",&amp;n); printf(\"fact(%d) = %.0f\\n\", n, fact(n)); printf(\"sum = %.0f\\n\", factsum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：12fact(10) = 3628800sum = 4037913 输入样例2：10 输出样例2：12fact(0) = 1sum = 0","text":"习题10-2 递归求阶乘和（15 分）本题要求实现一个计算非负整数阶乘的简单函数，并利用该函数求 1!+2!+3!+…+n! 的值。 函数接口定义：12double fact( int n );double factsum( int n ); 函数fact应返回n的阶乘，建议用递归实现。函数factsum应返回 1!+2!+…+n! 的值。题目保证输入输出在双精度范围内。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;double fact( int n );double factsum( int n );int main()&#123; int n; scanf(\"%d\",&amp;n); printf(\"fact(%d) = %.0f\\n\", n, fact(n)); printf(\"sum = %.0f\\n\", factsum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：12fact(10) = 3628800sum = 4037913 输入样例2：10 输出样例2：12fact(0) = 1sum = 0 123456789101112131415161718192021222324252627282930313233343536#include &lt;stdio.h&gt;double fact( int n );double factsum( int n );int main()&#123; int n; scanf(\"%d\",&amp;n); printf(\"fact(%d) = %.0f\\n\", n, fact(n)); printf(\"sum = %.0f\\n\", factsum(n)); return 0;&#125;double fact(int n)&#123; double result; if (n == 0 || n == 1) result = 1; else result = n*fact(n-1); return result;&#125;double factsum(int n)&#123; int i; double sum; sum=0; for (i=1; i&lt;=n; i++) sum = sum+fact(i); return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题10-1 判断满足条件的三位数（15 分）","slug":"siti10-1","date":"2018-02-08T03:26:00.000Z","updated":"2018-04-03T02:58:11.686Z","comments":true,"path":"2018/02/08/siti10-1/","link":"","permalink":"/2018/02/08/siti10-1/","excerpt":"练习10-1 使用递归函数计算1到n之和（10 分）本题要求实现一个用递归计算1+2+3+…+n的和的简单函数。 函数接口定义：1int sum( int n ); 该函数对于传入的正整数n返回1+2+3+…+n的和；若n不是正整数则返回0。题目保证输入输出在长整型范围内。建议尝试写成递归函数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sum( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf (\"%d\\n\", sum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：155 输入样例2：10 输出样例2：10","text":"练习10-1 使用递归函数计算1到n之和（10 分）本题要求实现一个用递归计算1+2+3+…+n的和的简单函数。 函数接口定义：1int sum( int n ); 该函数对于传入的正整数n返回1+2+3+…+n的和；若n不是正整数则返回0。题目保证输入输出在长整型范围内。建议尝试写成递归函数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sum( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf (\"%d\\n\", sum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：155 输入样例2：10 输出样例2：10 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;#include &lt;math.h&gt;int search( int n );int main()&#123; int number; scanf(\"%d\",&amp;number); printf(\"count=%d\\n\",search(number)); return 0;&#125;int search(int n)&#123; int i, count, min, max, square, first, second, third; if (n &lt; 121) &#123; count = 0; return count; &#125; min = sqrt(121); max = sqrt(n); for (i = min, count = 0; i &lt;= max; i++) &#123; square = i*i; first = square % 10; second = square / 10 % 10; third = square / 100; if (first == second || first == third || second == third) count++; &#125; return count;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习10-1 使用递归函数计算1到n之和（10 分）","slug":"liensi10-1","date":"2018-02-08T03:15:00.000Z","updated":"2018-02-08T03:25:41.843Z","comments":true,"path":"2018/02/08/liensi10-1/","link":"","permalink":"/2018/02/08/liensi10-1/","excerpt":"练习10-1 使用递归函数计算1到n之和（10 分）本题要求实现一个用递归计算1+2+3+…+n的和的简单函数。 函数接口定义：1int sum( int n ); 该函数对于传入的正整数n返回1+2+3+…+n的和；若n不是正整数则返回0。题目保证输入输出在长整型范围内。建议尝试写成递归函数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sum( int n );int main()&#123; int n; scanf(&quot;%d&quot;, &amp;n); printf (&quot;%d\\n&quot;, sum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：155 输入样例2：10 输出样例2：10","text":"练习10-1 使用递归函数计算1到n之和（10 分）本题要求实现一个用递归计算1+2+3+…+n的和的简单函数。 函数接口定义：1int sum( int n ); 该函数对于传入的正整数n返回1+2+3+…+n的和；若n不是正整数则返回0。题目保证输入输出在长整型范围内。建议尝试写成递归函数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sum( int n );int main()&#123; int n; scanf(&quot;%d&quot;, &amp;n); printf (&quot;%d\\n&quot;, sum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：155 输入样例2：10 输出样例2：10 12345678910111213141516171819202122#include &lt;stdio.h&gt;int sum( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf (\"%d\\n\", sum(n)); return 0;&#125; int sum( int n )&#123; int s; if ( n == 0) s = 0; else s = n + sum( n - 1); return s;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题9-6 按等级统计学生成绩（20 分）","slug":"siti9-6","date":"2018-02-08T03:13:00.000Z","updated":"2018-04-03T02:57:50.934Z","comments":true,"path":"2018/02/08/siti9-6/","link":"","permalink":"/2018/02/08/siti9-6/","excerpt":"习题9-6 按等级统计学生成绩（20 分）本题要求实现一个根据学生成绩设置其等级，并统计不及格人数的简单函数。 函数接口定义：1int set_grade( struct student *p, int n ); 其中p是指向学生信息的结构体数组的指针，该结构体的定义为： 123456struct student&#123; int num; char name[20]; int score; char grade;&#125;; n是数组元素个数。学号num、姓名name和成绩score均是已经存储好的。set_grade函数需要根据学生的成绩score设置其等级grade。等级设置：85－100为A，70－84为B，60－69为C，0－59为D。同时，set_grade还需要返回不及格的人数。 裁判测试程序样例：123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#define MAXN 10struct student&#123; int num; char name[20]; int score; char grade;&#125;;int set_grade( struct student *p, int n );int main()&#123; struct student stu[MAXN], *ptr; int n, i, count; ptr = stu; scanf(\"%d\\n\", &amp;n); for(i = 0; i &lt; n; i++)&#123; scanf(\"%d%s%d\", &amp;stu[i].num, stu[i].name, &amp;stu[i].score); &#125; count = set_grade(ptr, n); printf(\"The count for failed (&lt;60): %d\\n\", count); printf(\"The grades:\\n\"); for(i = 0; i &lt; n; i++) printf(\"%d %s %c\\n\", stu[i].num, stu[i].name, stu[i].grade); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12345678910111031001 annie 8531002 bonny 7531003 carol 7031004 dan 8431005 susan 9031006 paul 6931007 pam 6031008 apple 5031009 nancy 10031010 bob 78 输出样例：123456789101112The count for failed (&lt;60): 1The grades:31001 annie A31002 bonny B31003 carol B31004 dan B31005 susan A31006 paul C31007 pam C31008 apple D31009 nancy A31010 bob B","text":"习题9-6 按等级统计学生成绩（20 分）本题要求实现一个根据学生成绩设置其等级，并统计不及格人数的简单函数。 函数接口定义：1int set_grade( struct student *p, int n ); 其中p是指向学生信息的结构体数组的指针，该结构体的定义为： 123456struct student&#123; int num; char name[20]; int score; char grade;&#125;; n是数组元素个数。学号num、姓名name和成绩score均是已经存储好的。set_grade函数需要根据学生的成绩score设置其等级grade。等级设置：85－100为A，70－84为B，60－69为C，0－59为D。同时，set_grade还需要返回不及格的人数。 裁判测试程序样例：123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#define MAXN 10struct student&#123; int num; char name[20]; int score; char grade;&#125;;int set_grade( struct student *p, int n );int main()&#123; struct student stu[MAXN], *ptr; int n, i, count; ptr = stu; scanf(\"%d\\n\", &amp;n); for(i = 0; i &lt; n; i++)&#123; scanf(\"%d%s%d\", &amp;stu[i].num, stu[i].name, &amp;stu[i].score); &#125; count = set_grade(ptr, n); printf(\"The count for failed (&lt;60): %d\\n\", count); printf(\"The grades:\\n\"); for(i = 0; i &lt; n; i++) printf(\"%d %s %c\\n\", stu[i].num, stu[i].name, stu[i].grade); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12345678910111031001 annie 8531002 bonny 7531003 carol 7031004 dan 8431005 susan 9031006 paul 6931007 pam 6031008 apple 5031009 nancy 10031010 bob 78 输出样例：123456789101112The count for failed (&lt;60): 1The grades:31001 annie A31002 bonny B31003 carol B31004 dan B31005 susan A31006 paul C31007 pam C31008 apple D31009 nancy A31010 bob B 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;stdio.h&gt;#define MAXN 10struct student&#123; int num; char name[20]; int score; char grade;&#125;;int set_grade( struct student *p, int n );int main()&#123; struct student stu[MAXN], *ptr; int n, i, count; ptr = stu; scanf(\"%d\\n\", &amp;n); for(i = 0; i &lt; n; i++)&#123; scanf(\"%d%s%d\", &amp;stu[i].num, stu[i].name, &amp;stu[i].score); &#125; count = set_grade(ptr, n); printf(\"The count for failed (&lt;60): %d\\n\", count); printf(\"The grades:\\n\"); for(i = 0; i &lt; n; i++) printf(\"%d %s %c\\n\", stu[i].num, stu[i].name, stu[i].grade); return 0;&#125;int set_grade(struct student *p, int n)&#123; int i, count=0; for (i=1; i&lt;=n; i++,p++) &#123; if (p-&gt;score &gt;= 85) p-&gt;grade = 'A'; else if (p-&gt;score &gt;= 70) p-&gt;grade = 'B'; else if (p-&gt;score &gt;= 60) p-&gt;grade = 'C'; else &#123; p-&gt;grade = 'D'; count++; &#125; &#125; return count; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题9-5 通讯录排序（20 分）","slug":"siti9-5","date":"2018-02-08T03:12:00.000Z","updated":"2018-04-03T02:48:28.761Z","comments":true,"path":"2018/02/08/siti9-5/","link":"","permalink":"/2018/02/08/siti9-5/","excerpt":"习题9-5 通讯录排序（20 分）输入n个朋友的信息，包括姓名、生日、电话号码，本题要求编写程序，按照年龄从大到小的顺序依次输出通讯录。题目保证所有人的生日均不相同。 输入格式:输入第一行给出正整数n（&lt;10）。随后n行，每行按照“姓名 生日 电话号码”的格式给出一位朋友的信息，其中“姓名”是长度不超过10的英文字母组成的字符串，“生日”是yyyymmdd格式的日期，“电话号码”是不超过17位的数字及+、-组成的字符串。 输出格式:按照年龄从大到小输出朋友的信息，格式同输出。 输入样例:12343zhang 19850403 13912345678wang 19821020 +86-0571-88018448qian 19840619 13609876543 输出样例:123wang 19821020 +86-0571-88018448qian 19840619 13609876543zhang 19850403 13912345678","text":"习题9-5 通讯录排序（20 分）输入n个朋友的信息，包括姓名、生日、电话号码，本题要求编写程序，按照年龄从大到小的顺序依次输出通讯录。题目保证所有人的生日均不相同。 输入格式:输入第一行给出正整数n（&lt;10）。随后n行，每行按照“姓名 生日 电话号码”的格式给出一位朋友的信息，其中“姓名”是长度不超过10的英文字母组成的字符串，“生日”是yyyymmdd格式的日期，“电话号码”是不超过17位的数字及+、-组成的字符串。 输出格式:按照年龄从大到小输出朋友的信息，格式同输出。 输入样例:12343zhang 19850403 13912345678wang 19821020 +86-0571-88018448qian 19840619 13609876543 输出样例:123wang 19821020 +86-0571-88018448qian 19840619 13609876543zhang 19850403 13912345678 123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#include &lt;string.h&gt;struct contact &#123; char name[10]; int birthday; char telephoneNumber[17];&#125;;int main()&#123; int i, index, j, n; struct contact friend[10], temp; scanf(\"%d\", &amp;n); for (i=0; i&lt;n; i++) scanf(\"%s %d %s\", friend[i].name, &amp;friend[i].birthday, friend[i].telephoneNumber); for (i=0; i&lt;n-1; i++) &#123; index=i; for (j=i+1; j&lt;n; j++) if (friend[index].birthday &gt; friend[j].birthday) index=j; temp=friend[index]; friend[index]=friend[i]; friend[i]=temp; &#125; for (i=0; i&lt;n; i++) printf(\"%s %d %s\\n\", friend[i].name, friend[i].birthday, friend[i].telephoneNumber); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题9-3 平面向量加法（15 分）","slug":"siti9-3","date":"2018-02-08T03:06:00.000Z","updated":"2018-04-03T02:49:15.498Z","comments":true,"path":"2018/02/08/siti9-3/","link":"","permalink":"/2018/02/08/siti9-3/","excerpt":"习题9-3 平面向量加法（15 分）本题要求编写程序，计算两个二维平面向量的和向量。 输入格式:输入在一行中按照“x1 y1 x2 y2”的格式给出两个二维平面向量v1=(x1,y1)和v2=(x2,y2)的分量。 输出格式:在一行中按照(x, y)的格式输出和向量，坐标输出小数点后一位（注意不能输出−0.0）。 输入样例:13.5 -2.7 -13.9 8.7 输出样例:1(-10.4, 6.0)","text":"习题9-3 平面向量加法（15 分）本题要求编写程序，计算两个二维平面向量的和向量。 输入格式:输入在一行中按照“x1 y1 x2 y2”的格式给出两个二维平面向量v1=(x1,y1)和v2=(x2,y2)的分量。 输出格式:在一行中按照(x, y)的格式输出和向量，坐标输出小数点后一位（注意不能输出−0.0）。 输入样例:13.5 -2.7 -13.9 8.7 输出样例:1(-10.4, 6.0) 1234567891011121314151617#include&lt;stdio.h&gt;int main()&#123; struct xy&#123; double x; double y; &#125;; struct xy a,b,c; int i,j; scanf(\"%lf%lf%lf%lf\",&amp;a.x,&amp;a.y,&amp;b.x,&amp;b.y); c.x=a.x+b.x; c.y=a.y+b.y; if(c.x&lt;0&amp;&amp;c.x&gt;-0.05) c.x=0.0; if(c.y&lt;0&amp;&amp;c.y&gt;-0.05) c.y=0.0; printf(\"(%.1lf, %.1lf)\\n\",c.x,c.y); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题9-4 查找书籍（20 分）","slug":"siti9-4","date":"2018-02-08T03:06:00.000Z","updated":"2018-04-03T02:48:55.368Z","comments":true,"path":"2018/02/08/siti9-4/","link":"","permalink":"/2018/02/08/siti9-4/","excerpt":"习题9-4 查找书籍（20 分）给定n本书的名称和定价，本题要求编写程序，查找并输出其中定价最高和最低的书的名称和定价。 输入格式:输入第一行给出正整数n（&lt;10），随后给出n本书的信息。每本书在一行中给出书名，即长度不超过30的字符串，随后一行中给出正实数价格。题目保证没有同样价格的书。 输出格式:在一行中按照“价格, 书名”的格式先后输出价格最高和最低的书。价格保留2位小数。 输入样例:12345673Programming in C21.5Programming in VB18.5Programming in Delphi25.0 输出样例:1225.00, Programming in Delphi18.50, Programming in VB","text":"习题9-4 查找书籍（20 分）给定n本书的名称和定价，本题要求编写程序，查找并输出其中定价最高和最低的书的名称和定价。 输入格式:输入第一行给出正整数n（&lt;10），随后给出n本书的信息。每本书在一行中给出书名，即长度不超过30的字符串，随后一行中给出正实数价格。题目保证没有同样价格的书。 输出格式:在一行中按照“价格, 书名”的格式先后输出价格最高和最低的书。价格保留2位小数。 输入样例:12345673Programming in C21.5Programming in VB18.5Programming in Delphi25.0 输出样例:1225.00, Programming in Delphi18.50, Programming in VB 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;#include &lt;string.h&gt;struct book &#123; char name[30]; double price;&#125;;int main()&#123; int n, i, maxIndex, minIndex; double max, min; struct book store[10]; scanf(\"%d\", &amp;n); for (i=0; i&lt;n; i++) &#123; getchar(); gets(store[i].name); scanf(\"%lf\", &amp;store[i].price); &#125; max = min = store[0].price; for (i=0; i&lt;n; i++) &#123; if (max &lt;= store[i].price) &#123; max = store[i].price; maxIndex = i; &#125; if (min &gt;= store[i].price) &#123; min = store[i].price; minIndex = i; &#125; &#125; printf(\"%.2f, %s\\n\", max, store[maxIndex].name); printf(\"%.2f, %s\\n\", min, store[minIndex].name); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题9-2 计算两个复数之积（15 分）","slug":"siti9-2","date":"2018-02-06T03:44:00.000Z","updated":"2018-04-03T02:51:15.685Z","comments":true,"path":"2018/02/06/siti9-2/","link":"","permalink":"/2018/02/06/siti9-2/","excerpt":"习题9-2 计算两个复数之积（15 分）本题要求实现一个计算复数之积的简单函数。 函数接口定义：1struct complex multiply(struct complex x, struct complex y); 其中struct complex是复数结构体，其定义如下： 1234struct complex&#123; int real; int imag;&#125;; 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;struct complex&#123; int real; int imag;&#125;;struct complex multiply(struct complex x, struct complex y);int main()&#123; struct complex product, x, y; scanf(&quot;%d%d%d%d&quot;, &amp;x.real, &amp;x.imag, &amp;y.real, &amp;y.imag); product = multiply(x, y); printf(&quot;(%d+%di) * (%d+%di) = %d + %di\\n&quot;, x.real, x.imag, y.real, y.imag, product.real, product.imag); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：13 4 5 6 输出样例：1(3+4i) * (5+6i) = -9 + 38i","text":"习题9-2 计算两个复数之积（15 分）本题要求实现一个计算复数之积的简单函数。 函数接口定义：1struct complex multiply(struct complex x, struct complex y); 其中struct complex是复数结构体，其定义如下： 1234struct complex&#123; int real; int imag;&#125;; 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;struct complex&#123; int real; int imag;&#125;;struct complex multiply(struct complex x, struct complex y);int main()&#123; struct complex product, x, y; scanf(&quot;%d%d%d%d&quot;, &amp;x.real, &amp;x.imag, &amp;y.real, &amp;y.imag); product = multiply(x, y); printf(&quot;(%d+%di) * (%d+%di) = %d + %di\\n&quot;, x.real, x.imag, y.real, y.imag, product.real, product.imag); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：13 4 5 6 输出样例：1(3+4i) * (5+6i) = -9 + 38i 123456789101112131415161718192021222324252627#include &lt;stdio.h&gt;struct complex&#123; int real; int imag;&#125;;struct complex multiply(struct complex x, struct complex y);int main()&#123; struct complex product, x, y; scanf(\"%d%d%d%d\", &amp;x.real, &amp;x.imag, &amp;y.real, &amp;y.imag); product = multiply(x, y); printf(\"(%d+%di) * (%d+%di) = %d + %di\\n\", x.real, x.imag, y.real, y.imag, product.real, product.imag); return 0;&#125;struct complex multiply(struct complex x, struct complex y)&#123; struct complex result; result.real = x.real*y.real - x.imag*y.imag; result.imag = x.imag*y.real + x.real*y.imag; return result;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题9-1 时间换算（15 分）","slug":"siti9-1","date":"2018-02-06T03:42:00.000Z","updated":"2018-04-03T02:49:52.592Z","comments":true,"path":"2018/02/06/siti9-1/","link":"","permalink":"/2018/02/06/siti9-1/","excerpt":"习题9-1 时间换算（15 分）本题要求编写程序，以hh:mm:ss的格式输出某给定时间再过n秒后的时间值（超过23:59:59就从0点开始计时）。 输入格式：输入在第一行中以hh:mm:ss的格式给出起始时间，第二行给出整秒数n（&lt;60）。 输出格式：输出在一行中给出hh:mm:ss格式的结果时间。 输入样例：1211:59:4030 输出样例：112:00:10","text":"习题9-1 时间换算（15 分）本题要求编写程序，以hh:mm:ss的格式输出某给定时间再过n秒后的时间值（超过23:59:59就从0点开始计时）。 输入格式：输入在第一行中以hh:mm:ss的格式给出起始时间，第二行给出整秒数n（&lt;60）。 输出格式：输出在一行中给出hh:mm:ss格式的结果时间。 输入样例：1211:59:4030 输出样例：112:00:10 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include &lt;stdio.h&gt;int main()&#123; struct time &#123; int h; int m; int s; int n; &#125;a; scanf(\"%d:%d:%d\", &amp;a.h, &amp;a.m, &amp;a.s); scanf(\"%d\", &amp;a.n); if (a.s+a.n&lt;59) a.s=a.s+a.n; else if (a.s+a.n==59) &#123; a.s=0; if(a.m==59) &#123; a.m=0; if(a.h==23) &#123; a.h=0; &#125;else &#123; a.h=a.h+1; &#125; &#125; else &#123; a.m=a.m+1; &#125; &#125; else if((a.s+a.n)&gt;59) &#123; a.s=(a.n+a.s)-60; if(a.m==59) &#123; a.m=0; if(a.h==23) &#123; a.h=0; &#125; else &#123; a.h=a.h+1; &#125; &#125; else &#123; a.m=a.m+1; &#125; &#125; printf(\"%02d:%02d:%02d\\n\", a.h, a.m, a.s); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-10 输出学生成绩（20 分）","slug":"siti8-10","date":"2018-02-06T03:01:00.000Z","updated":"2018-04-03T02:51:33.744Z","comments":true,"path":"2018/02/06/siti8-10/","link":"","permalink":"/2018/02/06/siti8-10/","excerpt":"习题8-10 输出学生成绩（20 分）本题要求编写程序，根据输入学生的成绩，统计并输出学生的平均成绩、最高成绩和最低成绩。建议使用动态内存分配来实现。 输入格式：输入第一行首先给出一个正整数N，表示学生的个数。接下来一行给出N个学生的成绩，数字间以空格分隔。 输出格式：按照以下格式输出： 123average = 平均成绩max = 最高成绩min = 最低成绩 结果均保留两位小数。 输入样例：12385 90 95 输出样例：123average = 90.00max = 95.00min = 85.00","text":"习题8-10 输出学生成绩（20 分）本题要求编写程序，根据输入学生的成绩，统计并输出学生的平均成绩、最高成绩和最低成绩。建议使用动态内存分配来实现。 输入格式：输入第一行首先给出一个正整数N，表示学生的个数。接下来一行给出N个学生的成绩，数字间以空格分隔。 输出格式：按照以下格式输出： 123average = 平均成绩max = 最高成绩min = 最低成绩 结果均保留两位小数。 输入样例：12385 90 95 输出样例：123average = 90.00max = 95.00min = 85.00 1234567891011121314151617181920212223242526#include &lt;stdlib.h&gt;int main()&#123; int n, sum, i, max, min, *p; double average; scanf(\"%d\", &amp;n); p = (int *) calloc(n,sizeof(int)); sum = 0; max = 0; min = 100; for (i=0; i&lt;n; i++) &#123; scanf(\"%d\", p+i); sum = sum + *(p+i); if (max &lt;= *(p+i)) max = *(p+i); if (min &gt;= *(p+i)) min = *(p+i); &#125; average = (double) sum/n; printf(\"average = %.2f\\nmax = %.2f\\nmin = %.2f\\n\", average, (double) max, (double) min); free(p); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-8 判断回文字符串（20 分）","slug":"siti8-8","date":"2018-02-06T02:57:00.000Z","updated":"2018-04-03T02:55:59.537Z","comments":true,"path":"2018/02/06/siti8-8/","link":"","permalink":"/2018/02/06/siti8-8/","excerpt":"习题8-8 判断回文字符串（20 分）本题要求编写函数，判断给定的一串字符是否为“回文”。所谓“回文”是指顺读和倒读都一样的字符串。如“XYZYX”和“xyzzyx”都是回文。 函数接口定义：1bool palindrome( char *s ); 函数palindrome判断输入字符串char *s是否为回文。若是则返回true，否则返回false。 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXN 20typedef enum &#123;false, true&#125; bool;bool palindrome( char *s );int main()&#123; char s[MAXN]; scanf(\"%s\", s); if ( palindrome(s)==true ) printf(\"Yes\\n\"); else printf(\"No\\n\"); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1thisistrueurtsisiht 输出样例1：12Yesthisistrueurtsisiht 输入样例2：1thisisnottrue 输出样例2：12Nothisisnottrue","text":"习题8-8 判断回文字符串（20 分）本题要求编写函数，判断给定的一串字符是否为“回文”。所谓“回文”是指顺读和倒读都一样的字符串。如“XYZYX”和“xyzzyx”都是回文。 函数接口定义：1bool palindrome( char *s ); 函数palindrome判断输入字符串char *s是否为回文。若是则返回true，否则返回false。 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXN 20typedef enum &#123;false, true&#125; bool;bool palindrome( char *s );int main()&#123; char s[MAXN]; scanf(\"%s\", s); if ( palindrome(s)==true ) printf(\"Yes\\n\"); else printf(\"No\\n\"); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1thisistrueurtsisiht 输出样例1：12Yesthisistrueurtsisiht 输入样例2：1thisisnottrue 输出样例2：12Nothisisnottrue 12345678910111213141516171819202122232425262728293031323334353637#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXN 20typedef enum &#123;false, true&#125; bool;bool palindrome( char *s );int main()&#123; char s[MAXN]; scanf(\"%s\", s); if ( palindrome(s)==true ) printf(\"Yes\\n\"); else printf(\"No\\n\"); printf(\"%s\\n\", s); return 0;&#125;bool palindrome( char *s )&#123; int len; len=strlen(s); int i,j; for(i=0,j=len-1;i&lt;=j;i++,j--)&#123; if(*(s+i)!=*(s+j))&#123; break; &#125; &#125; if(i&gt;j)&#123; return true; &#125;else&#123; return false; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-9 分类统计各类字符个数（15 分）","slug":"siti8-9","date":"2018-02-06T02:57:00.000Z","updated":"2018-04-03T02:52:36.988Z","comments":true,"path":"2018/02/06/siti8-9/","link":"","permalink":"/2018/02/06/siti8-9/","excerpt":"习题8-9 分类统计各类字符个数（15 分）本题要求实现一个函数，统计给定字符串中的大写字母、小写字母、空格、数字以及其它字符各有多少。 函数接口定义：1void StringCount( char *s ); 其中 char *s 是用户传入的字符串。函数StringCount须在一行内按照 1大写字母个数 小写字母个数 空格个数 数字个数 其它字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char *s );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ&amp;*?093 Az 输出样例：12 2 1 3 4","text":"习题8-9 分类统计各类字符个数（15 分）本题要求实现一个函数，统计给定字符串中的大写字母、小写字母、空格、数字以及其它字符各有多少。 函数接口定义：1void StringCount( char *s ); 其中 char *s 是用户传入的字符串。函数StringCount须在一行内按照 1大写字母个数 小写字母个数 空格个数 数字个数 其它字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char *s );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ&amp;*?093 Az 输出样例：12 2 1 3 4 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char *s );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;void StringCount(char s[])&#123; int i, uppercase, lowercase, blank, digit, other; uppercase = lowercase = blank = digit = other =0; i = 0; while(s[i] != '\\0') &#123; if (s[i] &gt;= 'A'&amp;&amp; s[i] &lt;= 'Z') uppercase++; else if (s[i] &gt;= 'a' &amp;&amp; s[i] &lt;= 'z') lowercase++; else if (s[i] == ' ') blank++; else if (s[i] &gt;= '0' &amp;&amp; s[i] &lt;= '9') digit++; else other++; i++; &#125; printf(\"%d %d %d %d %d\\n\", uppercase, lowercase, blank, digit, other);&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-6 删除字符（20 分）","slug":"siti8-6","date":"2018-02-06T02:45:00.000Z","updated":"2018-04-03T02:55:20.189Z","comments":true,"path":"2018/02/06/siti8-6/","link":"","permalink":"/2018/02/06/siti8-6/","excerpt":"习题8-6 删除字符（20 分）本题要求实现一个删除字符串中的指定字符的简单函数。 函数接口定义：1void delchar( char *str, char c ); 其中char *str是传入的字符串，c是待删除的字符。函数delchar的功能是将字符串str中出现的所有c字符删除。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 20void delchar( char *str, char c );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char str[MAXN], c; scanf(\"%c\\n\", &amp;c); ReadString(str); delchar(str, c); printf(\"%s\\n\", str); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12ahappy new year 输出样例：1hppy new yer","text":"习题8-6 删除字符（20 分）本题要求实现一个删除字符串中的指定字符的简单函数。 函数接口定义：1void delchar( char *str, char c ); 其中char *str是传入的字符串，c是待删除的字符。函数delchar的功能是将字符串str中出现的所有c字符删除。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 20void delchar( char *str, char c );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char str[MAXN], c; scanf(\"%c\\n\", &amp;c); ReadString(str); delchar(str, c); printf(\"%s\\n\", str); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12ahappy new year 输出样例：1hppy new yer 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;stdio.h&gt;#define MAXN 20void delchar( char *str, char c );int main()&#123; char str[MAXN], c; scanf(\"%c\\n\", &amp;c); gets(str); delchar(str, c); printf(\"%s\\n\", str); return 0;&#125;void delchar( char *str, char c )&#123; int i=0,count=0,j=0,coun=0,q=0; char a [100],b[100]; while(str[i++]!='\\0')&#123;count++;&#125; for(i=0;i&lt;count;i++)&#123; if(str[i]==c)&#123;continue;&#125;else&#123; a[j++]=str[i]; coun++;&#125;&#125;j=0;for(i=0;i&lt;coun;i++)&#123; str[q++]=a[j++];&#125;//注意此处加终止符表示结束 str[q]='\\0';&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-7 字符串排序（20 分）","slug":"siti8-7","date":"2018-02-06T02:45:00.000Z","updated":"2018-04-03T02:46:29.672Z","comments":true,"path":"2018/02/06/siti8-7/","link":"","permalink":"/2018/02/06/siti8-7/","excerpt":"习题8-7 字符串排序（20 分）本题要求编写程序，读入5个字符串，按由小到大的顺序输出。 输入格式：输入为由空格分隔的5个非空字符串，每个字符串不包括空格、制表符、换行符等空白字符，长度小于80。 输出格式：按照以下格式输出排序后的结果： 12After sorted:每行一个字符串 输入样例：1red yellow blue green white 输出样例：123456After sorted:bluegreenredwhiteyellow","text":"习题8-7 字符串排序（20 分）本题要求编写程序，读入5个字符串，按由小到大的顺序输出。 输入格式：输入为由空格分隔的5个非空字符串，每个字符串不包括空格、制表符、换行符等空白字符，长度小于80。 输出格式：按照以下格式输出排序后的结果： 12After sorted:每行一个字符串 输入样例：1red yellow blue green white 输出样例：123456After sorted:bluegreenredwhiteyellow 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;void bubble(char *color[], int n);int main()&#123; int i; char *pcolor[5], str[80]; for (i=0; i&lt;5; i++) &#123; scanf(\"%s\", str); pcolor[i] = malloc(sizeof(char)*(strlen(str)+1)); strcpy(pcolor[i], str); &#125; bubble(pcolor, 5); printf(\"After sorted:\\n\"); for (i=0; i&lt;5; i++) &#123; printf(\"%s\\n\", pcolor[i]); free(pcolor[i]); &#125; return 0;&#125;void bubble(char *color[], int n)&#123; int k, j; char *temp; for (k=1; k&lt;n; k++) &#123; for (j=0; j&lt;n-k; j++) &#123; if (strcmp(color[j], color[j+1]) &gt; 0) &#123; temp = color[j]; color[j] = color[j+1]; color[j+1] = temp; &#125; &#125; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-5 使用函数实现字符串部分复制（20 分）","slug":"siti8-5","date":"2018-02-04T04:19:00.000Z","updated":"2018-04-03T02:55:04.007Z","comments":true,"path":"2018/02/04/siti8-5/","link":"","permalink":"/2018/02/04/siti8-5/","excerpt":"习题8-5 使用函数实现字符串部分复制（20 分）本题要求编写函数，将输入字符串t中从第m个字符开始的全部字符复制到字符串s中。 函数接口定义：1void strmcpy( char *t, int m, char *s ); 函数strmcpy将输入字符串char *t中从第m个字符开始的全部字符复制到字符串char *s中。若m超过输入字符串的长度，则结果字符串应为空串。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void strmcpy( char *t, int m, char *s );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char t[MAXN], s[MAXN]; int m; scanf(\"%d\\n\", &amp;m); ReadString(t); strmcpy( t, m, s ); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：127happy new year 输出样例：1new year","text":"习题8-5 使用函数实现字符串部分复制（20 分）本题要求编写函数，将输入字符串t中从第m个字符开始的全部字符复制到字符串s中。 函数接口定义：1void strmcpy( char *t, int m, char *s ); 函数strmcpy将输入字符串char *t中从第m个字符开始的全部字符复制到字符串char *s中。若m超过输入字符串的长度，则结果字符串应为空串。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void strmcpy( char *t, int m, char *s );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char t[MAXN], s[MAXN]; int m; scanf(\"%d\\n\", &amp;m); ReadString(t); strmcpy( t, m, s ); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：127happy new year 输出样例：1new year 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#define MAXN 20void strmcpy( char *t, int m, char *s );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char t[MAXN], s[MAXN]; int m; scanf(\"%d\\n\", &amp;m); ReadString(t); strmcpy( t, m, s ); printf(\"%s\\n\", s); return 0;&#125;void ReadString(char s[])&#123;gets(s);&#125;void strmcpy(char *t, int m, char *s)&#123; int i, j, length; length=0; while (t[length] != '\\0') length++; j = 0;if (m&gt;0 &amp;&amp; m&lt;=length)&#123;for (i=m-1; t[i] !='\\0'; i++)&#123; s[j] = t[i]; j++;&#125; s[j] = '\\0';&#125;else s[0] = '\\0';&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-4 报数（20 分）","slug":"siti8-4","date":"2018-02-04T03:50:00.000Z","updated":"2018-04-03T02:54:45.525Z","comments":true,"path":"2018/02/04/siti8-4/","link":"","permalink":"/2018/02/04/siti8-4/","excerpt":"习题8-4 报数（20 分）报数游戏是这样的：有n个人围成一圈，按顺序从1到n编好号。从第一个人开始报数，报到m（&lt;n）的人退出圈子；下一个人从1开始报数，报到m的人退出圈子。如此下去，直到留下最后一个人。 本题要求编写函数，给出每个人的退出顺序编号。 函数接口定义：1void CountOff( int n, int m, int out[] ); 其中n是初始人数；m是游戏规定的退出位次（保证为小于n的正整数）。函数CountOff将每个人的退出顺序编号存在数组out[]中。因为C语言数组下标是从0开始的，所以第i个位置上的人是第out[i-1]个退出的。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void CountOff( int n, int m, int out[] );int main()&#123; int out[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); CountOff( n, m, out ); for ( i = 0; i &lt; n; i++ ) printf(\"%d \", out[i]); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：111 3 输出样例：14 10 1 7 5 2 11 9 3 6 8","text":"习题8-4 报数（20 分）报数游戏是这样的：有n个人围成一圈，按顺序从1到n编好号。从第一个人开始报数，报到m（&lt;n）的人退出圈子；下一个人从1开始报数，报到m的人退出圈子。如此下去，直到留下最后一个人。 本题要求编写函数，给出每个人的退出顺序编号。 函数接口定义：1void CountOff( int n, int m, int out[] ); 其中n是初始人数；m是游戏规定的退出位次（保证为小于n的正整数）。函数CountOff将每个人的退出顺序编号存在数组out[]中。因为C语言数组下标是从0开始的，所以第i个位置上的人是第out[i-1]个退出的。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void CountOff( int n, int m, int out[] );int main()&#123; int out[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); CountOff( n, m, out ); for ( i = 0; i &lt; n; i++ ) printf(\"%d \", out[i]); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：111 3 输出样例：14 10 1 7 5 2 11 9 3 6 8 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;stdio.h&gt;#define MAXN 20void CountOff( int n, int m, int out[] );int main()&#123; int out[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); CountOff( n, m, out ); for ( i = 0; i &lt; n; i++ ) printf(\"%d \", out[i]); printf(\"\\n\"); return 0;&#125;void CountOff( int n, int m, int out[] )&#123; int i=0,j=0,k=0,cnt=0,a[MAXN]; for(i=0;i&lt;n;i++) a[i] = i+1; i=0; while(cnt &lt; n)&#123; if(a[i]!=0) k++; if(k==m)&#123; j++; out[i]=j; k=0; cnt++; a[i]=0; &#125; i++; if(i==n) i=0;&#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-3 数组循环右移（20 分）","slug":"siti8-3","date":"2018-02-01T06:23:00.000Z","updated":"2018-04-03T02:54:21.972Z","comments":true,"path":"2018/02/01/siti8-3/","link":"","permalink":"/2018/02/01/siti8-3/","excerpt":"习题8-3 数组循环右移（20 分）本题要求实现一个对数组进行循环右移的简单函数：一个数组a中存有n（&gt;0）个整数，将每个整数循环向右移m（≥0）个位置，即将a中的数据由（a0a1⋯an−1）变换为（an−m⋯an−1a0a1⋯an−m−1）（最后m个数循环移至最前面的m个位置）。 函数接口定义：1int ArrayShift( int a[], int n, int m ); 其中a[]是用户传入的数组；n是数组的大小；m是右移的位数。函数ArrayShift须将循环右移后的数组仍然存在a[]中。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#define MAXN 10int ArrayShift( int a[], int n, int m );int main()&#123; int a[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); for ( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); ArrayShift(a, n, m); for ( i = 0; i &lt; n; i++ ) &#123; if (i != 0) printf(\" \"); printf(\"%d\", a[i]); &#125; printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：126 21 2 3 4 5 6 输出样例：15 6 1 2 3 4","text":"习题8-3 数组循环右移（20 分）本题要求实现一个对数组进行循环右移的简单函数：一个数组a中存有n（&gt;0）个整数，将每个整数循环向右移m（≥0）个位置，即将a中的数据由（a0a1⋯an−1）变换为（an−m⋯an−1a0a1⋯an−m−1）（最后m个数循环移至最前面的m个位置）。 函数接口定义：1int ArrayShift( int a[], int n, int m ); 其中a[]是用户传入的数组；n是数组的大小；m是右移的位数。函数ArrayShift须将循环右移后的数组仍然存在a[]中。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#define MAXN 10int ArrayShift( int a[], int n, int m );int main()&#123; int a[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); for ( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); ArrayShift(a, n, m); for ( i = 0; i &lt; n; i++ ) &#123; if (i != 0) printf(\" \"); printf(\"%d\", a[i]); &#125; printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：126 21 2 3 4 5 6 输出样例：15 6 1 2 3 4 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#include &lt;stdio.h&gt;#define MAXN 10int ArrayShift( int a[], int n, int m );int main()&#123;int a[MAXN], n, m;int i;scanf(\"%d %d\", &amp;n, &amp;m);for ( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]);ArrayShift(a, n, m);for ( i = 0; i &lt; n; i++ ) &#123;if (i != 0) printf(\" \");printf(\"%d\", a[i]);&#125;printf(\"\\n\");return 0;&#125;Reverse(int* arr, int b, int e)&#123; for(; b &lt; e; b++, e--) &#123; int temp = arr[e]; arr[e] = arr[b]; arr[b] = temp; &#125;&#125;ArrayShift(int* arr, int N, int k)&#123; k %= N; Reverse(arr, 0, N - k - 1); Reverse(arr, N - k, N - 1); Reverse(arr, 0, N - 1);&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-2 在数组中查找指定元素（15 分）","slug":"siti8-2","date":"2018-02-01T02:26:00.000Z","updated":"2018-04-03T02:53:57.094Z","comments":true,"path":"2018/02/01/siti8-2/","link":"","permalink":"/2018/02/01/siti8-2/","excerpt":"习题8-2 在数组中查找指定元素（15 分）本题要求实现一个在数组中查找指定元素的简单函数。 函数接口定义：1int search( int list[], int n, int x ); 其中list[]是用户传入的数组；n（≥0）是list[]中元素的个数；x是待查找的元素。如果找到 则函数search返回相应元素的最小下标（下标从0开始），否则返回−1。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int search( int list[], int n, int x );int main()&#123; int i, index, n, x; int a[MAXN]; scanf(\"%d\", &amp;n); for( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); scanf(\"%d\", &amp;x); index = search( a, n, x ); if( index != -1 ) printf(\"index = %d\\n\", index); else printf(\"Not found\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12351 2 2 5 42 输出样例1：1index = 1 输入样例2：12351 2 2 5 40 输出样例2：1Not found","text":"习题8-2 在数组中查找指定元素（15 分）本题要求实现一个在数组中查找指定元素的简单函数。 函数接口定义：1int search( int list[], int n, int x ); 其中list[]是用户传入的数组；n（≥0）是list[]中元素的个数；x是待查找的元素。如果找到 则函数search返回相应元素的最小下标（下标从0开始），否则返回−1。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int search( int list[], int n, int x );int main()&#123; int i, index, n, x; int a[MAXN]; scanf(\"%d\", &amp;n); for( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); scanf(\"%d\", &amp;x); index = search( a, n, x ); if( index != -1 ) printf(\"index = %d\\n\", index); else printf(\"Not found\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12351 2 2 5 42 输出样例1：1index = 1 输入样例2：12351 2 2 5 40 输出样例2：1Not found 123456789101112131415161718192021222324252627282930313233int search( int list[], int n, int x );#define MAXN 10int main()&#123;int i, index, n, x;int a[MAXN];scanf(\"%d\", &amp;n);for( i = 0; i &lt; n; i++ )scanf(\"%d\", &amp;a[i]);scanf(\"%d\", &amp;x);index = search( a, n, x );if( index != -1 )printf(\"index = %d\\n\", index);elseprintf(\"Not found\\n\");return 0;&#125;int search( int list[], int n, int x )&#123;int i,*p=&amp;list[0];for(i=0;i&lt;n;i++)&#123;if(x==*p++)&#123;break;&#125;&#125;if(i==n)&#123;return -1;&#125;return i;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题8-1 拆分实数的整数与小数部分（15 分）","slug":"siti8-1","date":"2018-02-01T01:49:00.000Z","updated":"2018-04-03T02:53:24.957Z","comments":true,"path":"2018/02/01/siti8-1/","link":"","permalink":"/2018/02/01/siti8-1/","excerpt":"习题8-1 拆分实数的整数与小数部分（15 分）本题要求实现一个拆分实数的整数与小数部分的简单函数。 函数接口定义：1void splitfloat( float x, int *intpart, float *fracpart ); 其中x是被拆分的实数（0≤x&lt;10000），*intpart和*fracpart分别是将实数x拆分出来的整数部分与小数部分。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;void splitfloat( float x, int *intpart, float *fracpart );int main()&#123; float x, fracpart; int intpart; scanf(\"%f\", &amp;x); splitfloat(x, &amp;intpart, &amp;fracpart); printf(\"The integer part is %d\\n\", intpart); printf(\"The fractional part is %g\\n\", fracpart); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12.718 输出样例：12The integer part is 2The fractional part is 0.718","text":"习题8-1 拆分实数的整数与小数部分（15 分）本题要求实现一个拆分实数的整数与小数部分的简单函数。 函数接口定义：1void splitfloat( float x, int *intpart, float *fracpart ); 其中x是被拆分的实数（0≤x&lt;10000），*intpart和*fracpart分别是将实数x拆分出来的整数部分与小数部分。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;void splitfloat( float x, int *intpart, float *fracpart );int main()&#123; float x, fracpart; int intpart; scanf(\"%f\", &amp;x); splitfloat(x, &amp;intpart, &amp;fracpart); printf(\"The integer part is %d\\n\", intpart); printf(\"The fractional part is %g\\n\", fracpart); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12.718 输出样例：12The integer part is 2The fractional part is 0.718 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;void splitfloat( float x, int *intpart, float *fracpart );int main()&#123;float x, fracpart;int intpart;scanf(\"%f\", &amp;x);splitfloat(x, &amp;intpart, &amp;fracpart);printf(\"The integer part is %d\\n\", intpart);printf(\"The fractional part is %g\\n\", fracpart);return 0;&#125;void splitfloat(float x, int *intpart, float *fracpart) &#123;if(x&lt;0) x=-x;*intpart=(int)x;*fracpart=x-*intpart;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习8-8 移动字母（10 分）","slug":"liensi8-8","date":"2018-01-24T10:42:00.000Z","updated":"2018-02-04T04:55:16.890Z","comments":true,"path":"2018/01/24/liensi8-8/","link":"","permalink":"/2018/01/24/liensi8-8/","excerpt":"练习8-8 移动字母（10 分）本题要求编写函数，将输入字符串的前3个字符移到最后。 函数接口定义：void Shift( char s[] );其中char s[]是用户传入的字符串，题目保证其长度不小于3；函数Shift须将按照要求变换后的字符串仍然存在s[]里。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10void Shift( char s[] );void GetString( char s[] ); /* 实现细节在此不表 */int main()&#123; char s[MAXS]; GetString(s); Shift(s); printf(\"%s\\n\", s); return 0; &#125;/* 你的代码将被嵌在这里 */ 输入样例：abcdef 输出样例：defabc","text":"练习8-8 移动字母（10 分）本题要求编写函数，将输入字符串的前3个字符移到最后。 函数接口定义：void Shift( char s[] );其中char s[]是用户传入的字符串，题目保证其长度不小于3；函数Shift须将按照要求变换后的字符串仍然存在s[]里。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10void Shift( char s[] );void GetString( char s[] ); /* 实现细节在此不表 */int main()&#123; char s[MAXS]; GetString(s); Shift(s); printf(\"%s\\n\", s); return 0; &#125;/* 你的代码将被嵌在这里 */ 输入样例：abcdef 输出样例：defabc 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10void Shift( char s[] );void GetString( char s[] ); /* 实现细节在此不表 */int main()&#123; char s[MAXS]; GetString(s); Shift(s); printf(\"%s\\n\", s); return 0; &#125;void GetString(char s[])&#123; gets(s);&#125;void Shift(char s[])&#123; int i, count; char str[5]; for (i=0; i&lt;3; i++) str[i] = s[i]; for (i=0; s[i+3] != '\\0'; i++) s[i] = s[i+3]; count = i; for (i=0; i&lt;3;i++) &#123; s[count] = str[i]; count++; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习8-2 计算两数的和与差（10 分）","slug":"liensi8-2","date":"2018-01-24T10:40:00.000Z","updated":"2018-02-04T04:55:27.812Z","comments":true,"path":"2018/01/24/liensi8-2/","link":"","permalink":"/2018/01/24/liensi8-2/","excerpt":"练习8-2 计算两数的和与差（10 分）本题要求实现一个计算输入的两数的和与差的简单函数。 函数接口定义：void sum_diff( float op1, float op2, float psum, float pdiff );其中op1和op2是输入的两个实数，psum和pdiff是计算得出的和与差。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;void sum_diff( float op1, float op2, float *psum, float *pdiff );int main()&#123; float a, b, sum, diff; scanf(\"%f %f\", &amp;a, &amp;b); sum_diff(a, b, &amp;sum, &amp;diff); printf(\"The sum is %.2f\\nThe diff is %.2f\\n\", sum, diff); return 0; &#125; /* 你的代码将被嵌在这里 */ 输入样例：4 6 输出样例：The sum is 10.00The diff is -2.00","text":"练习8-2 计算两数的和与差（10 分）本题要求实现一个计算输入的两数的和与差的简单函数。 函数接口定义：void sum_diff( float op1, float op2, float psum, float pdiff );其中op1和op2是输入的两个实数，psum和pdiff是计算得出的和与差。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;void sum_diff( float op1, float op2, float *psum, float *pdiff );int main()&#123; float a, b, sum, diff; scanf(\"%f %f\", &amp;a, &amp;b); sum_diff(a, b, &amp;sum, &amp;diff); printf(\"The sum is %.2f\\nThe diff is %.2f\\n\", sum, diff); return 0; &#125; /* 你的代码将被嵌在这里 */ 输入样例：4 6 输出样例：The sum is 10.00The diff is -2.00 123456789101112131415161718#include &lt;stdio.h&gt;void sum_diff( float op1, float op2, float *psum, float *pdiff );int main()&#123; float a, b, sum, diff; scanf(\"%f %f\", &amp;a, &amp;b); sum_diff(a, b, &amp;sum, &amp;diff); printf(\"The sum is %.2f\\nThe diff is %.2f\\n\", sum, diff); return 0; &#125;void sum_diff( float op1, float op2, float *psum, float *pdiff )&#123; *psum=op1+op2; *pdiff=op1-op2;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-8 字符串转换成十进制整数（15 分）","slug":"siti7-8","date":"2018-01-24T10:38:00.000Z","updated":"2018-04-03T02:45:33.965Z","comments":true,"path":"2018/01/24/siti7-8/","link":"","permalink":"/2018/01/24/siti7-8/","excerpt":"习题7-8 字符串转换成十进制整数（15 分）输入一个以#结束的字符串，本题要求滤去所有的非十六进制字符（不分大小写），组成一个新的表示十六进制数字的字符串，然后将其转换为十进制数后输出。如果在第一个十六进制字符之前存在字符“-”，则代表该数是负数。 输入格式：输入在一行中给出一个以#结束的非空字符串。 输出格式：在一行中输出转换后的十进制数。题目保证输出在长整型范围内。 输入样例：1+-P-xf4+-1!# 输出样例：1-3905","text":"习题7-8 字符串转换成十进制整数（15 分）输入一个以#结束的字符串，本题要求滤去所有的非十六进制字符（不分大小写），组成一个新的表示十六进制数字的字符串，然后将其转换为十进制数后输出。如果在第一个十六进制字符之前存在字符“-”，则代表该数是负数。 输入格式：输入在一行中给出一个以#结束的非空字符串。 输出格式：在一行中输出转换后的十进制数。题目保证输出在长整型范围内。 输入样例：1+-P-xf4+-1!# 输出样例：1-3905 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;stdio.h&gt;int main()&#123; int i, j, flag; char hexad[100], str[100]; long number; i = 0; while ((str[i] = getchar()) != '#') i++; str[i] = '\\0'; flag = 0; for (i = 0; str[i] != '\\0'; i++) &#123; if (str[i] == '-') &#123; flag = 1; break; &#125; else if ((str[i] &gt;= '0' &amp;&amp; str[i] &lt;= '9')) break; &#125; if (flag) &#123; hexad[0] = '-'; j = 1; &#125; else j = 0; for (i = 0; str[i] != '\\0'; i++) &#123; if ((str[i] &gt;= '0' &amp;&amp; str[i] &lt;= '9') || (str[i] &gt;= 'a' &amp;&amp; str[i] &lt;= 'f') || (str[i] &gt;= 'A' &amp;&amp; str[i] &lt;= 'F')) &#123; hexad[j] = str[i]; j++; &#125; &#125; hexad[j] = '\\0'; number = 0; for (i = 0; hexad[i] != '\\0'; i++) &#123; if (hexad[i] &gt;= '0' &amp;&amp; hexad[i] &lt;= '9') number = number*16 + hexad[i]-'0'; else if (hexad[i] &gt;= 'A' &amp;&amp; hexad[i] &lt;= 'F') number = number*16+hexad[i]-'A'+10; else if (hexad[i] &gt;= 'a' &amp;&amp; hexad[i] &lt;= 'f') number = number*16 + hexad[i]-'a'+10; &#125; if (hexad[0] == '-' &amp;&amp; number &lt; 0xabcdef) number = -1*number; printf(\"%ld\\n\", number); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-7 字符串替换（15 分）","slug":"siti7-7","date":"2018-01-24T10:36:00.000Z","updated":"2018-04-03T02:45:14.898Z","comments":true,"path":"2018/01/24/siti7-7/","link":"","permalink":"/2018/01/24/siti7-7/","excerpt":"习题7-7 字符串替换（15 分）本题要求编写程序，将给定字符串中的大写英文字母按以下对应规则替换： 原字母 对应字母 A Z B Y C X D W … … X C Y B Z A 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出替换完成后的字符串。 输入样例：1Only the 11 CAPItaL LeTtERS are replaced. 输出样例：1Lnly the 11 XZKRtaO OeGtVIH are replaced.","text":"习题7-7 字符串替换（15 分）本题要求编写程序，将给定字符串中的大写英文字母按以下对应规则替换： 原字母 对应字母 A Z B Y C X D W … … X C Y B Z A 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出替换完成后的字符串。 输入样例：1Only the 11 CAPItaL LeTtERS are replaced. 输出样例：1Lnly the 11 XZKRtaO OeGtVIH are replaced. 123456789101112131415161718192021222324//字符串替换#include&lt;stdio.h&gt;int main(void)&#123; int i=0; char str[80]; printf(\"Enter a string:\"); while((str[i]=getchar())!='\\n') i++; str[i]='\\0'; for(i=0;str[i]!='\\0';i++) &#123; if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z') str[i]=155-str[i]; &#125; printf(\"After change:\"); for(i=0;str[i]!='\\0';i++) putchar(str[i]); printf(\"\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-6 统计大写辅音字母（15 分）","slug":"siti7-6","date":"2018-01-24T10:34:00.000Z","updated":"2018-04-03T02:44:49.407Z","comments":true,"path":"2018/01/24/siti7-6/","link":"","permalink":"/2018/01/24/siti7-6/","excerpt":"习题7-6 统计大写辅音字母（15 分）英文辅音字母是除A、E、I、O、U以外的字母。本题要求编写程序，统计给定字符串中大写辅音字母的个数。 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出字符串中大写辅音字母的个数。 输入样例：1HELLO World! 输出样例：14","text":"习题7-6 统计大写辅音字母（15 分）英文辅音字母是除A、E、I、O、U以外的字母。本题要求编写程序，统计给定字符串中大写辅音字母的个数。 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出字符串中大写辅音字母的个数。 输入样例：1HELLO World! 输出样例：14 12345678910111213141516171819202122//统计大写辅音字母#include&lt;stdio.h&gt;int main()&#123; int i=0; char str[80]; while((str[i]=getchar())!='\\n') i++; str[i]='\\0'; int count=0; for(i=0;str[i]!='\\0';i++) &#123; if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z'&amp;&amp;str[i]!='A'&amp;&amp;str[i]!='E'&amp;&amp;str[i]!='I'&amp;&amp;str[i]!='O'&amp;&amp;str[i]!='U') &#123; count++; &#125; &#125; printf(\"%d\",count); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-5 找鞍点（20 分）","slug":"siti7-5","date":"2018-01-24T10:32:00.000Z","updated":"2018-04-03T02:44:32.118Z","comments":true,"path":"2018/01/24/siti7-5/","link":"","permalink":"/2018/01/24/siti7-5/","excerpt":"习题7-5 找鞍点（20 分）一个矩阵元素的“鞍点”是指该位置上的元素值在该行上最大、在该列上最小。 本题要求编写程序，求一个给定的n阶方阵的鞍点。 输入格式：输入第一行给出一个正整数n（1≤n≤6）。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：输出在一行中按照“行下标 列下标”（下标从0开始）的格式输出鞍点的位置。如果鞍点不存在，则输出“NONE”。题目保证给出的矩阵至多存在一个鞍点。 输入样例1：1234541 7 4 14 8 3 61 6 1 20 7 8 9 输出样例1：12 1 输入样例2：12321 74 1 输出样例2：1NONE","text":"习题7-5 找鞍点（20 分）一个矩阵元素的“鞍点”是指该位置上的元素值在该行上最大、在该列上最小。 本题要求编写程序，求一个给定的n阶方阵的鞍点。 输入格式：输入第一行给出一个正整数n（1≤n≤6）。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：输出在一行中按照“行下标 列下标”（下标从0开始）的格式输出鞍点的位置。如果鞍点不存在，则输出“NONE”。题目保证给出的矩阵至多存在一个鞍点。 输入样例1：1234541 7 4 14 8 3 61 6 1 20 7 8 9 输出样例1：12 1 输入样例2：12321 74 1 输出样例2：1NONE 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;stdio.h&gt;int main()&#123; int a[6][6];//定义二维数组 int n; scanf(\"%d\",&amp;n); int i,j; for(i=0; i&lt;n; i++) for(j=0; j&lt;n; j++) &#123; scanf(\"%d\",&amp;a[i][j]); &#125; int k=0,y=0,flag=1,p=0; if(n==1) printf(\"0 0\");//只有一个点时，一定是鞍点 else &#123; for(i=0; i&lt;n; i++) &#123; y=i; for(p=0; p&lt;n; p++) //找行最大值 &#123; if(a[i][k]&lt;=a[i][p])//数组元素之间比较，若比a[i][k]大，则将数组列标赋给k &#123; k=p; &#125; &#125; for(j=0; j&lt;n; j++)//判断是否为列最小值 &#123; if(a[y][k]&gt;a[j][k])//若此行最大值不是列所在最小值，把小的行标赋给y &#123; y=j; break; &#125; &#125; if(i==y)//行最大且列最小，判断条件行标不改变 &#123; flag=0; break; &#125; &#125; if(flag==0) printf(\"%d %d\",i,k); else printf(\"NONE\"); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-4 求矩阵各行元素之和（15 分）","slug":"siti7-4","date":"2018-01-24T10:30:00.000Z","updated":"2018-04-03T02:44:08.698Z","comments":true,"path":"2018/01/24/siti7-4/","link":"","permalink":"/2018/01/24/siti7-4/","excerpt":"习题7-4 求矩阵各行元素之和（15 分）本题要求编写程序，求一个给定的m×n矩阵各行元素之和。 输入格式：输入第一行给出两个正整数m和n（1≤m,n≤6）。随后m行，每行给出n个整数，其间 以空格分隔。 输出格式：每行输出对应矩阵行元素之和。 输入样例：12343 26 31 -83 12 输出样例：1239-715","text":"习题7-4 求矩阵各行元素之和（15 分）本题要求编写程序，求一个给定的m×n矩阵各行元素之和。 输入格式：输入第一行给出两个正整数m和n（1≤m,n≤6）。随后m行，每行给出n个整数，其间 以空格分隔。 输出格式：每行输出对应矩阵行元素之和。 输入样例：12343 26 31 -83 12 输出样例：1239-715 123456789101112131415161718#include&lt;stdio.h&gt; main() &#123; int i,j,m,n,sum; printf(\"输入正整数m和n（1&lt;=m,n&lt;=6）:\"); scanf(\"%d%d\",&amp;m,&amp;n); int a[m][n]; printf(\"输入数:\\n\"); for(i=0;i&lt;m;i++) for(j=0;j&lt;n;j++) scanf(\"%d\",&amp;a[i][j]); for(i=0;i&lt;m;i++)&#123; sum=0; for(j=0;j&lt;n;j++)&#123; sum+=a[i][j]; &#125; printf(\"第%d行的和为：%d\\n\",i+1,sum); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-3 判断上三角矩阵（15 分）","slug":"siti7-3","date":"2018-01-24T10:28:00.000Z","updated":"2018-04-03T02:43:33.861Z","comments":true,"path":"2018/01/24/siti7-3/","link":"","permalink":"/2018/01/24/siti7-3/","excerpt":"习题7-3 判断上三角矩阵（15 分）上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。 本题要求编写程序，判断一个给定的方阵是否上三角矩阵。 输入格式：输入第一行给出一个正整数T，为待测矩阵的个数。接下来给出T个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数n。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。 输入样例：12345678231 2 30 4 50 0 621 0-8 2 输出样例：12YESNO","text":"习题7-3 判断上三角矩阵（15 分）上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。 本题要求编写程序，判断一个给定的方阵是否上三角矩阵。 输入格式：输入第一行给出一个正整数T，为待测矩阵的个数。接下来给出T个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数n。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。 输入样例：12345678231 2 30 4 50 0 621 0-8 2 输出样例：12YESNO 1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;int main()&#123; int n; scanf(\"%d\",&amp;n); while (n--) &#123; int flag=1; int i=0; int size=0; int num=0; scanf(\"%d\",&amp;size); for (i=0;i&lt;size*size;i++) &#123; scanf(\"%d\",&amp;num); if ((i/size&gt;i%size)&amp;&amp;num!=0) flag=0; &#125; printf(flag?\"Yes\\n\":\"No\\n\"); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-1 选择法排序（20 分）","slug":"siti7-1","date":"2018-01-24T10:26:00.000Z","updated":"2018-04-03T02:42:49.813Z","comments":true,"path":"2018/01/24/siti7-1/","link":"","permalink":"/2018/01/24/siti7-1/","excerpt":"习题7-1 选择法排序（20 分）本题要求将给定的n个整数从大到小排序后输出。 输入格式：输入第一行给出一个不超过10的正整数n。第二行给出n个整数，其间以空格分隔。 输出格式：在一行中输出从大到小有序的数列，相邻数字间有一个空格，行末不得有多余空格。 输入样例：1245 1 7 6 输出样例：17 6 5 1","text":"习题7-1 选择法排序（20 分）本题要求将给定的n个整数从大到小排序后输出。 输入格式：输入第一行给出一个不超过10的正整数n。第二行给出n个整数，其间以空格分隔。 输出格式：在一行中输出从大到小有序的数列，相邻数字间有一个空格，行末不得有多余空格。 输入样例：1245 1 7 6 输出样例：17 6 5 1 123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;int main(void)&#123; int i,index,k,n,temp; int a[10]; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++) scanf(\"%d\",&amp;a[i]); for(k=0;k&lt;n-1;k++) &#123; index=k; for(i=k+1;i&lt;n;i++) if(a[i]&gt;a[index])&#123; index=i; &#125; temp=a[index]; a[index]=a[k]; a[k]=temp; &#125; for(i=0;i&lt;n;i++) printf(\"%d \",a[i]); putchar('\\n'); &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题7-2 求一批整数中出现最多的个位数字（20 分）","slug":"siti7-2","date":"2018-01-24T10:26:00.000Z","updated":"2018-04-03T02:43:14.879Z","comments":true,"path":"2018/01/24/siti7-2/","link":"","permalink":"/2018/01/24/siti7-2/","excerpt":"习题7-2 求一批整数中出现最多的个位数字（20 分）给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多次数的数字是3和4，均出现了3次。 输入格式：输入在第1行中给出正整数N（≤1000），在第二行中给出N个不超过整型范围的非负整数，数字间以空格分隔。 输出格式：在一行中按格式“M: n1 n2 …”输出，其中M是最大次数，n1、n2、……为出现次数最多的个位数字，按从小到大的顺序排列。数字间以空格分隔，但末尾不得有多余空格。 输入样例：1231234 2345 3456 输出样例：13: 3 4","text":"习题7-2 求一批整数中出现最多的个位数字（20 分）给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多次数的数字是3和4，均出现了3次。 输入格式：输入在第1行中给出正整数N（≤1000），在第二行中给出N个不超过整型范围的非负整数，数字间以空格分隔。 输出格式：在一行中按格式“M: n1 n2 …”输出，其中M是最大次数，n1、n2、……为出现次数最多的个位数字，按从小到大的顺序排列。数字间以空格分隔，但末尾不得有多余空格。 输入样例：1231234 2345 3456 输出样例：13: 3 4 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;stdio.h&gt;int main()&#123; int num[1000]; //输入正整数N int n; scanf(\"%d\",&amp;n); //输入N个正整数存入数组Num int i; for(i=0;i&lt;n;i++)&#123; scanf(\"%d\",&amp;num[i]); &#125; int count[10]=&#123;0&#125;;//0-9计数 int a,temp,mask ; for(i=0;i&lt;n;i++)&#123; temp = num[i]; mask = 1; while(temp &gt; 9)&#123; temp /= 10; mask *= 10; &#125; while(mask&gt;0)&#123; a = num[i] / mask; count[a]++; num[i] %= mask; mask /= 10; &#125; &#125; int max[10],nmax=0; int numOfMax=0; //遍历count[]，找出最大值，并且存入max[] max[0] = -1; for(i=0;i&lt;10;i++)&#123; if(count[i] &gt; numOfMax)&#123; nmax = 0; numOfMax = count[i]; max[nmax] = i; &#125; else if(count[i] == numOfMax)&#123; nmax++; max[nmax] = i; &#125; &#125; //输出 printf(\"%d:\",numOfMax); for(i=0;i&lt;=nmax;i++)&#123; printf(\" %d\",max[i]); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-11 字符串逆序（15 分）","slug":"liensi7-11","date":"2018-01-24T10:24:00.000Z","updated":"2018-02-04T04:55:38.086Z","comments":true,"path":"2018/01/24/liensi7-11/","link":"","permalink":"/2018/01/24/liensi7-11/","excerpt":"练习7-11 字符串逆序（15 分）输入一个字符串，对该字符串进行逆序，输出逆序后的字符串。 输入格式：输入在一行中给出一个不超过80个字符长度的、以回车结束的非空字符串。 输出格式：在一行中输出逆序后的字符串。 输入样例：Hello World! 输出样例：!dlroW olleH","text":"练习7-11 字符串逆序（15 分）输入一个字符串，对该字符串进行逆序，输出逆序后的字符串。 输入格式：输入在一行中给出一个不超过80个字符长度的、以回车结束的非空字符串。 输出格式：在一行中输出逆序后的字符串。 输入样例：Hello World! 输出样例：!dlroW olleH 12345678910111213141516171819#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main()&#123; char str[81]; int i = 0; int c; while((c=getchar()) != '\\n')&#123;// 记录字符串 str[i] = (char) c; i++; &#125; i--; for(;i&gt;=0;i--)&#123; printf(\"%c\", str[i]); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-10 查找指定字符（15 分）","slug":"liensi7-10","date":"2018-01-24T10:22:00.000Z","updated":"2018-02-04T04:55:51.160Z","comments":true,"path":"2018/01/24/liensi7-10/","link":"","permalink":"/2018/01/24/liensi7-10/","excerpt":"练习7-10 查找指定字符（15 分）本题要求编写程序，从给定字符串中查找某指定的字符。 输入格式：输入的第一行是一个待查找的字符。第二行是一个以回车结束的非空字符串（不超过80个字符）。 输出格式：如果找到，在一行内按照格式“index = 下标”输出该字符在字符串中所对应的最大下标（下标从0开始）；否则输出”Not Found”。 输入样例1：mprogramming 输出样例1：index = 7 输入样例2：a1234输出样例2： Not Found","text":"练习7-10 查找指定字符（15 分）本题要求编写程序，从给定字符串中查找某指定的字符。 输入格式：输入的第一行是一个待查找的字符。第二行是一个以回车结束的非空字符串（不超过80个字符）。 输出格式：如果找到，在一行内按照格式“index = 下标”输出该字符在字符串中所对应的最大下标（下标从0开始）；否则输出”Not Found”。 输入样例1：mprogramming 输出样例1：index = 7 输入样例2：a1234输出样例2： Not Found 1234567891011121314#include&lt;stdio.h&gt;#include&lt;string.h&gt;char buf[80],search[80];int main()&#123; scanf(\"%s\",search); scanf(\"%s\",buf); char * pos = strstr(buf,search); if (pos==NULL) printf(\"Not Found\\n\"); else printf(\"index = %d\\n\",pos-buf+1); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-9 计算天数（15 分）","slug":"liensi7-9","date":"2018-01-24T10:20:00.000Z","updated":"2018-02-04T04:56:00.540Z","comments":true,"path":"2018/01/24/liensi7-9/","link":"","permalink":"/2018/01/24/liensi7-9/","excerpt":"练习7-9 计算天数（15 分）本题要求编写程序计算某年某月某日是该年中的第几天。 输入格式:输入在一行中按照格式“yyyy/mm/dd”（即“年/月/日”）给出日期。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。闰年的2月有29天。 输出格式:在一行输出日期是该年中的第几天。 输入样例1:2009/03/02 输出样例1:61 输入样例2:2000/03/02 输出样例2:62","text":"练习7-9 计算天数（15 分）本题要求编写程序计算某年某月某日是该年中的第几天。 输入格式:输入在一行中按照格式“yyyy/mm/dd”（即“年/月/日”）给出日期。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。闰年的2月有29天。 输出格式:在一行输出日期是该年中的第几天。 输入样例1:2009/03/02 输出样例1:61 输入样例2:2000/03/02 输出样例2:62 12345678910111213141516171819#include&lt;stdio.h&gt;int main(int argc, const char * argv[])&#123; int year,month,day,i,num=0; int m[12]=&#123;31,28,31,30,31,30,31,31,30,31,30,31&#125;; scanf(\"%d/%d/%d\",&amp;year,&amp;month,&amp;day); if(((year%4==0)&amp;&amp;(year%100!=0))||(year%400==0)) &#123; if(month&gt;2) num=1; &#125; for(i=0;i&lt;(month-1);i++) &#123; num+=m[i]; &#125; num=num+day; printf(\"%d\",num); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-8 方阵循环右移（20 分）","slug":"liensi7-8","date":"2018-01-24T10:18:00.000Z","updated":"2018-02-04T04:56:12.614Z","comments":true,"path":"2018/01/24/liensi7-8/","link":"","permalink":"/2018/01/24/liensi7-8/","excerpt":"练习7-8 方阵循环右移（20 分）本题要求编写程序，将给定n×n方阵中的每个元素循环向右移m个位置，即将第0、1、⋯、n−1列变换为第n−m、n−m+1、⋯、n−1、0、1、⋯、n−m−1列。 输入格式：输入第一行给出两个正整数m和n（1≤n≤6）。接下来一共n行，每行n个整数，表示一个n阶的方阵。 输出格式：按照输入格式输出移动后的方阵：即输出n行，每行n个整数，每个整数后输出一个空格。 输入样例：2 31 2 34 5 67 8 9 输出样例：2 3 15 6 48 9 7","text":"练习7-8 方阵循环右移（20 分）本题要求编写程序，将给定n×n方阵中的每个元素循环向右移m个位置，即将第0、1、⋯、n−1列变换为第n−m、n−m+1、⋯、n−1、0、1、⋯、n−m−1列。 输入格式：输入第一行给出两个正整数m和n（1≤n≤6）。接下来一共n行，每行n个整数，表示一个n阶的方阵。 输出格式：按照输入格式输出移动后的方阵：即输出n行，每行n个整数，每个整数后输出一个空格。 输入样例：2 31 2 34 5 67 8 9 输出样例：2 3 15 6 48 9 7 1234567891011121314151617181920#include &lt;stdio.h&gt; int main() &#123; int a[10][10]; int i,j,n,m; scanf(\"%d %d\",&amp;m,&amp;n); for(i=0;i&lt;n;i++) &#123; for(j=0;j&lt;n;j++) &#123; scanf(\"%d\",&amp;a[i][j]); m%=n; &#125; &#125; for(i=0;i&lt;n;i++) &#123; for(j=0;j&lt;n;j++) &#123; printf(\"%d \",a[i][(n-m+j)%n]); &#125; printf(\"\\n\"); &#125; return 0; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-7 矩阵运算（20 分）","slug":"liensi7-7","date":"2018-01-24T10:16:00.000Z","updated":"2018-02-04T04:56:21.070Z","comments":true,"path":"2018/01/24/liensi7-7/","link":"","permalink":"/2018/01/24/liensi7-7/","excerpt":"练习7-7 矩阵运算（20 分）给定一个n×n的方阵，本题要求计算该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。副对角线为从矩阵的右上角至左下角的连线。 输入格式:输入第一行给出正整数n（1&lt;n≤10）；随后n行，每行给出n个整数，其间以空格分隔。 输出格式:在一行中给出该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。 输入样例:42 3 4 15 6 1 17 1 8 11 1 1 1 输出样例:35","text":"练习7-7 矩阵运算（20 分）给定一个n×n的方阵，本题要求计算该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。副对角线为从矩阵的右上角至左下角的连线。 输入格式:输入第一行给出正整数n（1&lt;n≤10）；随后n行，每行给出n个整数，其间以空格分隔。 输出格式:在一行中给出该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。 输入样例:42 3 4 15 6 1 17 1 8 11 1 1 1 输出样例:35 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;int main(void)&#123; int a[6][6]; int i,j,sum,n; printf(\"Input n: \"); scanf(\"%d\",&amp;n); printf(\"Input array: \\n\"); for(i=0;i&lt;n;i++)&#123; //this for(j=0;j&lt;n;j++) //and this scanf(\"%d\",&amp;a[i][j]); &#125; sum=0; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++) &#123; if((i+j!=(n-1))&amp;&amp;(i!=(n-1))&amp;&amp;(j!=(n-1))) sum=sum+a[i][j]; &#125; printf(\"sum=%d\\n\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-4 找出不是两个数组共有的元素（20 分）","slug":"liensi7-4","date":"2018-01-24T10:14:00.000Z","updated":"2018-02-04T04:56:32.832Z","comments":true,"path":"2018/01/24/liensi7-4/","link":"","permalink":"/2018/01/24/liensi7-4/","excerpt":"练习7-4 找出不是两个数组共有的元素（20 分）给定两个整型数组，本题要求找出不是两者共有的元素。 输入格式:输入分别在两行中给出两个整型数组，每行先给出正整数N（≤20），随后是N个整数，其间以空格分隔。 输出格式:在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。题目保证至少存在一个这样的数字。同一数字不重复输出。 输入样例:10 3 -5 2 8 0 3 5 -15 9 10011 6 4 8 2 6 -5 9 0 100 8 1 输出样例:3 5 -15 6 4 1","text":"练习7-4 找出不是两个数组共有的元素（20 分）给定两个整型数组，本题要求找出不是两者共有的元素。 输入格式:输入分别在两行中给出两个整型数组，每行先给出正整数N（≤20），随后是N个整数，其间以空格分隔。 输出格式:在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。题目保证至少存在一个这样的数字。同一数字不重复输出。 输入样例:10 3 -5 2 8 0 3 5 -15 9 10011 6 4 8 2 6 -5 9 0 100 8 1 输出样例:3 5 -15 6 4 1 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include&lt;stdio.h&gt;int main(void)&#123; int n,m,a[20],b[20],c[40],i,j,d,k=0,f,e=0,flag1,flag2; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++)&#123; scanf(\"%d\",&amp;a[i]); &#125; scanf(\"%d\",&amp;m); for(j=0;j&lt;m;j++)&#123; scanf(\"%d\",&amp;b[j]); &#125; for(i=0;i&lt;n;i++) for(j=0;j&lt;m;j++)&#123; if(a[i]==b[j])&#123; c[k]=a[i];k++; &#125; &#125; if(k==0)&#123; for(i=0;i&lt;n;i++)&#123; if(e==0)&#123;printf(\"%d\",a[i]);e++;&#125; else printf(\" %d\",a[i]); &#125; for(j=0;j&lt;m;j++)&#123; if(e==0)&#123;printf(\"%d\",b[j]);e++;&#125; else printf(\" %d\",b[j]); &#125; &#125; for(i=0;i&lt;n;i++)&#123; flag1=1; for(j=0;j&lt;k;j++)&#123; if(a[i]!=c[j]) f=1; else&#123;f=0;break;&#125; &#125; if(f)&#123; for(d=0;d&lt;i;++d)&#123; if(a[d]==a[i]) &#123;flag1=0;break;&#125; &#125; if(flag1)&#123; if(e==0)&#123;printf(\"%d\",a[i]);e++;&#125; else printf(\" %d\",a[i]); &#125; &#125; &#125; for(i=0;i&lt;m;i++)&#123; for(j=0;j&lt;k;j++)&#123; flag2=1; if(b[i]!=c[j]) f=1; else&#123;f=0;break;&#125; &#125; if(f)&#123; for(d=0;d&lt;i;++d)&#123; if(b[d]==b[i])&#123;flag2=0;break;&#125; &#125; if(flag2)&#123; if(e==0)&#123;printf(\"%d\",b[i]);e++;&#125; else printf(\" %d\",b[i]); &#125; &#125; &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-3 将数组中的数逆序存放（20 分）","slug":"liensi7-3","date":"2018-01-24T10:12:00.000Z","updated":"2018-02-04T04:56:42.808Z","comments":true,"path":"2018/01/24/liensi7-3/","link":"","permalink":"/2018/01/24/liensi7-3/","excerpt":"练习7-3 将数组中的数逆序存放（20 分）本题要求编写程序，将给定的n个整数存入数组中，将数组中的这n个数逆序存放，再按顺序输出数组中的元素。 输入格式:输入在第一行中给出一个正整数n（1≤n≤10）。第二行输入n个整数，用空格分开。 输出格式:在一行中输出这n个整数的处理结果，相邻数字中间用一个空格分开，行末不得有多余空格。 输入样例:410 8 1 2 输出样例:2 1 8 10","text":"练习7-3 将数组中的数逆序存放（20 分）本题要求编写程序，将给定的n个整数存入数组中，将数组中的这n个数逆序存放，再按顺序输出数组中的元素。 输入格式:输入在第一行中给出一个正整数n（1≤n≤10）。第二行输入n个整数，用空格分开。 输出格式:在一行中输出这n个整数的处理结果，相邻数字中间用一个空格分开，行末不得有多余空格。 输入样例:410 8 1 2 输出样例:2 1 8 10 123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main(void)&#123; int i,n,temp; int ri; int a[10]; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++) scanf(\"%d\",&amp;a[i]); i=0; for(i=0;i&lt;n/2;i++) &#123; temp=a[i]; a[i]=a[n-1-i]; a[n-1-i]=temp; &#125; for(i=0;i&lt;n;i++) printf(\"%d \",a[i]); putchar('\\n'); &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习7-2 求最大值及其下标（20 分）","slug":"liensi7-2","date":"2018-01-24T10:10:00.000Z","updated":"2018-02-04T04:56:52.707Z","comments":true,"path":"2018/01/24/liensi7-2/","link":"","permalink":"/2018/01/24/liensi7-2/","excerpt":"练习7-2 求最大值及其下标（20 分）本题要求编写程序，找出给定的n个数中的最大值及其对应的最小下标（下标从0开始）。 ## 输入格式: 输入在第一行中给出一个正整数n（1&lt;n≤10）。第二行输入n个整数，用空格分开。 ## 输出格式: 在一行中输出最大值及最大值的最小下标，中间用一个空格分开。 ## 输入样例: 62 8 10 1 9 10 ## 输出样例: 10 2","text":"练习7-2 求最大值及其下标（20 分）本题要求编写程序，找出给定的n个数中的最大值及其对应的最小下标（下标从0开始）。 ## 输入格式: 输入在第一行中给出一个正整数n（1&lt;n≤10）。第二行输入n个整数，用空格分开。 ## 输出格式: 在一行中输出最大值及最大值的最小下标，中间用一个空格分开。 ## 输入样例: 62 8 10 1 9 10 ## 输出样例: 10 2 12345678910111213141516171819#include &lt;stdio.h&gt; int main( ) &#123; int i, index, n, temp; int a[10]; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) scanf(\"%d\", &amp;a[i]); index=0; a[index]=a[0]; for(i=1;i&lt;n;i++)&#123; if(a[index]&lt;a[i])&#123; a[index]=a[i]; index=i; &#125; &#125; printf(\"%d %d\\n\", a[index],index); &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-6 使用函数输出一个整数的逆序数（20 分）","slug":"siti6-6","date":"2018-01-24T10:03:00.000Z","updated":"2018-03-30T07:09:39.424Z","comments":true,"path":"2018/01/24/siti6-6/","link":"","permalink":"/2018/01/24/siti6-6/","excerpt":"习题6-6 使用函数输出一个整数的逆序数（20 分）本题要求实现一个求整数的逆序数的简单函数。 函数接口定义：1int reverse( int number ); 其中函数reverse须返回用户传入的整型number的逆序数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int reverse( int number );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", reverse(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-12340 输出样例：1-4321","text":"习题6-6 使用函数输出一个整数的逆序数（20 分）本题要求实现一个求整数的逆序数的简单函数。 函数接口定义：1int reverse( int number ); 其中函数reverse须返回用户传入的整型number的逆序数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int reverse( int number );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", reverse(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-12340 输出样例：1-4321 1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;int reverse( int number );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", reverse(n)); return 0;&#125;/* -12340 -&gt; -4321 */int reverse( int number )&#123; int i=1,a,sum=0; if(number&lt;0)&#123; number=-number; i=-1; &#125; while(number)&#123; a = number%10; sum = sum * 10 +a; number/=10; &#125; sum*=i; return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-5 使用函数验证哥德巴赫猜想（20 分）","slug":"siti6-5","date":"2018-01-24T10:02:00.000Z","updated":"2018-03-30T07:09:20.936Z","comments":true,"path":"2018/01/24/siti6-5/","link":"","permalink":"/2018/01/24/siti6-5/","excerpt":"习题6-5 使用函数验证哥德巴赫猜想（20 分）本题要求实现一个判断素数的简单函数，并利用该函数验证哥德巴赫猜想：任何一个不小于6的偶数均可表示为两个奇素数之和。素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );void Goldbach( int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数Goldbach按照格式“n=p+q”输出n的素数分解，其中p≤q均为素数。又因为这样的分解不唯一（例如24可以分解为5+19，还可以分解为7+17），要求必须输出所有解中p最小的解。 裁判测试程序样例：1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );void Goldbach( int n );int main()&#123; int m, n, i, cnt; scanf(\"%d %d\", &amp;m, &amp;n); if ( prime(m) != 0 ) printf(\"%d is a prime number\\n\", m); if ( m &lt; 6 ) m = 6; if ( m%2 ) m++; cnt = 0; for( i=m; i&lt;=n; i+=2 ) &#123; Goldbach(i); cnt++; if ( cnt%5 ) printf(\", \"); else printf(\"\\n\"); &#125; return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：189 100 输出样例：12389 is a prime number90=7+83, 92=3+89, 94=5+89, 96=7+89, 98=19+79100=3+97,","text":"习题6-5 使用函数验证哥德巴赫猜想（20 分）本题要求实现一个判断素数的简单函数，并利用该函数验证哥德巴赫猜想：任何一个不小于6的偶数均可表示为两个奇素数之和。素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );void Goldbach( int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数Goldbach按照格式“n=p+q”输出n的素数分解，其中p≤q均为素数。又因为这样的分解不唯一（例如24可以分解为5+19，还可以分解为7+17），要求必须输出所有解中p最小的解。 裁判测试程序样例：1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );void Goldbach( int n );int main()&#123; int m, n, i, cnt; scanf(\"%d %d\", &amp;m, &amp;n); if ( prime(m) != 0 ) printf(\"%d is a prime number\\n\", m); if ( m &lt; 6 ) m = 6; if ( m%2 ) m++; cnt = 0; for( i=m; i&lt;=n; i+=2 ) &#123; Goldbach(i); cnt++; if ( cnt%5 ) printf(\", \"); else printf(\"\\n\"); &#125; return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：189 100 输出样例：12389 is a prime number90=7+83, 92=3+89, 94=5+89, 96=7+89, 98=19+79100=3+97, 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );void Goldbach( int n );int main() &#123; int m, n, i, cnt; scanf(\"%d %d\", &amp;m, &amp;n); if ( prime(m) != 0 ) printf(\"%d is a prime number\\n\", m); if ( m &lt; 6 ) m = 6; if ( m%2 ) m++; cnt = 0; for( i=m; i&lt;=n; i+=2 ) &#123; Goldbach(i); cnt++; if ( cnt%5 ) printf(\", \"); else printf(\"\\n\"); &#125; return 0;&#125;int prime( int p ) &#123; int i,count=0; for(i=2; i&lt;p; i++) &#123; if(p%i==0) &#123; count++; &#125; &#125; if(count==0&amp;&amp;p!=1) &#123; return 1; &#125; else &#123; return 0; &#125;&#125;void Goldbach( int n ) &#123; int i,k; if(prime(n) == 0) &#123; for(i=2; i&lt;n; i++) &#123; if(prime(i)!=0) &#123; k=n-i; if(prime(k)!=0) &#123; printf(\"%d=%d+%d\",n,i,k); break; &#125; &#125; &#125; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-4 使用函数输出指定范围内的Fibonacci数（20 分）","slug":"siti6-4","date":"2018-01-24T09:59:00.000Z","updated":"2018-03-30T07:08:54.696Z","comments":true,"path":"2018/01/24/siti6-4/","link":"","permalink":"/2018/01/24/siti6-4/","excerpt":"习题6-4 使用函数输出指定范围内的Fibonacci数（20 分）本题要求实现一个计算Fibonacci数的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有Fibonacci数。所谓Fibonacci数列就是满足任一项数字是前两项的和（最开始两项均定义为1）的数列。 函数接口定义：12int fib( int n );void PrintFN( int m, int n ); 其中函数fib须返回第n项Fibonacci数；函数PrintFN要在一行中输出给定范围[m, n]内的所有Fibonacci数，相邻数字间有一个空格，行末不得有多余空格。如果给定区间内没有Fibonacci数，则输出一行“No Fibonacci number”。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fib( int n );void PrintFN( int m, int n ); int main()&#123; int m, n, t; scanf(\"%d %d %d\", &amp;m, &amp;n, &amp;t); printf(\"fib(%d) = %d\\n\", t, fib(t)); PrintFN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：120 100 7 输出样例1：12fib(7) = 1321 34 55 89 输入样例2：12000 2500 8 输出样例2：12fib(8) = 21No Fibonacci number","text":"习题6-4 使用函数输出指定范围内的Fibonacci数（20 分）本题要求实现一个计算Fibonacci数的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有Fibonacci数。所谓Fibonacci数列就是满足任一项数字是前两项的和（最开始两项均定义为1）的数列。 函数接口定义：12int fib( int n );void PrintFN( int m, int n ); 其中函数fib须返回第n项Fibonacci数；函数PrintFN要在一行中输出给定范围[m, n]内的所有Fibonacci数，相邻数字间有一个空格，行末不得有多余空格。如果给定区间内没有Fibonacci数，则输出一行“No Fibonacci number”。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fib( int n );void PrintFN( int m, int n ); int main()&#123; int m, n, t; scanf(\"%d %d %d\", &amp;m, &amp;n, &amp;t); printf(\"fib(%d) = %d\\n\", t, fib(t)); PrintFN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：120 100 7 输出样例1：12fib(7) = 1321 34 55 89 输入样例2：12000 2500 8 输出样例2：12fib(8) = 21No Fibonacci number 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;int fib( int n );void PrintFN( int m, int n );int main()&#123; int m, n, t; scanf(\"%d %d %d\", &amp;m, &amp;n, &amp;t); printf(\"fib(%d) = %d\\n\", t, fib(t)); PrintFN(m, n); return 0;&#125;int fib( int n )&#123;if(n==1||n==2)&#123;return 1;&#125;if(n&gt;2)&#123;return fib(n-1)+fib(n-2);&#125;&#125;void PrintFN( int m, int n )&#123;int i=0,j,k=1,count=0;for(j=0;j&lt;=21;j++)&#123; i++; if(fib(i)&gt;=m&amp;&amp;fib(i)&lt;=n)&#123; count++; printf(\"%d \",fib(i));&#125; &#125;if(count==0)&#123; printf(\"No Fibonacci number\");&#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-3 使用函数输出指定范围内的完数（20 分）","slug":"siti6-3","date":"2018-01-24T09:56:00.000Z","updated":"2018-03-30T07:08:30.630Z","comments":true,"path":"2018/01/24/siti6-3/","link":"","permalink":"/2018/01/24/siti6-3/","excerpt":"习题6-3 使用函数输出指定范围内的完数（20 分）本题要求实现一个计算整数因子和的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有完数。所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。 函数接口定义：12int factorsum( int number );void PrintPN( int m, int n ); 其中函数factorsum须返回int number的因子和；函数PrintPN要逐行输出给定范围[m, n]内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。如果给定区间内没有完数，则输出一行“No perfect number”。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int factorsum( int number );void PrintPN( int m, int n ); int main()&#123; int i, m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m); if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n); PrintPN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：11 30 输出样例1：12341 is a perfect number1 = 16 = 1 + 2 + 328 = 1 + 2 + 4 + 7 + 14 输入样例2：17 25 输出样例2：1No perfect number","text":"习题6-3 使用函数输出指定范围内的完数（20 分）本题要求实现一个计算整数因子和的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有完数。所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。 函数接口定义：12int factorsum( int number );void PrintPN( int m, int n ); 其中函数factorsum须返回int number的因子和；函数PrintPN要逐行输出给定范围[m, n]内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。如果给定区间内没有完数，则输出一行“No perfect number”。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int factorsum( int number );void PrintPN( int m, int n ); int main()&#123; int i, m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m); if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n); PrintPN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：11 30 输出样例1：12341 is a perfect number1 = 16 = 1 + 2 + 328 = 1 + 2 + 4 + 7 + 14 输入样例2：17 25 输出样例2：1No perfect number 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#include &lt;stdio.h&gt;#define N 100int factorsum( int number );void PrintPN( int m, int n ); int main()&#123; int i, m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m); if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n); PrintPN(m, n); return 0;&#125;int factorsum( int number )&#123; int a[N],i,j=0,n=0,sum=0; if(number == 1) return 1; for(i=1;i&lt;number;i++) if(number%i==0)&#123; a[j++]=i; &#125; for(i=0;i&lt;j;i++) sum+=a[i]; if(sum == number) return 1; return 0; &#125; void PrintPN( int m, int n )&#123; int i,j,k=0,l,a[N]; if(m==1)&#123; printf(\"%d = %d\\n\",m , m); m+=1; &#125; for(i=m;i&lt;=n;i++)&#123; if(factorsum(i)==1)&#123; for(j=1;j&lt;i;j++)&#123; if(i%j==0)&#123; a[k++]=j; &#125; &#125; printf(\"%d = \", i); for(l=0;l&lt;k-1;l++) printf(\"%d + \", a[l]); printf(\"%d\\n\", a[l]); k=0; &#125; &#125; &#125; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-2 使用函数求特殊a串数列和（20 分）","slug":"siti6-2","date":"2018-01-24T07:59:00.000Z","updated":"2018-03-30T07:08:04.343Z","comments":true,"path":"2018/01/24/siti6-2/","link":"","permalink":"/2018/01/24/siti6-2/","excerpt":"习题6-2 使用函数求特殊a串数列和（20 分）给定两个均不超过9的正整数a和n，要求编写函数求a+aa+aaa++⋯+aa⋯a（n个a）之和。 函数接口定义：12int fn( int a, int n );int SumA( int a, int n ); 其中函数fn须返回的是n个a组成的数字；SumA返回要求的和。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fn( int a, int n );int SumA( int a, int n ); int main()&#123; int a, n; scanf(\"%d %d\", &amp;a, &amp;n); printf(\"fn(%d, %d) = %d\\n\", a, n, fn(a,n)); printf(\"s = %d\\n\", SumA(a,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：12fn(2, 3) = 222s = 246","text":"习题6-2 使用函数求特殊a串数列和（20 分）给定两个均不超过9的正整数a和n，要求编写函数求a+aa+aaa++⋯+aa⋯a（n个a）之和。 函数接口定义：12int fn( int a, int n );int SumA( int a, int n ); 其中函数fn须返回的是n个a组成的数字；SumA返回要求的和。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fn( int a, int n );int SumA( int a, int n ); int main()&#123; int a, n; scanf(\"%d %d\", &amp;a, &amp;n); printf(\"fn(%d, %d) = %d\\n\", a, n, fn(a,n)); printf(\"s = %d\\n\", SumA(a,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：12fn(2, 3) = 222s = 246 123456789101112131415161718192021222324252627282930313233343536#include &lt;stdio.h&gt;#include&lt;math.h&gt;int fn( int a, int n );int SumA( int a, int n );int main()&#123; int a, n; scanf(\"%d %d\", &amp;a, &amp;n); printf(\"fn(%d, %d) = %d\\n\", a, n, fn(a,n)); printf(\"s = %d\\n\", SumA(a,n)); return 0;&#125;int fn( int a, int n )&#123;int sum=0,i,b=1;for(i=0;i&lt;n;i++)&#123;//b=b*10;sum=sum+a*b;b=b*10;&#125;return sum;&#125;int SumA( int a, int n )&#123;int sum1=0,sum2,i;for(i=1;i&lt;n+1;i++)&#123;sum2=fn(a,i);sum1=sum1+sum2;&#125;return sum1;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-1 分类统计字符个数（15 分）","slug":"siti6-1","date":"2018-01-24T07:57:00.000Z","updated":"2018-03-30T07:07:46.199Z","comments":true,"path":"2018/01/24/siti6-1/","link":"","permalink":"/2018/01/24/siti6-1/","excerpt":"习题6-1 分类统计字符个数（15 分）本题要求实现一个函数，统计给定字符串中英文字母、空格或回车、数字字符和其他字符的个数。 函数接口定义：1void StringCount( char s[] ); 其中 char s[] 是用户传入的字符串。函数StringCount须在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char s[] );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ &amp;09 Az 输出样例：1letter = 4, blank = 3, digit = 2, other = 1","text":"习题6-1 分类统计字符个数（15 分）本题要求实现一个函数，统计给定字符串中英文字母、空格或回车、数字字符和其他字符的个数。 函数接口定义：1void StringCount( char s[] ); 其中 char s[] 是用户传入的字符串。函数StringCount须在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char s[] );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ &amp;09 Az 输出样例：1letter = 4, blank = 3, digit = 2, other = 1 123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char s[] );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;void StringCount(char s[])&#123; int letter=0,blank=0,digit=0,other=0; int i; for(i=0;s[i]!='\\0';i++)&#123; if(s[i]&gt;='A'&amp;&amp;s[i]&lt;='Z'||s[i]&gt;='a'&amp;&amp;s[i]&lt;='z')&#123; letter++; &#125;else if(s[i]==' '||s[i]=='\\n')&#123; blank++; &#125;else if(s[i]&gt;='0'&amp;&amp;s[i]&lt;='9')&#123; digit++; &#125;else other++; &#125; printf(\"letter = %d,blank = %d,digit = %d, other = %d\\n\",letter,blank,digit,other);&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-7 使用函数求余弦函数的近似值（15 分）","slug":"siti5-7","date":"2018-01-24T07:55:00.000Z","updated":"2018-03-30T07:07:27.303Z","comments":true,"path":"2018/01/24/siti5-7/","link":"","permalink":"/2018/01/24/siti5-7/","excerpt":"习题5-7 使用函数求余弦函数的近似值（15 分）本题要求实现一个函数，用下列公式求cos(x)的近似值，精确到最后一项的绝对值小于e： cos(x)=x0/0!−x2/2!+x4/4!−x6/6!+⋯ 函数接口定义：1double funcos( double e, double x ); 其中用户传入的参数为误差上限e和自变量x；函数funcos应返回用给定公式计算出来、并且满足误差要求的cos(x)的近似值。输入输出均在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double funcos( double e, double x );int main()&#123; double e, x; scanf(\"%lf %lf\", &amp;e, &amp;x); printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.01 -3.14 输出样例：1cos(-3.14) = -0.999899","text":"习题5-7 使用函数求余弦函数的近似值（15 分）本题要求实现一个函数，用下列公式求cos(x)的近似值，精确到最后一项的绝对值小于e： cos(x)=x0/0!−x2/2!+x4/4!−x6/6!+⋯ 函数接口定义：1double funcos( double e, double x ); 其中用户传入的参数为误差上限e和自变量x；函数funcos应返回用给定公式计算出来、并且满足误差要求的cos(x)的近似值。输入输出均在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double funcos( double e, double x );int main()&#123; double e, x; scanf(\"%lf %lf\", &amp;e, &amp;x); printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.01 -3.14 输出样例：1cos(-3.14) = -0.999899 1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#include &lt;math.h&gt;double funcos( double e, double x );int main()&#123; double e, x; scanf(\"%lf %lf\", &amp;e, &amp;x); printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x)); return 0;&#125;double funcos( double e, double x )&#123; double i=0,m=0,k=1,n=1; double sum=0,d; do&#123; d=pow(x,i)/n; sum=sum+k*d; k=-k; i+=2; m=m+2; n=n*m*(m-1); &#125; while(fabs(d)&gt;e); return sum; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-6 使用函数输出水仙花数（20 分）","slug":"siti5-6","date":"2018-01-24T07:53:00.000Z","updated":"2018-03-30T07:07:04.567Z","comments":true,"path":"2018/01/24/siti5-6/","link":"","permalink":"/2018/01/24/siti5-6/","excerpt":"习题5-6 使用函数输出水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写两个函数，一个判断给定整数是否水仙花数，另一个按从小到大的顺序打印出给定区间(m,n)内所有的水仙花数。 函数接口定义：12int narcissistic( int number );void PrintN( int m, int n ); 函数narcissistic判断number是否为水仙花数，是则返回1，否则返回0。 函数PrintN则打印开区间(m, n)内所有的水仙花数，每个数字占一行。题目保证100≤m≤n≤10000。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int narcissistic( int number );void PrintN( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( narcissistic(m) ) printf(\"%d is a narcissistic number\\n\", m); PrintN(m, n); if ( narcissistic(n) ) printf(\"%d is a narcissistic number\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1153 400 输出样例：123153 is a narcissistic number370371","text":"习题5-6 使用函数输出水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写两个函数，一个判断给定整数是否水仙花数，另一个按从小到大的顺序打印出给定区间(m,n)内所有的水仙花数。 函数接口定义：12int narcissistic( int number );void PrintN( int m, int n ); 函数narcissistic判断number是否为水仙花数，是则返回1，否则返回0。 函数PrintN则打印开区间(m, n)内所有的水仙花数，每个数字占一行。题目保证100≤m≤n≤10000。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int narcissistic( int number );void PrintN( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( narcissistic(m) ) printf(\"%d is a narcissistic number\\n\", m); PrintN(m, n); if ( narcissistic(n) ) printf(\"%d is a narcissistic number\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1153 400 输出样例：123153 is a narcissistic number370371 12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;stdio.h&gt;#include&lt;math.h&gt;int narcissistic( int number );void PrintN( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( narcissistic(m) ) printf(\"%d is a narcissistic number\\n\", m); PrintN(m, n); if ( narcissistic(n) ) printf(\"%d is a narcissistic number\\n\", n); return 0;&#125;int narcissistic( int number ) &#123; int i=0,k,sum=0,s; int a[999]; s=number; do &#123; i++; a[i]=number%10; number=number/10; &#125; while(number!=0); k=i; do &#123; sum=sum+pow(a[i],k); i--; &#125; while(i&gt;0); if(sum==s) return 1; else return 0; &#125; void PrintN( int m, int n ) &#123; int i,k,z; for(i=m+1;i&lt;n;i++) if(narcissistic(i)==1) printf(\"%d\\n\",i); &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-5 使用函数统计指定数字的个数（15 分）","slug":"siti5-5","date":"2018-01-24T07:51:00.000Z","updated":"2018-03-30T07:06:36.031Z","comments":true,"path":"2018/01/24/siti5-5/","link":"","permalink":"/2018/01/24/siti5-5/","excerpt":"习题5-5 使用函数统计指定数字的个数（15 分）本题要求实现一个统计整数中指定数字的个数的简单函数。 函数接口定义：1int CountDigit( int number, int digit ); 其中number是不超过长整型的整数，digit为[0, 9]区间内的整数。函数CountDigit应返回number中digit出现的次数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int CountDigit( int number, int digit );int main()&#123; int number, digit; scanf(\"%d %d\", &amp;number, &amp;digit); printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-21252 2 输出样例：1Number of digit 2 in -21252: 3","text":"习题5-5 使用函数统计指定数字的个数（15 分）本题要求实现一个统计整数中指定数字的个数的简单函数。 函数接口定义：1int CountDigit( int number, int digit ); 其中number是不超过长整型的整数，digit为[0, 9]区间内的整数。函数CountDigit应返回number中digit出现的次数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int CountDigit( int number, int digit );int main()&#123; int number, digit; scanf(\"%d %d\", &amp;number, &amp;digit); printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-21252 2 输出样例：1Number of digit 2 in -21252: 3 123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;int CountDigit( int number, int digit );int main()&#123; int number, digit; scanf(\"%d %d\", &amp;number, &amp;digit); printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit)); return 0;&#125;int CountDigit( int number, int digit ) &#123; int z, i= 0; if (number &lt; 0) number = -number; if (number == 0 &amp;&amp; digit == 0) i ++; else do&#123; z = number % 10; number=number/10; if (z==digit)&#123; i ++; &#125; &#125; while(number!=0); return i; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-4 使用函数求素数和（20 分）","slug":"siti5-4","date":"2018-01-24T07:49:00.000Z","updated":"2018-03-30T07:05:41.205Z","comments":true,"path":"2018/01/24/siti5-4/","link":"","permalink":"/2018/01/24/siti5-4/","excerpt":"习题5-4 使用函数求素数和（20 分）本题要求实现一个判断素数的简单函数、以及利用该函数计算给定区间内素数和的函数。 素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );int PrimeSum( int m, int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数PrimeSum返回区间[m, n]内所有素数的和。题目保证用户传入的参数m≤n。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );int PrimeSum( int m, int n );int main()&#123; int m, n, p; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"Sum of ( \"); for( p=m; p&lt;=n; p++ ) &#123; if( prime(p) != 0 ) printf(\"%d \", p); &#125; printf(\") = %d\\n\", PrimeSum(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-1 10 输出样例：1Sum of ( 2 3 5 7 ) = 17","text":"习题5-4 使用函数求素数和（20 分）本题要求实现一个判断素数的简单函数、以及利用该函数计算给定区间内素数和的函数。 素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );int PrimeSum( int m, int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数PrimeSum返回区间[m, n]内所有素数的和。题目保证用户传入的参数m≤n。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );int PrimeSum( int m, int n );int main()&#123; int m, n, p; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"Sum of ( \"); for( p=m; p&lt;=n; p++ ) &#123; if( prime(p) != 0 ) printf(\"%d \", p); &#125; printf(\") = %d\\n\", PrimeSum(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-1 10 输出样例：1Sum of ( 2 3 5 7 ) = 17 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );int PrimeSum( int m, int n );int main()&#123; int m, n, p; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"Sum of ( \"); for( p=m; p&lt;=n; p++ ) &#123; if( prime(p) != 0 ) printf(\"%d \", p); &#125; printf(\") = %d\\n\", PrimeSum(m, n)); return 0;&#125;int prime( int p ) &#123; int i; int k; if(p&gt;=2) &#123; k=sqrt(p); for(i=2;i&lt;=k;i++) &#123; if(p%i==0) break;&#125; if(i&gt;k) return 1; else return 0; &#125;else return 0; &#125; int PrimeSum( int m, int n ) &#123; int i,z,sum=0; int k; for(z=m;z&lt;=n;z++) if(prime(z)==1) sum=sum+z; return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-3 使用函数计算两点间的距离（10 分）","slug":"siti5-3","date":"2018-01-24T07:47:00.000Z","updated":"2018-03-30T07:05:10.597Z","comments":true,"path":"2018/01/24/siti5-3/","link":"","permalink":"/2018/01/24/siti5-3/","excerpt":"习题5-3 使用函数计算两点间的距离（10 分）本题要求实现一个函数，对给定平面任意两点坐标(x1,y1)和(x2,y2)，求这两点之间的距离。 函数接口定义：1double dist( double x1, double y1, double x2, double y2 ); 其中用户传入的参数为平面上两个点的坐标(x1, y1)和(x2, y2)，函数dist应返回两点间的距离。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double dist( double x1, double y1, double x2, double y2 );int main()&#123; double x1, y1, x2, y2; scanf(\"%lf %lf %lf %lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2); printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 10 200 100 输出样例：1dist = 210.24","text":"习题5-3 使用函数计算两点间的距离（10 分）本题要求实现一个函数，对给定平面任意两点坐标(x1,y1)和(x2,y2)，求这两点之间的距离。 函数接口定义：1double dist( double x1, double y1, double x2, double y2 ); 其中用户传入的参数为平面上两个点的坐标(x1, y1)和(x2, y2)，函数dist应返回两点间的距离。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double dist( double x1, double y1, double x2, double y2 );int main()&#123; double x1, y1, x2, y2; scanf(\"%lf %lf %lf %lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2); printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 10 200 100 输出样例：1dist = 210.24 1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;math.h&gt;double dist( double x1, double y1, double x2, double y2 );int main()&#123; double x1, y1, x2, y2; scanf(\"%lf %lf %lf %lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2); printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2)); return 0;&#125;double dist( double x1, double y1, double x2, double y2 )&#123; double f; f=sqrt(pow(x2-x1,2)+pow(y2-y1,2)); return f; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-2 使用函数求奇数和（15 分）","slug":"siti5-2","date":"2018-01-24T07:44:00.000Z","updated":"2018-03-30T07:04:38.981Z","comments":true,"path":"2018/01/24/siti5-2/","link":"","permalink":"/2018/01/24/siti5-2/","excerpt":"习题5-2 使用函数求奇数和（15 分）本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。 函数接口定义：12int even( int n );int OddSum( int List[], int N ); 其中函数even将根据用户传入的参数n的奇偶性返回相应值：当n为偶数时返回1，否则返回0。函数OddSum负责计算并返回传入的N个整数List[]中所有奇数的和。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int even( int n );int OddSum( int List[], int N );int main()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); printf(\"Sum of ( \"); for ( i=0; i&lt;N; i++ ) &#123; scanf(\"%d\", &amp;List[i]); if ( even(List[i])==0 ) printf(\"%d \", List[i]); &#125; printf(\") = %d\\n\", OddSum(List, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1262 -3 7 88 0 15 输出样例：1Sum of ( -3 7 15 ) = 19","text":"习题5-2 使用函数求奇数和（15 分）本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。 函数接口定义：12int even( int n );int OddSum( int List[], int N ); 其中函数even将根据用户传入的参数n的奇偶性返回相应值：当n为偶数时返回1，否则返回0。函数OddSum负责计算并返回传入的N个整数List[]中所有奇数的和。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int even( int n );int OddSum( int List[], int N );int main()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); printf(\"Sum of ( \"); for ( i=0; i&lt;N; i++ ) &#123; scanf(\"%d\", &amp;List[i]); if ( even(List[i])==0 ) printf(\"%d \", List[i]); &#125; printf(\") = %d\\n\", OddSum(List, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1262 -3 7 88 0 15 输出样例：1Sum of ( -3 7 15 ) = 19 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#define MAXN 10int even( int n );int OddSum( int List[], int N );int main()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); printf(\"Sum of ( \"); for ( i=0; i&lt;N; i++ ) &#123; scanf(\"%d\", &amp;List[i]); if ( even(List[i])==0 ) printf(\"%d \", List[i]); &#125; printf(\") = %d\\n\", OddSum(List, N)); return 0;&#125;int even( int n ) &#123; if(n%2==0) &#123; return 1; &#125;else &#123; return 0; &#125; &#125; int OddSum( int List[], int N ) &#123; int i,sum=0; for(i=0;i&lt;N;i++) &#123; if(List[i]%2!=0) &#123; sum=sum+List[i]; &#125; &#125; return sum; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题5-1 符号函数（10 分）","slug":"siti5-1","date":"2018-01-24T07:42:00.000Z","updated":"2018-03-30T07:04:10.962Z","comments":true,"path":"2018/01/24/siti5-1/","link":"","permalink":"/2018/01/24/siti5-1/","excerpt":"习题5-1 符号函数（10 分）本题要求实现符号函数sign(x)。 函数接口定义：1int sign( int x ); 其中x是用户传入的整型参数。符号函数的定义为：若x大于0，sign(x) = 1；若x等于0，sign(x) = 0；否则，sign(x) = −1。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sign( int x );int main()&#123; int x; scanf(\"%d\", &amp;x); printf(\"sign(%d) = %d\\n\", x, sign(x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：1sign(10) = 1","text":"习题5-1 符号函数（10 分）本题要求实现符号函数sign(x)。 函数接口定义：1int sign( int x ); 其中x是用户传入的整型参数。符号函数的定义为：若x大于0，sign(x) = 1；若x等于0，sign(x) = 0；否则，sign(x) = −1。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sign( int x );int main()&#123; int x; scanf(\"%d\", &amp;x); printf(\"sign(%d) = %d\\n\", x, sign(x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：1sign(10) = 1 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int sign( int x );int main()&#123; int x; scanf(\"%d\", &amp;x); printf(\"sign(%d) = %d\\n\", x, sign(x)); return 0;&#125;int sign( int x )&#123; int f; if(x&gt;0)&#123; f=1; &#125; else if(x==0)&#123; f=0; &#125;else f=-1; return f; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习5-3 数字金字塔（15 分）","slug":"liensi5-3","date":"2018-01-24T07:37:00.000Z","updated":"2018-03-28T01:41:04.735Z","comments":true,"path":"2018/01/24/liensi5-3/","link":"","permalink":"/2018/01/24/liensi5-3/","excerpt":"练习5-3 数字金字塔（15 分）本题要求实现函数输出n行数字金字塔。 函数接口定义：1void pyramid( int n ); 其中n是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出n行数字金字塔。注 意每个数字后面跟一个空格。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void pyramid( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); pyramid(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：15 输出样例：12345 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5","text":"练习5-3 数字金字塔（15 分）本题要求实现函数输出n行数字金字塔。 函数接口定义：1void pyramid( int n ); 其中n是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出n行数字金字塔。注 意每个数字后面跟一个空格。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void pyramid( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); pyramid(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：15 输出样例：12345 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;void pyramid( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); pyramid(n); return 0;&#125;void pyramid(int n)&#123; int i, j; for (i=1; i&lt;=n; i++) &#123; for (j=1; j&lt;=n-i; j++) printf(\" \"); for (j=1; j&lt;=i; j++) printf(\"%d \", i); putchar('\\n'); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习5-2 找两个数中最大者（10 分）","slug":"liensi5-2","date":"2018-01-24T07:33:00.000Z","updated":"2018-03-28T01:40:36.261Z","comments":true,"path":"2018/01/24/liensi5-2/","link":"","permalink":"/2018/01/24/liensi5-2/","excerpt":"练习5-2 找两个数中最大者（10 分）本题要求对两个整数a和b，输出其中较大的数。 函数接口定义：1int max( int a, int b ); 其中a和b是用户传入的参数，函数返回的是两者中较大的数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int max( int a, int b );int main()&#123; int a, b; scanf(\"%d %d\", &amp;a, &amp;b); printf(\"max = %d\\n\", max(a, b)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-5 8 输出样例：1max = 8","text":"练习5-2 找两个数中最大者（10 分）本题要求对两个整数a和b，输出其中较大的数。 函数接口定义：1int max( int a, int b ); 其中a和b是用户传入的参数，函数返回的是两者中较大的数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int max( int a, int b );int main()&#123; int a, b; scanf(\"%d %d\", &amp;a, &amp;b); printf(\"max = %d\\n\", max(a, b)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-5 8 输出样例：1max = 8 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int max( int a, int b );int main()&#123; int a, b; scanf(\"%d %d\", &amp;a, &amp;b); printf(\"max = %d\\n\", max(a, b)); return 0;&#125;int max(int a, int b)&#123; int result; if (a &gt;= b) result = a; else result = b; return result;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习5-1 求m到n之和（10 分）","slug":"liensi5-1","date":"2018-01-24T07:27:00.000Z","updated":"2018-03-28T01:40:13.790Z","comments":true,"path":"2018/01/24/liensi5-1/","link":"","permalink":"/2018/01/24/liensi5-1/","excerpt":"练习5-1 求m到n之和（10 分）本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。 函数接口定义：1int sum( int m, int n ); 其中m和n是用户传入的参数，保证有m&lt;n。函数返回的是m~n之间所有整数的和。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sum(int m, int n);int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"sum = %d\\n\", sum(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-5 8 输出样例：1sum = 21","text":"练习5-1 求m到n之和（10 分）本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。 函数接口定义：1int sum( int m, int n ); 其中m和n是用户传入的参数，保证有m&lt;n。函数返回的是m~n之间所有整数的和。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sum(int m, int n);int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"sum = %d\\n\", sum(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-5 8 输出样例：1sum = 21 123456789101112131415161718192021#include &lt;stdio.h&gt;int sum(int m, int n);int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"sum = %d\\n\", sum(m, n)); return 0;&#125;int sum(int m, int n)&#123; int sum=0,i; for(i=m;i&lt;=n;i++)&#123; sum+=i; &#125; return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-11 兔子繁衍问题（15 分）","slug":"siti4-11","date":"2018-01-22T10:12:00.000Z","updated":"2018-03-28T01:47:06.422Z","comments":true,"path":"2018/01/22/siti4-11/","link":"","permalink":"/2018/01/22/siti4-11/","excerpt":"习题4-11 兔子繁衍问题（15 分）一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到N对？ 输入格式:输入在一行中给出一个不超过10000的正整数N。 输出格式:在一行中输出兔子总数达到N最少需要的月数。 输入样例:130 输出样例:19","text":"习题4-11 兔子繁衍问题（15 分）一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到N对？ 输入格式:输入在一行中给出一个不超过10000的正整数N。 输出格式:在一行中输出兔子总数达到N最少需要的月数。 输入样例:130 输出样例:19 123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main(void)&#123; int N; int month=1; int sum=1; int now=0,pre=0; scanf(\"%d\",&amp;N); if(N==sum)&#123; printf(\"%d\\n\",month); &#125;else&#123; month++; now=pre+sum; while(now&lt;N)&#123; month++; pre=sum; sum=now; now=pre+sum; &#125; printf(\"%d\\n\",month); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-10 猴子吃桃问题（15 分）","slug":"siti4-10","date":"2018-01-22T10:07:00.000Z","updated":"2018-03-28T01:46:45.070Z","comments":true,"path":"2018/01/22/siti4-10/","link":"","permalink":"/2018/01/22/siti4-10/","excerpt":"习题4-10 猴子吃桃问题（15 分）一只猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半加一个。到第N天早上想再吃时，见只剩下一个桃子了。问：第一天共摘了多少个桃子？ 输入格式:输入在一行中给出正整数N（1&lt;N≤10）。 输出格式:在一行中输出第一天共摘了多少个桃子。 输入样例:13 输出样例:110","text":"习题4-10 猴子吃桃问题（15 分）一只猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半加一个。到第N天早上想再吃时，见只剩下一个桃子了。问：第一天共摘了多少个桃子？ 输入格式:输入在一行中给出正整数N（1&lt;N≤10）。 输出格式:在一行中输出第一天共摘了多少个桃子。 输入样例:13 输出样例:110 123456789101112131415161718#include &lt;stdio.h&gt; int main()&#123; int n, sum=1; scanf(\"%d\", &amp;n); while(n&gt;1)&#123;//共吃了n-1天，还有一天没吃 // printf(\"第 %d 天， 还剩 %d 桃\\n\", n, sum); sum = (sum+1)*2; n--; &#125; printf(\"%d\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-9 打印菱形图案（15 分）","slug":"siti4-9","date":"2018-01-22T09:58:00.000Z","updated":"2018-03-28T01:46:25.756Z","comments":true,"path":"2018/01/22/siti4-9/","link":"","permalink":"/2018/01/22/siti4-9/","excerpt":"习题4-9 打印菱形图案（15 分）本题要求编写程序，打印一个高度为n的、由“*”组成的正菱形图案。 输入格式:输入在一行中给出一个正的奇数n。 输出格式:输出由n行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。 输入样例:17 输出样例:1234567 * * * * * * * * * * * * * * * * * * * * * * * * *","text":"习题4-9 打印菱形图案（15 分）本题要求编写程序，打印一个高度为n的、由“*”组成的正菱形图案。 输入格式:输入在一行中给出一个正的奇数n。 输出格式:输出由n行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。 输入样例:17 输出样例:1234567 * * * * * * * * * * * * * * * * * * * * * * * * * 12345678910111213141516171819202122232425262728293031#include &lt;stdio.h&gt; int main()&#123; int i,j,k,l,n,m; printf(\"输入奇数：\\n\"); scanf(\"%d\", &amp;n); for(k=0,m=1,j=n;k&lt;=n/2;k++,j-=2,m+=2)&#123; for(i=j;i&gt;0;i--) printf(\" \"); for(l=m;l&gt;0;l--) printf(\"* \"); printf(\"\\n\"); &#125; for(k=n/2+1,j=3,m=n-2;k&lt;n;k++,j+=2,m-=2)&#123; for(i=j;i&gt;0;i--) printf(\" \"); for(l=m;l&gt;0;l--) printf(\"* \"); printf(\"\\n\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-8 高空坠球（20 分）","slug":"siti4-8","date":"2018-01-22T09:57:00.000Z","updated":"2018-03-28T01:45:47.125Z","comments":true,"path":"2018/01/22/siti4-8/","link":"","permalink":"/2018/01/22/siti4-8/","excerpt":"习题4-8 高空坠球（20 分）皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第n次落地时，在空中一共经过多少距离？第n次反弹的高度是多少？ 输入格式:输入在一行中给出两个非负整数，分别是皮球的初始高度和n，均在长整型范围内。 输出格式:在一行中顺序输出皮球第n次落地时在空中经过的距离、以及第n次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。 输入样例:133 5 输出样例:194.9 1.0","text":"习题4-8 高空坠球（20 分）皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第n次落地时，在空中一共经过多少距离？第n次反弹的高度是多少？ 输入格式:输入在一行中给出两个非负整数，分别是皮球的初始高度和n，均在长整型范围内。 输出格式:在一行中顺序输出皮球第n次落地时在空中经过的距离、以及第n次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。 输入样例:133 5 输出样例:194.9 1.0 12345678910111213141516171819#include&lt;stdio.h&gt; int main() &#123; int m,n,i; double x,y,z; scanf(\"%d%d\",&amp;m,&amp;n); y=0,z=m;i=1; while(i&lt;=n)&#123; x=0.5*z; y=y+x+z; z=x; i++; &#125; y=y-z; if(n==0) printf(\"0.0 0.0\"); else printf(\"%.1f %.1f\",y,z); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-7 最大公约数和最小公倍数（15 分）","slug":"siti4-7","date":"2018-01-22T09:56:00.000Z","updated":"2018-03-28T01:45:28.479Z","comments":true,"path":"2018/01/22/siti4-7/","link":"","permalink":"/2018/01/22/siti4-7/","excerpt":"习题4-7 最大公约数和最小公倍数（15 分）本题要求两个给定正整数的最大公约数和最小公倍数。 输入格式:输入在一行中给出两个正整数M和N（≤1000）。 输出格式:在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。 输入样例:1511 292 输出样例:173 2044","text":"习题4-7 最大公约数和最小公倍数（15 分）本题要求两个给定正整数的最大公约数和最小公倍数。 输入格式:输入在一行中给出两个正整数M和N（≤1000）。 输出格式:在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。 输入样例:1511 292 输出样例:173 2044 12345678910111213#include &lt;stdio.h&gt;#include&lt;math.h&gt; int main() &#123; int m,n,gb,gy; scanf(\"%d%d\",&amp;m,&amp;n); gb=m; while(gb%n!=0)&#123; gb=gb+m; &#125; gy=(m*n)/gb; printf(\"%d %d\",gy,gb); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-6 水仙花数（20 分）","slug":"siti4-6","date":"2018-01-22T09:54:00.000Z","updated":"2018-03-28T01:44:47.277Z","comments":true,"path":"2018/01/22/siti4-6/","link":"","permalink":"/2018/01/22/siti4-6/","excerpt":"习题4-6 水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有N位水仙花数。 输入格式:输入在一行中给出一个正整数N（3≤N≤7）。 输出格式:按递增顺序输出所有N位水仙花数，每个数字占一行。 输入样例:13 输出样例:1234153370371407","text":"习题4-6 水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有N位水仙花数。 输入格式:输入在一行中给出一个正整数N（3≤N≤7）。 输出格式:按递增顺序输出所有N位水仙花数，每个数字占一行。 输入样例:13 输出样例:1234153370371407 1234567891011121314151617181920212223242526#include&lt;stdio.h&gt; #include&lt;math.h&gt;int main(void) &#123; int n, a, i, m, k, j; scanf(\"%d\", &amp;n); if(n==7)&#123; printf(\"1741725\\n\"); printf(\"4210818\\n\"); printf(\"9800817\\n\"); printf(\"9926315\\n\"); &#125;else&#123; for(i=pow(10,n-1); i&lt;pow(10,n);i++)&#123; m=i; a=0; for(k=1;k&lt;=n;k++)&#123; j=m%10; m=m/10; a=a+pow(j,n); &#125; if(a==i)&#123; printf(\"%d\\n\", a); &#125; &#125; &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-5 换硬币（20 分）","slug":"siti4-5","date":"2018-01-22T09:54:00.000Z","updated":"2018-03-28T01:44:29.180Z","comments":true,"path":"2018/01/22/siti4-5/","link":"","permalink":"/2018/01/22/siti4-5/","excerpt":"习题4-5 换硬币（20 分）将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？ 输入格式:输入在一行中给出待换的零钱数额x∈(8,100)。 输出格式:要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。 输入样例:113 输出样例:12345fen5:2, fen2:1, fen1:1, total:4fen5:1, fen2:3, fen1:2, total:6fen5:1, fen2:2, fen1:4, total:7fen5:1, fen2:1, fen1:6, total:8count = 4","text":"习题4-5 换硬币（20 分）将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？ 输入格式:输入在一行中给出待换的零钱数额x∈(8,100)。 输出格式:要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。 输入样例:113 输出样例:12345fen5:2, fen2:1, fen1:1, total:4fen5:1, fen2:3, fen1:2, total:6fen5:1, fen2:2, fen1:4, total:7fen5:1, fen2:1, fen1:6, total:8count = 4 1234567891011121314151617#include&lt;stdio.h&gt; int main()&#123; int x,i,j,k,a,b,c,count=0; scanf(\"%d\",&amp;x); for(i=x/5;i&gt;=1;i--)&#123; for(j=x/2;j&gt;=1;j--)&#123; for(k=x;k&gt;=1;k--)&#123; if(5*i+2*j+k==x)&#123; printf(\"fen5:%d, fen2:%d, fen1:%d, total:%d\\n\",i,j,k,i+j+k); count++; &#125; &#125; &#125; &#125; printf(\"count = %d\",count); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-4 特殊a串数列求和（20 分）","slug":"siti4-4","date":"2018-01-22T09:51:00.000Z","updated":"2018-03-28T01:44:01.453Z","comments":true,"path":"2018/01/22/siti4-4/","link":"","permalink":"/2018/01/22/siti4-4/","excerpt":"习题4-4 特殊a串数列求和（20 分）给定两个均不超过9的正整数a和n，要求编写程序求a+aa+aaa++⋯+aa⋯a（n个a）之和。 输入格式：输入在一行中给出不超过9的正整数a和n。 输出格式：在一行中按照“s = 对应的和”的格式输出。 输入样例：12 3 输出样例：1s = 246","text":"习题4-4 特殊a串数列求和（20 分）给定两个均不超过9的正整数a和n，要求编写程序求a+aa+aaa++⋯+aa⋯a（n个a）之和。 输入格式：输入在一行中给出不超过9的正整数a和n。 输出格式：在一行中按照“s = 对应的和”的格式输出。 输入样例：12 3 输出样例：1s = 246 123456789101112#include&lt;stdio.h&gt; int main() &#123; int a,n,sum,i,t; t=sum=0; scanf(\"%d%d\",&amp;a,&amp;n); for(i=1;i&lt;=n;i++)&#123; t=t*10+a; sum+=t; &#125; printf(\"s = %d\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-3 求分数序列前N项和（15 分）","slug":"siti4-3","date":"2018-01-22T09:26:00.000Z","updated":"2018-03-28T01:43:36.238Z","comments":true,"path":"2018/01/22/siti4-3/","link":"","permalink":"/2018/01/22/siti4-3/","excerpt":"习题4-3 求分数序列前N项和（15 分）本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+… 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:120 输出样例:132.66","text":"习题4-3 求分数序列前N项和（15 分）本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+… 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:120 输出样例:132.66 12345678910111213141516#include&lt;stdio.h&gt; int main() &#123; double n,z,m,i,t; double item,sum; sum=0;m=1;z=2; scanf(\"%lf\",&amp;n); for(i=1;i&lt;=n;i++)&#123; item=1.0*z/m; sum=sum+item; t=z; z=z+m; m=t; &#125; printf(\"%.2f\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-2 求幂级数展开的部分和（20 分）","slug":"siti4-2","date":"2018-01-22T09:22:00.000Z","updated":"2018-03-28T01:43:11.348Z","comments":true,"path":"2018/01/22/siti4-2/","link":"","permalink":"/2018/01/22/siti4-2/","excerpt":"习题4-2 求幂级数展开的部分和（20 分）已知函数ex可以展开为幂级数1+x+x2/2!+x3/3!+⋯+xk/k!+⋯。现给定一个实数x，要求利用此幂级数部分和求ex的近似值，求和一直继续到最后一项的绝对值小于0.00001。 输入格式:输入在一行中给出一个实数x∈[0,5]。 输出格式:在一行中输出满足条件的幂级数部分和，保留小数点后四位。 输入样例:11.2 输出样例:13.3201","text":"习题4-2 求幂级数展开的部分和（20 分）已知函数ex可以展开为幂级数1+x+x2/2!+x3/3!+⋯+xk/k!+⋯。现给定一个实数x，要求利用此幂级数部分和求ex的近似值，求和一直继续到最后一项的绝对值小于0.00001。 输入格式:输入在一行中给出一个实数x∈[0,5]。 输出格式:在一行中输出满足条件的幂级数部分和，保留小数点后四位。 输入样例:11.2 输出样例:13.3201 1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;math.h&gt;#define eps 1e-5 //0.00001int main()&#123; double x, sum = 1.0; scanf(\"%lf\", &amp;x); double result = 1.0; int i; for (i = 1; ; i++) &#123; result = (result * x) / i; sum += result; if (result &lt; eps) &#123; break; &#125; &#125; printf(\"%.4f\", sum); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题4-1 求奇数和（15 分）","slug":"siti4-1","date":"2018-01-22T09:21:00.000Z","updated":"2018-03-28T01:42:45.797Z","comments":true,"path":"2018/01/22/siti4-1/","link":"","permalink":"/2018/01/22/siti4-1/","excerpt":"习题4-1 求奇数和（15 分）本题要求计算给定的一系列正整数中奇数的和。 输入格式:输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。 输出格式:在一行中输出正整数序列中奇数的和。 输入样例:18 7 4 3 70 5 6 101 -1 输出样例:1116","text":"习题4-1 求奇数和（15 分）本题要求计算给定的一系列正整数中奇数的和。 输入格式:输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。 输出格式:在一行中输出正整数序列中奇数的和。 输入样例:18 7 4 3 70 5 6 101 -1 输出样例:1116 123456789101112#include &lt;stdio.h&gt; int main(void) &#123; int n,z; z=0; scanf(\"%d\",&amp;n); while(n&gt;0) &#123; if(n%2!=0) z=z+n; scanf(\"%d\",&amp;n); &#125; printf(\"%d\",z);return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习4-11 统计素数并求和（20 分）","slug":"liensi4-11","date":"2018-01-22T09:19:00.000Z","updated":"2018-03-28T01:39:45.560Z","comments":true,"path":"2018/01/22/liensi4-11/","link":"","permalink":"/2018/01/22/liensi4-11/","excerpt":"练习4-11 统计素数并求和（20 分）本题要求统计给定整数M和N区间内素数的个数并对它们求和。 输入格式:输入在一行中给出两个正整数M和N（1≤M≤N≤500）。 输出格式:在一行中顺序输出M和N区间内素数的个数以及它们的和，数字间以空格分隔。 输入样例:110 31 输出样例:17 143","text":"练习4-11 统计素数并求和（20 分）本题要求统计给定整数M和N区间内素数的个数并对它们求和。 输入格式:输入在一行中给出两个正整数M和N（1≤M≤N≤500）。 输出格式:在一行中顺序输出M和N区间内素数的个数以及它们的和，数字间以空格分隔。 输入样例:110 31 输出样例:17 143 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;int main() &#123; int m,n; int i; int cnt=0; int sum=0; scanf(\"%d%d\",&amp;m,&amp;n); if(m==1) m=2; for(i=m;i&lt;=n;i++)&#123; int isPrime=1; int k; for(k=2;k&lt;i-1;k++)&#123; if(i%k==0)&#123; isPrime=0; break; &#125; &#125; if(isPrime)&#123; cnt++; sum+=i; &#125; &#125; printf(\"%d %d\\n\",cnt,sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习4-10 找出最小值（20 分）","slug":"liensi4-10","date":"2018-01-22T09:17:00.000Z","updated":"2018-03-28T01:38:58.317Z","comments":true,"path":"2018/01/22/liensi4-10/","link":"","permalink":"/2018/01/22/liensi4-10/","excerpt":"练习4-10 找出最小值（20 分）本题要求编写程序，找出给定一系列整数中的最小值。 输入格式：输入在一行中首先给出一个正整数n，之后是n个整数，其间以空格分隔。 输出格式：在一行中按照“min = 最小值”的格式输出n个整数中的最小值。 输入样例：14 -2 -123 100 0 输出样例：1min = -123","text":"练习4-10 找出最小值（20 分）本题要求编写程序，找出给定一系列整数中的最小值。 输入格式：输入在一行中首先给出一个正整数n，之后是n个整数，其间以空格分隔。 输出格式：在一行中按照“min = 最小值”的格式输出n个整数中的最小值。 输入样例：14 -2 -123 100 0 输出样例：1min = -123 12345678910111213#include &lt;stdio.h&gt; int main(void ) &#123; int i,a,min,n; scanf(\"%d\",&amp;n); min=a; for(i=1;i&lt;=n;i++)&#123; scanf(\"%d\",&amp;a); if(min&gt;a) min=a; &#125; printf(\"min = %d\\n\",min); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习4-7 求e的近似值（15 分）","slug":"liensi4-7","date":"2018-01-22T09:16:00.000Z","updated":"2018-03-28T01:38:35.559Z","comments":true,"path":"2018/01/22/liensi4-7/","link":"","permalink":"/2018/01/22/liensi4-7/","excerpt":"练习4-7 求e的近似值（15 分）自然常数e可以用级数1+1/1!+1/2!+⋯+1/n!来近似计算。本题要求对给定的非负整数n，求该级数的前n项和。 输入格式:输入第一行中给出非负整数n（≤1000）。 输出格式:在一行中输出部分和的值，保留小数点后八位。 输入样例:110 输出样例:12.71828180","text":"练习4-7 求e的近似值（15 分）自然常数e可以用级数1+1/1!+1/2!+⋯+1/n!来近似计算。本题要求对给定的非负整数n，求该级数的前n项和。 输入格式:输入第一行中给出非负整数n（≤1000）。 输出格式:在一行中输出部分和的值，保留小数点后八位。 输入样例:110 输出样例:12.71828180 12345678910111213141516171819202122#include&lt;stdio.h&gt; double fact(int n); int main()&#123; double count=1; int i; int n; scanf(\"%d\",&amp;n); for(i=1;i&lt;=n;i++) &#123; count=count+1.0/fact(i); &#125; printf(\"%.8f\\n\",count); return 0; &#125; double fact(int n) &#123; int i; double sum=1; for(i=1;i&lt;=n;i++) &#123; sum=sum*i; &#125; return sum; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习4-6 猜数字游戏（15 分）","slug":"liensi4-6","date":"2018-01-22T09:11:00.000Z","updated":"2018-03-28T01:38:02.173Z","comments":true,"path":"2018/01/22/liensi4-6/","link":"","permalink":"/2018/01/22/liensi4-6/","excerpt":"练习4-6 猜数字游戏（15 分）猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（&gt;3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。 输入格式:输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。 输出格式:在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。 输入样例:123456758 47050565860-2 输出样例:1234Too bigToo smallToo smallGood Guess!","text":"练习4-6 猜数字游戏（15 分）猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（&gt;3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。 输入格式:输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。 输出格式:在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。 输入样例:123456758 47050565860-2 输出样例:1234Too bigToo smallToo smallGood Guess! 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;stdio.h&gt;int main() &#123; int key, n; scanf(\"%d %d\",&amp;key,&amp;n); int i; int m; int flag = 0; for (i = 1;i &lt;= n;i ++) &#123; scanf(\"%d\",&amp;m); if (m &lt; 0) break; if (m &gt; key) printf(\"Too big\\n\"); if (m &lt; key) printf(\"Too small\\n\"); if (m == key) &#123; if (i == 1) &#123; flag = 1; printf(\"Bingo!\\n\"); break; &#125; if (i == 2 || i == 3) &#123; flag = 1; printf(\"Lucky You!\\n\"); break; &#125; if (i &gt; 3) &#123; flag = 1; printf(\"Good Guess!\\n\"); break; &#125; &#125; &#125; if (flag == 0) printf(\"Game Over\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习4-3 求给定精度的简单交错序列部分和（15 分）","slug":"liensi4-3","date":"2018-01-22T09:09:00.000Z","updated":"2018-03-28T01:37:31.709Z","comments":true,"path":"2018/01/22/liensi4-3/","link":"","permalink":"/2018/01/22/liensi4-3/","excerpt":"练习4-3 求给定精度的简单交错序列部分和（15 分）本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。 输入格式:输入在一行中给出一个正实数eps。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例1:14E-2 输出样例1:1sum = 0.854457 输入样例2:10.02 输出样例2:1sum = 0.826310","text":"练习4-3 求给定精度的简单交错序列部分和（15 分）本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。 输入格式:输入在一行中给出一个正实数eps。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例1:14E-2 输出样例1:1sum = 0.854457 输入样例2:10.02 输出样例2:1sum = 0.826310 12345678910111213141516#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void)&#123; int fz=1,fm=1,flag=1; double eps,item,sum=0; scanf(\"%lf\",&amp;eps); item=eps+1; while(fabs(item)&gt;eps)&#123; item=flag*1.0/fm; sum=sum+item; fm=fm+3; flag=-flag; &#125; printf(\"sum = %.6f\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题3-5 三角形判断（15 分）","slug":"siti3-5","date":"2018-01-22T07:38:00.000Z","updated":"2018-03-28T01:35:20.838Z","comments":true,"path":"2018/01/22/siti3-5/","link":"","permalink":"/2018/01/22/siti3-5/","excerpt":"习题3-5 三角形判断（15 分）给定平面上任意三个点的坐标(x1,y1)、(x2,y2)、(x3,y3)，检验它们能否构成三角形。 输入格式:输入在一行中顺序给出六个[−100,100]范围内的数字，即三个点的坐标x1、y1、x2、y2、x3、y3。 输出格式:若这3个点不能构成三角形，则在一行中输出“Impossible”；若可以，则在一行中输出该三角形的周长和面积，格式为“L = 周长, A = 面积”，输出到小数点后2位。 输入样例1:14 5 6 9 7 8 输出样例1:1L = 10.13, A = 3.00 输入样例2:14 6 8 12 12 18 输出样例2:1Impossible","text":"习题3-5 三角形判断（15 分）给定平面上任意三个点的坐标(x1,y1)、(x2,y2)、(x3,y3)，检验它们能否构成三角形。 输入格式:输入在一行中顺序给出六个[−100,100]范围内的数字，即三个点的坐标x1、y1、x2、y2、x3、y3。 输出格式:若这3个点不能构成三角形，则在一行中输出“Impossible”；若可以，则在一行中输出该三角形的周长和面积，格式为“L = 周长, A = 面积”，输出到小数点后2位。 输入样例1:14 5 6 9 7 8 输出样例1:1L = 10.13, A = 3.00 输入样例2:14 6 8 12 12 18 输出样例2:1Impossible 12345678910111213141516171819#include &lt;stdio.h&gt; int main(void) &#123; double x1, y1, x2, y2, x3, y3; double side1, side2, side3; double p, perimeter, area; scanf(\"%lf%lf%lf%lf%lf%lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2, &amp;x3, &amp;y3); side1 = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)); side2 = sqrt((x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1)); side3 = sqrt((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2)); if(side1 + side2 &gt; side3 &amp;&amp; side1 + side3 &gt; side2 &amp;&amp; side2 + side3 &gt; side1) &#123; perimeter = side1 + side2 + side3; p = 0.5 * perimeter; area = sqrt(p * (p - side1) * (p - side2) * (p - side3)); printf(\"L = %.2f, A = %.2f\\n\", perimeter, area); &#125; else printf(\"Impossible\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题3-4 统计学生成绩（15 分）","slug":"siti3-4","date":"2018-01-22T07:37:00.000Z","updated":"2018-03-28T01:34:57.662Z","comments":true,"path":"2018/01/22/siti3-4/","link":"","permalink":"/2018/01/22/siti3-4/","excerpt":"习题3-4 统计学生成绩（15 分）本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则： 大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。 输入格式:输入在第一行中给出一个正整数N（≤1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 输出格式:在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。 输入样例:12777 54 92 73 60 65 69 输出样例:11 0 2 3 1","text":"习题3-4 统计学生成绩（15 分）本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则： 大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。 输入格式:输入在第一行中给出一个正整数N（≤1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 输出格式:在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。 输入样例:12777 54 92 73 60 65 69 输出样例:11 0 2 3 1 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt; int main()&#123; int n,i,A,B,C,D,N,E; scanf(\"%d\\n\",&amp;n); A=B=C=D=E=0; for(i=1;i&lt;=n;i++)&#123; scanf(\"%d\",&amp;N); if(N&gt;=90)&#123; A++; &#125; else if(N&gt;=80)&#123; B++; &#125; else if(N&gt;=70)&#123; C++; &#125; else if (N&gt;=60)&#123; D++; &#125; else&#123; E++; &#125; &#125; printf(\"%d %d %d %d %d\",A,B,C,D,E); return 0; &#125; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题3-3 出租车计价（15 分）","slug":"siti3-3","date":"2018-01-22T07:36:00.000Z","updated":"2018-03-28T01:34:33.115Z","comments":true,"path":"2018/01/22/siti3-3/","link":"","permalink":"/2018/01/22/siti3-3/","excerpt":"习题3-3 出租车计价（15 分）本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下： 起步里程为3公里，起步费10元； 超起步里程后10公里内，每公里2元； 超过10公里以上的部分加收50%的回空补贴费，即每公里3元； 营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 输入格式:输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。 输出格式:在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。 输入样例1:12.6 2 输出样例1:110 输入样例2:15.1 4 输出样例2:114 输入样例3:112.5 9 输出样例3:134","text":"习题3-3 出租车计价（15 分）本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下： 起步里程为3公里，起步费10元； 超起步里程后10公里内，每公里2元； 超过10公里以上的部分加收50%的回空补贴费，即每公里3元； 营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 输入格式:输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。 输出格式:在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。 输入样例1:12.6 2 输出样例1:110 输入样例2:15.1 4 输出样例2:114 输入样例3:112.5 9 输出样例3:134 12345678910111213#include&lt;stdio.h&gt;int main()&#123; int time; double mileage,fee; scanf(\"%lf %d\",&amp;mileage,&amp;time); if(mileage&lt;=3) fee=10; else if(mileage&gt;3&amp;&amp;mileage&lt;=10) fee=10+(mileage-3)*2; else fee=24+(mileage-10)*3; fee=fee+(time/5)*2; printf(\"%.0f\",fee); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题3-2 高速公路超速处罚（15 分）","slug":"siti3-2","date":"2018-01-22T07:35:00.000Z","updated":"2018-03-28T01:34:07.637Z","comments":true,"path":"2018/01/22/siti3-2/","link":"","permalink":"/2018/01/22/siti3-2/","excerpt":"习题3-2 高速公路超速处罚（15 分）按照规定，在高速公路上行使的机动车，达到或超出本车道限速的10%则处200元罚款；若达到或超出50%，就要吊销驾驶证。请编写程序根据车速和限速自动判别对该机动车的处理。 输入格式:输入在一行中给出2个正整数，分别对应车速和限速，其间以空格分隔。 输出格式:在一行中输出处理意见：若属于正常行驶，则输出“OK”；若应处罚款，则输出“Exceed x%. Ticket 200”；若应吊销驾驶证，则输出“Exceed x%. License Revoked”。其中x是超速的百分比，精确到整数。 输入样例1:165 60 输出样例1:1OK 输入样例2:1110 100 输出样例2:1Exceed 10%. Ticket 200 输入样例3:1200 120 输出样例3:1Exceed 67%. License Revoked","text":"习题3-2 高速公路超速处罚（15 分）按照规定，在高速公路上行使的机动车，达到或超出本车道限速的10%则处200元罚款；若达到或超出50%，就要吊销驾驶证。请编写程序根据车速和限速自动判别对该机动车的处理。 输入格式:输入在一行中给出2个正整数，分别对应车速和限速，其间以空格分隔。 输出格式:在一行中输出处理意见：若属于正常行驶，则输出“OK”；若应处罚款，则输出“Exceed x%. Ticket 200”；若应吊销驾驶证，则输出“Exceed x%. License Revoked”。其中x是超速的百分比，精确到整数。 输入样例1:165 60 输出样例1:1OK 输入样例2:1110 100 输出样例2:1Exceed 10%. Ticket 200 输入样例3:1200 120 输出样例3:1Exceed 67%. License Revoked 12345678910111213#include &lt;stdio.h&gt; int main(void) &#123; int m,n; double z; scanf(\"%d%d\",&amp;m,&amp;n); z=(m-n)*100.0/n; if(z&lt;10) printf(\"OK\\n\"); else if(z&lt;50) printf(\"Exceed %.0f%%. Ticket 200\\n\",z); else printf(\"Exceed %.0f%%. License Revoked\\n\",z); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题3-1 比较大小（10 分）","slug":"siti3-1","date":"2018-01-22T07:34:00.000Z","updated":"2018-03-28T01:33:37.493Z","comments":true,"path":"2018/01/22/siti3-1/","link":"","permalink":"/2018/01/22/siti3-1/","excerpt":"习题3-1 比较大小（10 分）本题要求将输入的任意3个整数从小到大输出。 输入格式:输入在一行中给出3个整数，其间以空格分隔。 输出格式:在一行中将3个整数从小到大输出，其间以“-&gt;”相连。 输入样例:14 2 8 输出样例:12-&gt;4-&gt;8","text":"习题3-1 比较大小（10 分）本题要求将输入的任意3个整数从小到大输出。 输入格式:输入在一行中给出3个整数，其间以空格分隔。 输出格式:在一行中将3个整数从小到大输出，其间以“-&gt;”相连。 输入样例:14 2 8 输出样例:12-&gt;4-&gt;8 1234567891011121314151617#include&lt;stdio.h&gt;int main(void)&#123; int a,b,c,t; scanf(\"%d %d %d\",&amp;a,&amp;b,&amp;c); if(a&lt;b)&#123; t=b;b=a;a=t; &#125;; if(a&lt;c)&#123; t=c;c=a;a=t; &#125;; if(b&lt;c)&#123; t=c;c=b;b=t; &#125;; printf(\"%d-&gt;%d-&gt;%d\",c,b,a); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习3-8 查询水果价格（15 分）","slug":"liensi3-8","date":"2018-01-22T07:33:00.000Z","updated":"2018-03-28T01:32:14.230Z","comments":true,"path":"2018/01/22/liensi3-8/","link":"","permalink":"/2018/01/22/liensi3-8/","excerpt":"练习3-8 查询水果价格（15 分）给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。 首先在屏幕上显示以下菜单： 12345[1] apple[2] pear[3] orange[4] grape[0] exit 用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。 输入格式:输入在一行中给出用户连续输入的若干个编号。 输出格式:首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。 输入样例1:13 -1 0 2 输出样例1:1234567[1] apple[2] pear[3] orange[4] grape[0] exitprice = 4.10price = 0.00 输入样例2:11 2 3 3 4 4 5 6 7 8 输出样例2:12345678910[1] apple[2] pear[3] orange[4] grape[0] exitprice = 3.00price = 2.50price = 4.10price = 4.10price = 10.20","text":"练习3-8 查询水果价格（15 分）给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。 首先在屏幕上显示以下菜单： 12345[1] apple[2] pear[3] orange[4] grape[0] exit 用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。 输入格式:输入在一行中给出用户连续输入的若干个编号。 输出格式:首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。 输入样例1:13 -1 0 2 输出样例1:1234567[1] apple[2] pear[3] orange[4] grape[0] exitprice = 4.10price = 0.00 输入样例2:11 2 3 3 4 4 5 6 7 8 输出样例2:12345678910[1] apple[2] pear[3] orange[4] grape[0] exitprice = 3.00price = 2.50price = 4.10price = 4.10price = 10.20 1234567891011121314151617181920212223#include&lt;stdio.h&gt; int main(void)&#123; int n,i; double price; printf(\"[1] apple\\n\"); printf(\"[2] pear\\n\"); printf(\"[3] orange\\n\"); printf(\"[4] grape\\n\"); printf(\"[0] exit\\n\"); for(i=1;i&lt;=5;i++)&#123; scanf(\"%d\",&amp;n); if(n==0) break; switch(n)&#123; case 1:price=3.00;break; case 2:price=2.50;break; case 3:price=4.10;break; case 4:price=10.20;break; default:price=0.00;break; &#125; printf(\"price = %.2f\\n\",price); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习3-7 成绩转换（15 分）","slug":"liensi3-7","date":"2018-01-22T07:32:00.000Z","updated":"2018-03-28T01:31:46.039Z","comments":true,"path":"2018/01/22/liensi3-7/","link":"","permalink":"/2018/01/22/liensi3-7/","excerpt":"练习3-7 成绩转换（15 分）本题要求编写程序将一个百分制成绩转换为五分制成绩。转换规则： 大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。 输入格式:输入在一行中给出一个整数的百分制成绩。 输出格式:在一行中输出对应的五分制成绩。 输入样例:190 输出样例:1A","text":"练习3-7 成绩转换（15 分）本题要求编写程序将一个百分制成绩转换为五分制成绩。转换规则： 大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。 输入格式:输入在一行中给出一个整数的百分制成绩。 输出格式:在一行中输出对应的五分制成绩。 输入样例:190 输出样例:1A 1234567891011121314151617181920212223242526272829303132#include&lt;stdio.h&gt; int main() &#123; int t,a;char x;//用个字符变量比较方便 scanf(\"%d\",&amp;t); while(t--) &#123; scanf(\"%d\",&amp;a); if (a&gt;=90) &#123; x='A'; &#125; else if (a&gt;=80) &#123; x='B'; &#125; else if (a&gt;=70) &#123; x='C'; &#125; else if (a&gt;=60) &#123; x='D'; &#125; else &#123; x='E'; &#125; printf(\"%c\\n\",x); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习3-5 输出闰年（15 分）","slug":"liensi3-5","date":"2018-01-22T07:31:00.000Z","updated":"2018-03-28T01:31:17.285Z","comments":true,"path":"2018/01/22/liensi3-5/","link":"","permalink":"/2018/01/22/liensi3-5/","excerpt":"练习3-5 输出闰年（15 分）输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。 输入格式:输入在一行中给出21世纪的某个截止年份。 输出格式:逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出”Invalid year!”。若不存在任何闰年，则输出“None”。 输入样例1:12048 输出样例1:123456789101112200420082012201620202024202820322036204020442048 输入样例2:12000 输出样例2:1Invalid year!","text":"练习3-5 输出闰年（15 分）输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。 输入格式:输入在一行中给出21世纪的某个截止年份。 输出格式:逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出”Invalid year!”。若不存在任何闰年，则输出“None”。 输入样例1:12048 输出样例1:123456789101112200420082012201620202024202820322036204020442048 输入样例2:12000 输出样例2:1Invalid year! 1234567891011121314#include&lt;stdio.h&gt; int main(void) &#123; int year, i; scanf(\"%d\", &amp;year); if(year &lt; 2001 || year &gt; 2100) /* 21世纪共100年，2001年为起始年 */ printf(\"Invalid year!\\n\"); else &#123; for(i = 2001; i &lt;= year; ++i) &#123; if((i % 4 == 0 &amp;&amp; i % 100 != 0) || (i % 400 == 0)) printf(\"%d\\n\", i); &#125; &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习3-4 统计字符（15 分）","slug":"liensi3-4","date":"2018-01-22T07:30:00.000Z","updated":"2018-03-28T01:30:51.909Z","comments":true,"path":"2018/01/22/liensi3-4/","link":"","permalink":"/2018/01/22/liensi3-4/","excerpt":"练习3-4 统计字符（15 分）本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。 输入格式:输入为10个字符。最后一个回车表示输入结束，不算在内。 输出格式:在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 输入样例:12aZ &amp;09 Az 输出样例:1letter = 4, blank = 3, digit = 2, other = 1","text":"练习3-4 统计字符（15 分）本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。 输入格式:输入为10个字符。最后一个回车表示输入结束，不算在内。 输出格式:在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 输入样例:12aZ &amp;09 Az 输出样例:1letter = 4, blank = 3, digit = 2, other = 1 1234567891011121314151617#include&lt;stdio.h&gt;int main(void)&#123; int i,letter,blank,digit,other; char ch; letter=blank=digit=other=0; for(i=1;i&lt;=10;i++)&#123; scanf(\"%c\",&amp;ch); if(ch&gt;='A'&amp;&amp;ch&lt;='Z'||(ch&gt;='a'&amp;&amp;ch&lt;='z')) letter++; else if(ch==' '||ch=='\\n') blank++; else if(ch&gt;='0'&amp;&amp;ch&lt;='9') digit++; else other++; &#125; printf(\"letter = %d, blank = %d, digit = %d, other = %d\",letter,blank,digit,other); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习3-3 统计学生平均成绩与及格人数（15 分）","slug":"liensi3-3","date":"2018-01-21T10:10:00.000Z","updated":"2018-03-28T01:30:15.612Z","comments":true,"path":"2018/01/21/liensi3-3/","link":"","permalink":"/2018/01/21/liensi3-3/","excerpt":"练习3-3 统计学生平均成绩与及格人数（15 分）本题要求编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。 输入格式:输入在第一行中给出非负整数N，即学生人数。第二行给出N个非负整数，即这N位学生的成绩，其间以空格分隔。 输出格式:按照以下格式输出： 12average = 成绩均值count = 及格人数 其中平均值精确到小数点后一位。 输入样例:12577 54 92 73 60 输出样例:12average = 71.2count = 4","text":"练习3-3 统计学生平均成绩与及格人数（15 分）本题要求编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。 输入格式:输入在第一行中给出非负整数N，即学生人数。第二行给出N个非负整数，即这N位学生的成绩，其间以空格分隔。 输出格式:按照以下格式输出： 12average = 成绩均值count = 及格人数 其中平均值精确到小数点后一位。 输入样例:12577 54 92 73 60 输出样例:12average = 71.2count = 4 1234567891011121314151617#include &lt;stdio.h&gt; int main() &#123; int n,x=0,i; double a[10001],sum=0; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++) &#123; scanf(\"%lf\",&amp;a[i]); if(a[i]&gt;=60) x++; sum+=a[i]; &#125; if(n==0) printf(\"average = 0.0\\n\"); else printf(\"average = %.1f\\n\",sum/n); printf(\"count = %d\\n\",x); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习3-2 计算符号函数的值（10 分）","slug":"liensi3-2","date":"2018-01-21T10:02:00.000Z","updated":"2018-03-28T01:29:52.973Z","comments":true,"path":"2018/01/21/liensi3-2/","link":"","permalink":"/2018/01/21/liensi3-2/","excerpt":"练习3-2 计算符号函数的值（10 分）对于任一整数n，符号函数sign(n)的定义如下： 请编写程序计算该函数对任一输入整数的值。 输入格式:输入在一行中给出整数n。 输出格式:在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。 输入样例1:110 输出样例1:1sign(10) = 1 输入样例2:10 输出样例2:1sign(0) = 0 输入样例3:1-98 输出样例3:1sign(-98) = -1","text":"练习3-2 计算符号函数的值（10 分）对于任一整数n，符号函数sign(n)的定义如下： 请编写程序计算该函数对任一输入整数的值。 输入格式:输入在一行中给出整数n。 输出格式:在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。 输入样例1:110 输出样例1:1sign(10) = 1 输入样例2:10 输出样例2:1sign(0) = 0 输入样例3:1-98 输出样例3:1sign(-98) = -1 12345678910111213#include&lt;stdio.h&gt; int main(void)&#123; int n,p; scanf(\"%d\",&amp;n); if(n&lt;0) p=-1; else if(n==0) p=0; else if(n&gt;0) p=1; printf(\"sign(%d) = %d\",n,p); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题2-6 求阶乘序列前N项和（15 分）","slug":"siti2-6","date":"2018-01-21T09:59:00.000Z","updated":"2018-03-27T16:15:50.486Z","comments":true,"path":"2018/01/21/siti2-6/","link":"","permalink":"/2018/01/21/siti2-6/","excerpt":"习题2-6 求阶乘序列前N项和（15 分）本题要求编写程序，计算序列 1!+2!+3!+⋯ 的前N项之和。 输入格式:输入在一行中给出一个不超过12的正整数N。 输出格式:在一行中输出整数结果。 输入样例:15 输出样例:1153","text":"习题2-6 求阶乘序列前N项和（15 分）本题要求编写程序，计算序列 1!+2!+3!+⋯ 的前N项之和。 输入格式:输入在一行中给出一个不超过12的正整数N。 输出格式:在一行中输出整数结果。 输入样例:15 输出样例:1153 1234567891011121314151617181920212223#include&lt;stdio.h&gt; double fact(int n);int main(void) &#123; double result,s=0; int n,i; scanf(\"%d\",&amp;n); for(i=1;i&lt;=n;i++)&#123; result=fact(i); s=s+result; &#125;printf(\"%.0f\",s); return 0;&#125;double fact(int n)&#123; double total = 0; if (n == 0)&#123; total = 1; &#125;else&#123; total = n * fact(n - 1); &#125; return total;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题2-5 求平方根序列前N项和（15 分）","slug":"siti2-5","date":"2018-01-19T01:59:00.000Z","updated":"2018-03-27T16:15:33.347Z","comments":true,"path":"2018/01/19/siti2-5/","link":"","permalink":"/2018/01/19/siti2-5/","excerpt":"习题2-5 求平方根序列前N项和（15 分）本题要求编写程序，计算平方根序列√1+√2+√3+⋯的前N项之和。可包含头文件math.h，并调用sqrt函数求平方根。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 22.47","text":"习题2-5 求平方根序列前N项和（15 分）本题要求编写程序，计算平方根序列√1+√2+√3+⋯的前N项之和。可包含头文件math.h，并调用sqrt函数求平方根。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 22.47 12345678910111213#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void) &#123; int N,i; double s=0,a; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; a=sqrt(i); s=s+a; &#125; printf(\"sum = %.2f\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题2-4 求交错序列前N项和（15 分）","slug":"siti2-4","date":"2018-01-19T01:57:00.000Z","updated":"2018-03-27T16:15:16.570Z","comments":true,"path":"2018/01/19/siti2-4/","link":"","permalink":"/2018/01/19/siti2-4/","excerpt":"习题2-4 求交错序列前N项和（15 分）本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+… 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，结果保留三位小数。 输入样例:15 输出样例:10.917","text":"习题2-4 求交错序列前N项和（15 分）本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+… 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，结果保留三位小数。 输入样例:15 输出样例:10.917 1234567891011121314#include&lt;stdio.h&gt; int main(void) &#123; int N,i,fm,flag; double s=0,item; scanf(\"%d\",&amp;N); fm=1; flag=1; for(i=1;i&lt;=N;i++) &#123; item=flag*i*1.0/fm; s=s+item; flag=-flag; fm=fm+2; &#125; printf(\"%.3lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题2-3 求平方与倒数序列的部分和（15 分）","slug":"siti2-3","date":"2018-01-16T11:52:00.000Z","updated":"2018-03-27T16:14:59.084Z","comments":true,"path":"2018/01/16/siti2-3/","link":"","permalink":"/2018/01/16/siti2-3/","excerpt":"习题2-3 求平方与倒数序列的部分和（15 分）本题要求对两个正整数m和n（m≤n）编写程序，计算序列和m2+1/m+(m+1)2+1/(m+1)+⋯+n2+1/n。 输入格式:输入在一行中给出两个正整数m和n（m≤n），其间以空格分开。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例:15 10 输出样例:1sum = 355.845635","text":"习题2-3 求平方与倒数序列的部分和（15 分）本题要求对两个正整数m和n（m≤n）编写程序，计算序列和m2+1/m+(m+1)2+1/(m+1)+⋯+n2+1/n。 输入格式:输入在一行中给出两个正整数m和n（m≤n），其间以空格分开。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例:15 10 输出样例:1sum = 355.845635 123456789101112131415#include&lt;stdio.h&gt; int main(void) &#123; int N,i,fm,M; double s=0,item; scanf(\"%d%d\",&amp;M,&amp;N); fm=M; for(i=M;i&lt;=N;i++) &#123; item=fm*fm+1.0/fm; s=s+item; fm=fm+1; &#125; printf(\"sum = %.6lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题2-2 阶梯电价（15 分）","slug":"siti2-2","date":"2018-01-16T11:42:00.000Z","updated":"2018-03-27T16:14:39.874Z","comments":true,"path":"2018/01/16/siti2-2/","link":"","permalink":"/2018/01/16/siti2-2/","excerpt":"习题2-2 阶梯电价（15 分）为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。 输入格式:输入在一行中给出某用户的月用电量（单位：千瓦时）。 输出格式:在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出”Invalid Value!”。 输入样例1:110 输出样例1:1cost = 5.30 输入样例2:1100 输出样例2:1cost = 55.50","text":"习题2-2 阶梯电价（15 分）为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。 输入格式:输入在一行中给出某用户的月用电量（单位：千瓦时）。 输出格式:在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出”Invalid Value!”。 输入样例1:110 输出样例1:1cost = 5.30 输入样例2:1100 输出样例2:1cost = 55.50 12345678910111213141516#include&lt;stdio.h&gt; int main(void) &#123; float x,c; scanf(\"%f\",&amp;x); if(x&gt;=0)&#123; if(x&lt;=50)&#123; c=0.53*x; &#125;else&#123; c=0.53*50+(x-50)*0.58; printf(\"cost = %.2f\",c); &#125; &#125;else&#123; printf(\"Invalid Value!\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题2-1 求整数均值（10 分）","slug":"siti2-1","date":"2018-01-16T11:40:00.000Z","updated":"2018-03-27T16:14:23.443Z","comments":true,"path":"2018/01/16/siti2-1/","link":"","permalink":"/2018/01/16/siti2-1/","excerpt":"习题2-1 求整数均值（10 分）本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出4个整数，其间以空格分隔。 输出格式:在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。 输入样例:11 2 3 4 输出样例:1Sum = 10; Average = 2.5","text":"习题2-1 求整数均值（10 分）本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出4个整数，其间以空格分隔。 输出格式:在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。 输入样例:11 2 3 4 输出样例:1Sum = 10; Average = 2.5 1234567891011#include&lt;stdio.h&gt; int main(void) &#123; int a,b,c,d,S; float A; scanf(\"%d%d%d%d\",&amp;a,&amp;b,&amp;c,&amp;d); S=(a+b+c+d); A=(a+b+c+d)/4.0; printf(\"Sum = %d; Average = %.1f\",S,A); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-18 生成3的乘方表（15 分）","slug":"liensi2-18","date":"2018-01-16T03:54:00.000Z","updated":"2018-03-27T16:13:02.784Z","comments":true,"path":"2018/01/16/liensi2-18/","link":"","permalink":"/2018/01/16/liensi2-18/","excerpt":"练习2-18 求组合数（15 分）本题要求编写程序，根据公式Cnm=m!(n−m)!n!算出从n个不同元素中取出m个元素（m≤n）的组合数。 建议定义和调用函数fact(n)计算n!，其中n的类型是int，函数类型是double。 输入格式:输入在一行中给出两个正整数m和n（m≤n），以空格分隔。 输出格式:按照格式“result = 组合数计算结果”输出。题目保证结果在double类型范围内。 输入样例:12 7 输出样例:1result = 21","text":"练习2-18 求组合数（15 分）本题要求编写程序，根据公式Cnm=m!(n−m)!n!算出从n个不同元素中取出m个元素（m≤n）的组合数。 建议定义和调用函数fact(n)计算n!，其中n的类型是int，函数类型是double。 输入格式:输入在一行中给出两个正整数m和n（m≤n），以空格分隔。 输出格式:按照格式“result = 组合数计算结果”输出。题目保证结果在double类型范围内。 输入样例:12 7 输出样例:1result = 21 1234567891011121314151617181920212223#include&lt;stdio.h&gt;double fact(int n); int main(void)&#123; double result; int m,n,d; double x,y,z,a; scanf(\"%d %d\",&amp;m,&amp;n); d=n-m; x=fact(m); y=fact(n); z=fact(d); result = y/x/z; printf(\"result = %.f\",result); return 0; &#125; double fact (int n)&#123; int i; double a; a=1; for(i=1;i&lt;=n;i++)&#123; a=a*i; &#125; return a;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-17 生成3的乘方表（15 分）","slug":"liensi2-17","date":"2018-01-16T03:50:00.000Z","updated":"2018-03-27T16:12:40.317Z","comments":true,"path":"2018/01/16/liensi2-17/","link":"","permalink":"/2018/01/16/liensi2-17/","excerpt":"练习2-17 生成3的乘方表（15 分）输入一个非负整数n，生成一张3的乘方表，输出30~3n的值。可调用幂函数计算3的乘方。 输入格式:输入在一行中给出一个非负整数n。 输出格式:按照幂的递增顺序输出n+1行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。 输入样例:13 输出样例:1234pow(3,0) = 1pow(3,1) = 3pow(3,2) = 9pow(3,3) = 27","text":"练习2-17 生成3的乘方表（15 分）输入一个非负整数n，生成一张3的乘方表，输出30~3n的值。可调用幂函数计算3的乘方。 输入格式:输入在一行中给出一个非负整数n。 输出格式:按照幂的递增顺序输出n+1行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。 输入样例:13 输出样例:1234pow(3,0) = 1pow(3,1) = 3pow(3,2) = 9pow(3,3) = 27 12345678910111213#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void) &#123; int n,i; double a; scanf(\"%d\",&amp;n); for(i=0;i&lt;=n;i++)&#123; a=pow(3,i); printf(\"pow(3,%d) = %.0f\\n\",i,a); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-15 求简单交错序列前N项和（15 分）","slug":"liensi2-15","date":"2018-01-16T03:49:00.000Z","updated":"2018-03-27T16:12:17.857Z","comments":true,"path":"2018/01/16/liensi2-15/","link":"","permalink":"/2018/01/16/liensi2-15/","excerpt":"练习2-15 求简单交错序列前N项和（15 分）本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 0.819","text":"练习2-15 求简单交错序列前N项和（15 分）本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 0.819 1234567891011121314#include&lt;stdio.h&gt; int main(void) &#123;int N,i,flag=1,fm=1; double s=0,item; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; item=flag*1.0/fm; s=s+item; flag=-flag; fm=fm+3; &#125; printf(\"sum = %.3lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-14 求奇数分之一序列前N项和（15 分）","slug":"liensi2-14","date":"2018-01-16T03:28:00.000Z","updated":"2018-03-27T16:12:00.788Z","comments":true,"path":"2018/01/16/liensi2-14/","link":"","permalink":"/2018/01/16/liensi2-14/","excerpt":"练习2-14 求奇数分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/3 + 1/5 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:123 输出样例:1sum = 2.549541","text":"练习2-14 求奇数分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/3 + 1/5 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:123 输出样例:1sum = 2.549541 1234567891011#include&lt;stdio.h&gt; int main(void) &#123; int N,i; double s=0,item; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; item=1.0/(2*i-1); s=s+item; &#125; printf(\"sum = %.6lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-13 求N分之一序列前N项和（15 分）","slug":"liensi2-13","date":"2018-01-16T03:28:00.000Z","updated":"2018-03-27T16:11:43.186Z","comments":true,"path":"2018/01/16/liensi2-13/","link":"","permalink":"/2018/01/16/liensi2-13/","excerpt":"练习2-13 求N分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/2 + 1/3 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:16 输出样例:1sum = 2.450000","text":"练习2-13 求N分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/2 + 1/3 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:16 输出样例:1sum = 2.450000 123456789101112#include&lt;stdio.h&gt; int main(void) &#123; int N,i; double s=0,item; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; item=1.0/i; s=s+item; &#125; printf(\"sum = %.6lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-12 输出华氏-摄氏温度转换表（15 分）","slug":"liensi2-12","date":"2018-01-14T11:24:00.000Z","updated":"2018-03-27T16:11:24.945Z","comments":true,"path":"2018/01/14/liensi2-12/","link":"","permalink":"/2018/01/14/liensi2-12/","excerpt":"练习2-12 输出华氏-摄氏温度转换表（15 分）输入2个正整数lower和upper（lower≤upper≤100），请输出一张取值范围为[lower，upper]、且每次增加2华氏度的华氏-摄氏温度转换表。 温度转换的计算公式：C=5×(F−32)/9，其中：C表示摄氏温度，F表示华氏温度。 输入格式:在一行中输入2个整数，分别表示lower和upper的值，中间用空格分开。 输出格式:第一行输出：”fahr celsius” 接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。 若输入的范围不合法，则输出”Invalid.”。 输入样例1:132 35 输出样例1:123fahr celsius32 0.034 1.1 输入样例2:140 30 输出样例2:1Invalid.","text":"练习2-12 输出华氏-摄氏温度转换表（15 分）输入2个正整数lower和upper（lower≤upper≤100），请输出一张取值范围为[lower，upper]、且每次增加2华氏度的华氏-摄氏温度转换表。 温度转换的计算公式：C=5×(F−32)/9，其中：C表示摄氏温度，F表示华氏温度。 输入格式:在一行中输入2个整数，分别表示lower和upper的值，中间用空格分开。 输出格式:第一行输出：”fahr celsius” 接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。 若输入的范围不合法，则输出”Invalid.”。 输入样例1:132 35 输出样例1:123fahr celsius32 0.034 1.1 输入样例2:140 30 输出样例2:1Invalid. 123456789101112131415#include&lt;stdio.h&gt; int main(void) &#123; int fahr,lower,upper; double celsius; scanf(\"%d%d\",&amp;lower,&amp;upper); if(lower&lt;=upper &amp;&amp; upper&lt;=100)&#123; printf(\"fahr celsius\\n\"); for (fahr = lower;fahr&lt;= upper;fahr=fahr+2)&#123; celsius = (5.0/9.0)*(fahr-32); printf(\"%d%6.1f\\n\" ,fahr,celsius); &#125; &#125;else printf(\"Invalid.\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-11 计算分段函数[2]（10 分）","slug":"liensi2-11","date":"2018-01-14T11:14:00.000Z","updated":"2018-03-27T16:11:03.306Z","comments":true,"path":"2018/01/14/liensi2-11/","link":"","permalink":"/2018/01/14/liensi2-11/","excerpt":"练习2-11 计算分段函数[2]（10 分）本题目要求计算下列分段函数f(x)的值： 注：可在头文件中包含math.h，并调用sqrt函数求平方根，调用pow函数求幂。 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。 输入样例1:110 输出样例1:1f(10.00) = 3.16 输入样例2:1-0.5 输出样例2:1f(-0.50) = -2.75","text":"练习2-11 计算分段函数[2]（10 分）本题目要求计算下列分段函数f(x)的值： 注：可在头文件中包含math.h，并调用sqrt函数求平方根，调用pow函数求幂。 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。 输入样例1:110 输出样例1:1f(10.00) = 3.16 输入样例2:1-0.5 输出样例2:1f(-0.50) = -2.75 12345678910111213#include&lt;stdio.h&gt;#include&lt;math.h&gt; int main(void)&#123; double x,re; scanf(\"%lf\",&amp;x); if(x &gt;= 0)&#123; re=pow( x , 0.5 ); &#125;else&#123; re=pow ( x + 1,2) + 2 * x + 1.0 / x; &#125; printf(\"f(%.2f) = %.2f\",x,re);&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-9 整数四则运算（10 分）","slug":"liensi2-9","date":"2018-01-14T11:11:00.000Z","updated":"2018-03-27T16:10:14.250Z","comments":true,"path":"2018/01/14/liensi2-9/","link":"","permalink":"/2018/01/14/liensi2-9/","excerpt":"练习2-9 整数四则运算（10 分）本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。 输入格式:输入在一行中给出2个正整数A和B。 输出格式:在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。 输入样例:13 2 输出样例:12343 + 2 = 53 - 2 = 13 * 2 = 63 / 2 = 1","text":"练习2-9 整数四则运算（10 分）本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。 输入格式:输入在一行中给出2个正整数A和B。 输出格式:在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。 输入样例:13 2 输出样例:12343 + 2 = 53 - 2 = 13 * 2 = 63 / 2 = 1 123456789101112131415#include &lt;stdio.h&gt;int main(void)&#123; int a, b; while ( scanf( \"%d %d\", &amp;a, &amp;b ) != EOF ) &#123; printf( \"%d + %d = %d\\n\", a, b, a + b ); printf( \"%d - %d = %d\\n\", a, b, a - b ); printf( \"%d * %d = %d\\n\", a, b, a * b ); printf( \"%d / %d = %d\\n\", a, b, a / b ); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-10 计算分段函数[1]（10 分）","slug":"liensi2-10","date":"2018-01-14T11:11:00.000Z","updated":"2018-03-27T16:10:40.376Z","comments":true,"path":"2018/01/14/liensi2-10/","link":"","permalink":"/2018/01/14/liensi2-10/","excerpt":"练习2-10 计算分段函数[1]（10 分）本题目要求计算下列分段函数f(x)的值： 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。 输入样例1:110 输出样例1:1f(10.0) = 0.1 输入样例2:10 输出样例2:1f(0.0) = 0.0","text":"练习2-10 计算分段函数[1]（10 分）本题目要求计算下列分段函数f(x)的值： 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。 输入样例1:110 输出样例1:1f(10.0) = 0.1 输入样例2:10 输出样例2:1f(0.0) = 0.0 12345678910111213#include&lt;stdio.h&gt; int main(void) &#123; float x,y; scanf(\"%f\",&amp;x); if(x != 0)&#123; y=1/x; &#125;else&#123; y=0; &#125; printf(\"f(%.1f) = %.1f\",x,y); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-4 温度转换（5 分）","slug":"liensi2-4","date":"2018-01-14T10:56:00.000Z","updated":"2018-03-27T16:09:12.935Z","comments":true,"path":"2018/01/14/liensi2-4/","link":"","permalink":"/2018/01/14/liensi2-4/","excerpt":"练习2-4 温度转换（5 分）本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：C=5×(F−32)/9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1fahr = 150, celsius = 计算所得摄氏温度的整数值","text":"练习2-4 温度转换（5 分）本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：C=5×(F−32)/9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1fahr = 150, celsius = 计算所得摄氏温度的整数值 123456789#include&lt;stdio.h&gt; int main(void) &#123; int celsius, fahr; fahr=150; celsius=5 * ( fahr - 32 ) / 9; printf(\"fahr = 150, celsius = %d\\n\", celsius); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-8 计算摄氏温度（10 分）","slug":"liensi2-8","date":"2018-01-14T10:56:00.000Z","updated":"2018-03-27T16:09:53.410Z","comments":true,"path":"2018/01/14/liensi2-8/","link":"","permalink":"/2018/01/14/liensi2-8/","excerpt":"练习2-8 计算摄氏温度（10 分）给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出一个华氏温度。 输出格式:在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 输入样例:1150 输出样例:1Celsius = 65","text":"练习2-8 计算摄氏温度（10 分）给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出一个华氏温度。 输出格式:在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 输入样例:1150 输出样例:1Celsius = 65 12345678910#include&lt;stdio.h&gt; int main(void) &#123; int celsius, fahr; while ( scanf( \"%d\", &amp;fahr ) != EOF ) &#123; celsius = 5 *( fahr - 32 )/ 9; printf(\"Celsius = %d\\n\", celsius); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-6 计算物体自由下落的距离（5 分）","slug":"liensi2-6","date":"2018-01-14T10:56:00.000Z","updated":"2018-03-27T16:09:35.511Z","comments":true,"path":"2018/01/14/liensi2-6/","link":"","permalink":"/2018/01/14/liensi2-6/","excerpt":"练习2-6 计算物体自由下落的距离（5 分）一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒2。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1height = 垂直距离值 结果保留2位小数。","text":"练习2-6 计算物体自由下落的距离（5 分）一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒2。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1height = 垂直距离值 结果保留2位小数。 1234567891011#include &lt;stdio.h&gt;#include &lt;math.h&gt;int main(void)&#123; int g = 10, t = 3; double height; height = g * pow( t, 2 ) / 2; printf( \"height = %.2f\\n\", height ); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-3 输出倒三角图案（5 分）","slug":"liensi2-3","date":"2018-01-14T10:52:00.000Z","updated":"2018-03-27T16:08:51.641Z","comments":true,"path":"2018/01/14/liensi2-3/","link":"","permalink":"/2018/01/14/liensi2-3/","excerpt":"练习2-3 输出倒三角图案（5 分）本题要求编写程序，输出指定的由“*”组成的倒三角图案。 输入格式:本题目没有输入。 输出格式:按照下列格式输出由“*”组成的倒三角图案。 1234* * * * * * * * * *","text":"练习2-3 输出倒三角图案（5 分）本题要求编写程序，输出指定的由“*”组成的倒三角图案。 输入格式:本题目没有输入。 输出格式:按照下列格式输出由“*”组成的倒三角图案。 1234* * * * * * * * * * 123456789#include&lt;stdio.h&gt; int main(void) &#123; printf(\"* * * *\\n\"); printf(\" * * *\\n\"); printf(\" * *\\n\"); printf(\" *\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"练习2-1 Programming in C is fun!（5 分）","slug":"liensi2-1","date":"2018-01-14T10:40:00.000Z","updated":"2018-03-27T16:08:15.169Z","comments":true,"path":"2018/01/14/liensi2-1/","link":"","permalink":"/2018/01/14/liensi2-1/","excerpt":"练习2-1 Programming in C is fun!（5 分）本题要求编写程序，输出一个短句“Programming in C is fun!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Programming in C is fun!”。","text":"练习2-1 Programming in C is fun!（5 分）本题要求编写程序，输出一个短句“Programming in C is fun!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Programming in C is fun!”。 123456#include&lt;stdio.h&gt;int main(void)&#123; printf(\"Programming in C is fun!\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"实验11-2-9 链表逆置（20 分）","slug":"shryen11-2-9","date":"2018-01-12T12:34:00.000Z","updated":"2018-03-27T16:06:16.244Z","comments":true,"path":"2018/01/12/shryen11-2-9/","link":"","permalink":"/2018/01/12/shryen11-2-9/","excerpt":"实验11-2-9 链表逆置（20 分）本题要求实现一个函数，将给定单向链表逆置，即表头置为表尾，表尾置为表头。链表结点定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 函数接口定义：1struct ListNode *reverse( struct ListNode *head ); 其中head是用户传入的链表的头指针；函数reverse将链表head逆置，并返回结果链表的头指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/struct ListNode *reverse( struct ListNode *head );void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *head; head = createlist(); head = reverse(head); printlist(head); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 3 4 5 6 -1 输出样例：16 5 4 3 2 1","text":"实验11-2-9 链表逆置（20 分）本题要求实现一个函数，将给定单向链表逆置，即表头置为表尾，表尾置为表头。链表结点定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 函数接口定义：1struct ListNode *reverse( struct ListNode *head ); 其中head是用户传入的链表的头指针；函数reverse将链表head逆置，并返回结果链表的头指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/struct ListNode *reverse( struct ListNode *head );void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *head; head = createlist(); head = reverse(head); printlist(head); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 3 4 5 6 -1 输出样例：16 5 4 3 2 1 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/struct ListNode *reverse( struct ListNode *head );void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *head; head = createlist(); head = reverse(head); printlist(head); return 0;&#125;struct ListNode *createlist()&#123; struct ListNode *p,*h,*q; p=q=(struct ListNode*)malloc(sizeof(struct ListNode)); h=(struct ListNode*)malloc(sizeof(struct ListNode)); int data; //存放数据 h=p; //h为头节点 scanf(\"%d\",&amp;data); while(data!=-1) &#123; p-&gt;data=data; //保存数据 q-&gt;next=p; //p指向下一个节点 q=p; p=(struct ListNode*)malloc(sizeof(struct ListNode)); scanf(\"%d\",&amp;data); &#125; q-&gt;next=NULL; //尾节点Next指向空 free(p); return h;&#125; struct ListNode *reverse( struct ListNode *head )&#123; struct ListNode *p,*q=NULL,*r=NULL; if(head==NULL) &#123; return NULL; &#125; if(head-&gt;next==NULL) &#123; return head; &#125; p=head; while(p!=NULL) &#123; q=p-&gt;next; p-&gt;next=r; r=p; p=q; &#125; return r;&#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-8 单链表结点删除（20 分）","slug":"shryen11-2-8","date":"2018-01-12T11:15:00.000Z","updated":"2018-03-27T16:05:48.281Z","comments":true,"path":"2018/01/12/shryen11-2-8/","link":"","permalink":"/2018/01/12/shryen11-2-8/","excerpt":"实验11-2-8 单链表结点删除（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中所有存储了某给定值的结点删除。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数deletem将单链表L中所有存储了m的结点删除。返回指向结果链表头结点的指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; int m; struct ListNode *L = readlist(); scanf(\"%d\", &amp;m); L = deletem(L, m); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1210 11 10 12 10 -110 输出样例：111 12","text":"实验11-2-8 单链表结点删除（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中所有存储了某给定值的结点删除。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数deletem将单链表L中所有存储了m的结点删除。返回指向结果链表头结点的指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; int m; struct ListNode *L = readlist(); scanf(\"%d\", &amp;m); L = deletem(L, m); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1210 11 10 12 10 -110 输出样例：111 12 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *deletem( struct ListNode *L, int m );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; int m; struct ListNode *L = readlist(); scanf(\"%d\", &amp;m); L = deletem(L, m); printlist(L); return 0;&#125;void PushBack(int X, struct ListNode **rear)&#123; struct ListNode *TmpCell; TmpCell = malloc(sizeof(struct ListNode)); TmpCell-&gt;data = X; TmpCell-&gt;next = NULL; (*rear)-&gt;next = TmpCell; *rear = TmpCell;&#125;struct ListNode *readlist()&#123; struct ListNode *TmpCell, *head, *tail; int data; head = tail = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; scanf(\"%d\", &amp;data); while (data != -1) &#123; PushBack(data, &amp;tail); scanf(\"%d\", &amp;data); &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;struct ListNode *deletem(struct ListNode *L, int m)&#123; struct ListNode *head, *p, *TmpCell; p = head = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; p-&gt;next = L; while (p-&gt;next != NULL) &#123; if (p-&gt;next-&gt;data == m) &#123; TmpCell = p-&gt;next; p-&gt;next = TmpCell-&gt;next; free(TmpCell); &#125; else p = p-&gt;next; &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-7 统计专业人数（15 分）","slug":"shryen11-2-7","date":"2018-01-12T11:00:00.000Z","updated":"2018-03-27T16:05:21.431Z","comments":true,"path":"2018/01/12/shryen11-2-7/","link":"","permalink":"/2018/01/12/shryen11-2-7/","excerpt":"实验11-2-7 统计专业人数（15 分）本题要求实现一个函数，统计学生学号链表中专业为计算机的学生人数。链表结点定义如下： 1234struct ListNode &#123; char code[8]; struct ListNode *next;&#125;; 这里学生的学号共7位数字，其中第2、3位是专业编号。计算机专业的编号为02。 函数接口定义：1int countcs( struct ListNode *head ); 其中head是用户传入的学生学号链表的头指针；函数countcs统计并返回head链表中专业为计算机的学生人数。 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;struct ListNode &#123; char code[8]; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/int countcs( struct ListNode *head );int main()&#123; struct ListNode *head; head = createlist(); printf(\"%d\\n\", countcs(head)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1234567102120220223108102134103091231102034021205# 输出样例：13","text":"实验11-2-7 统计专业人数（15 分）本题要求实现一个函数，统计学生学号链表中专业为计算机的学生人数。链表结点定义如下： 1234struct ListNode &#123; char code[8]; struct ListNode *next;&#125;; 这里学生的学号共7位数字，其中第2、3位是专业编号。计算机专业的编号为02。 函数接口定义：1int countcs( struct ListNode *head ); 其中head是用户传入的学生学号链表的头指针；函数countcs统计并返回head链表中专业为计算机的学生人数。 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;struct ListNode &#123; char code[8]; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/int countcs( struct ListNode *head );int main()&#123; struct ListNode *head; head = createlist(); printf(\"%d\\n\", countcs(head)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1234567102120220223108102134103091231102034021205# 输出样例：13 1234567891011int countcs(struct ListNode *head)&#123; int i=0; while(head!=NULL) &#123; if(head-&gt;code[1]=='0' &amp;&amp; head-&gt;code[2]=='2') i++; head=head-&gt;next; &#125; return i;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-6 奇数值结点链表（20 分）","slug":"shryen11-2-6","date":"2018-01-12T10:54:00.000Z","updated":"2018-03-27T16:04:54.764Z","comments":true,"path":"2018/01/12/shryen11-2-6/","link":"","permalink":"/2018/01/12/shryen11-2-6/","excerpt":"实验11-2-6 奇数值结点链表（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中奇数值的结点重新组成一个新的链表。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数getodd将单链表L中奇数值的结点分离出来，重新组成一个新的链表。返回指向新链表头结点的指针，同时将L中存储的地址改为删除了奇数值结点后的链表的头结点地址（所以要传入L的指针）。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *L, *Odd; L = readlist(); Odd = getodd(&amp;L); printlist(Odd); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 2 3 4 5 6 7 -1 输出样例：121 3 5 7 2 2 4 6","text":"实验11-2-6 奇数值结点链表（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中奇数值的结点重新组成一个新的链表。链表结点定义如下： 1234struct ListNode &#123; int data; ListNode *next;&#125;; 函数接口定义：12struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L ); 函数readlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数getodd将单链表L中奇数值的结点分离出来，重新组成一个新的链表。返回指向新链表头结点的指针，同时将L中存储的地址改为删除了奇数值结点后的链表的头结点地址（所以要传入L的指针）。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *L, *Odd; L = readlist(); Odd = getodd(&amp;L); printlist(Odd); printlist(L); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 2 3 4 5 6 7 -1 输出样例：121 3 5 7 2 2 4 6 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *readlist();struct ListNode *getodd( struct ListNode **L );void printlist( struct ListNode *L )&#123; struct ListNode *p = L; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *L, *Odd; L = readlist(); Odd = getodd(&amp;L); printlist(Odd); printlist(L); return 0;&#125;void PushBack(int X, struct ListNode **rear)&#123; struct ListNode *TmpCell; TmpCell = malloc(sizeof(struct ListNode)); TmpCell-&gt;data = X; TmpCell-&gt;next = NULL; (*rear)-&gt;next = TmpCell; *rear = TmpCell;&#125;struct ListNode *readlist()&#123; struct ListNode *TmpCell, *head, *tail; int data; head = tail = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; scanf(\"%d\", &amp;data); while (data != -1) &#123; PushBack(data, &amp;tail); scanf(\"%d\", &amp;data); &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); return head;&#125;struct ListNode *getodd(struct ListNode **L)&#123; struct ListNode *head, *p, *oddhead, *oddtail, *TmpCell; p = head = malloc(sizeof(struct ListNode)); head-&gt;next = NULL; oddhead = oddtail = malloc(sizeof(struct ListNode)); oddhead-&gt;next = NULL; p-&gt;next = *L; while (p-&gt;next != NULL) &#123; if (p-&gt;next-&gt;data % 2 != 0) &#123; PushBack(p-&gt;next-&gt;data, &amp;oddtail); TmpCell = p-&gt;next; p-&gt;next = TmpCell-&gt;next; free(TmpCell); &#125; else p = p-&gt;next; &#125; TmpCell = head; head = head-&gt;next; free(TmpCell); *L = head; TmpCell = oddhead; oddhead = oddhead-&gt;next; free(TmpCell); return oddhead;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-5 链表拼接（20 分）","slug":"shryen11-2-5","date":"2018-01-12T10:44:00.000Z","updated":"2018-03-27T16:04:25.535Z","comments":true,"path":"2018/01/12/shryen11-2-5/","link":"","permalink":"/2018/01/12/shryen11-2-5/","excerpt":"实验11-2-5 链表拼接（20 分）本题要求实现一个合并两个有序链表的简单函数。链表结点定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 函数接口定义：1struct ListNode *mergelists(struct ListNode *list1, struct ListNode *list2); 其中list1和list2是用户传入的两个按data升序链接的链表的头指针；函数mergelists将两个链表合并成一个按data升序链接的链表，并返回结果链表的头指针。 裁判测试程序样例：123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/struct ListNode *mergelists(struct ListNode *list1, struct ListNode *list2);void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *list1, *list2; list1 = createlist(); list2 = createlist(); list1 = mergelists(list1, list2); printlist(list1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：121 3 5 7 -12 4 6 -1 输出样例：11 2 3 4 5 6 7","text":"实验11-2-5 链表拼接（20 分）本题要求实现一个合并两个有序链表的简单函数。链表结点定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 函数接口定义：1struct ListNode *mergelists(struct ListNode *list1, struct ListNode *list2); 其中list1和list2是用户传入的两个按data升序链接的链表的头指针；函数mergelists将两个链表合并成一个按data升序链接的链表，并返回结果链表的头指针。 裁判测试程序样例：123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/struct ListNode *mergelists(struct ListNode *list1, struct ListNode *list2);void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *list1, *list2; list1 = createlist(); list2 = createlist(); list1 = mergelists(list1, list2); printlist(list1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：121 3 5 7 -12 4 6 -1 输出样例：11 2 3 4 5 6 7 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist(); /*裁判实现，细节不表*/struct ListNode *mergelists(struct ListNode *list1, struct ListNode *list2);void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *list1, *list2; list1 = createlist(); list2 = createlist(); list1 = mergelists(list1, list2); printlist(list1); return 0;&#125;struct ListNode *createlist()&#123; struct ListNode *p,*h,*q; p=q=(struct ListNode*)malloc(sizeof(struct ListNode)); h=(struct ListNode*)malloc(sizeof(struct ListNode)); int data; //存放数据 h=p; //h为头节点 scanf(\"%d\",&amp;data); while(data!=-1) &#123; p-&gt;data=data; //保存数据 q-&gt;next=p; //p指向下一个节点 q=p; p=(struct ListNode*)malloc(sizeof(struct ListNode)); scanf(\"%d\",&amp;data); &#125; q-&gt;next=NULL; //尾节点Next指向空 free(p); return h;&#125;struct ListNode *mergelists(struct ListNode *list1, struct ListNode *list2)&#123; int num = 0; int temp[100]; struct ListNode *p = list1; while(p != NULL) &#123; temp[num] = p-&gt;data; num++; p = p-&gt;next; &#125; p = list2; while(p != NULL) &#123; temp[num] = p-&gt;data; num++; p = p-&gt;next; &#125; int i,j; for(i = 0; i &lt; num; i++) for(j = i + 1; j &lt; num; j++) &#123; if(temp[i] &gt; temp[j]) &#123; int t; t = temp[i]; temp[i] = temp[j]; temp[j] = t; &#125; &#125; struct ListNode *newlist = NULL; struct ListNode *endlist = NULL; struct ListNode *q; for(i = 0; i &lt; num; i++) &#123; q = (struct ListNode *)malloc(sizeof(struct ListNode)); q-&gt;data = temp[i]; if(newlist == NULL) &#123; newlist = q; newlist-&gt;next = NULL; &#125; if(endlist != NULL) &#123; endlist-&gt;next = q; &#125; endlist = q; endlist-&gt;next = NULL; &#125; return newlist;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-4 删除单链表偶数节点（20 分）","slug":"shryen11-2-4","date":"2018-01-12T10:29:00.000Z","updated":"2018-03-27T16:03:56.268Z","comments":true,"path":"2018/01/12/shryen11-2-4/","link":"","permalink":"/2018/01/12/shryen11-2-4/","excerpt":"实验11-2-4 删除单链表偶数节点（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中偶数值的结点删除。链表结点定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 函数接口定义：12struct ListNode *createlist();struct ListNode *deleteeven( struct ListNode *head ); 函数createlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数deleteeven将单链表head中偶数值的结点删除，返回结果链表的头指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist();struct ListNode *deleteeven( struct ListNode *head );void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *head; head = createlist(); head = deleteeven(head); printlist(head); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 2 3 4 5 6 7 -1 输出样例：11 3 5 7","text":"实验11-2-4 删除单链表偶数节点（20 分）本题要求实现两个函数，分别将读入的数据存储为单链表、将链表中偶数值的结点删除。链表结点定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 函数接口定义：12struct ListNode *createlist();struct ListNode *deleteeven( struct ListNode *head ); 函数createlist从标准输入读入一系列正整数，按照读入顺序建立单链表。当读到−1时表示输入结束，函数应返回指向单链表头结点的指针。 函数deleteeven将单链表head中偶数值的结点删除，返回结果链表的头指针。 裁判测试程序样例：1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist();struct ListNode *deleteeven( struct ListNode *head );void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *head; head = createlist(); head = deleteeven(head); printlist(head); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 2 3 4 5 6 7 -1 输出样例：11 3 5 7 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist();struct ListNode *deleteeven( struct ListNode *head );void printlist( struct ListNode *head )&#123; struct ListNode *p = head; while (p) &#123; printf(\"%d \", p-&gt;data); p = p-&gt;next; &#125; printf(\"\\n\");&#125;int main()&#123; struct ListNode *head; head = createlist(); head = deleteeven(head); printlist(head); return 0;&#125;struct ListNode *createlist()&#123; struct ListNode *p,*h,*q; p=q=(struct ListNode*)malloc(sizeof(struct ListNode)); h=(struct ListNode*)malloc(sizeof(struct ListNode)); int data; //存放数据 h=p; //h为头节点 scanf(\"%d\",&amp;data); while(data!=-1) &#123; p-&gt;data=data; //保存数据 q-&gt;next=p; //p指向下一个节点 q=p; p=(struct ListNode*)malloc(sizeof(struct ListNode)); scanf(\"%d\",&amp;data); &#125; q-&gt;next=NULL; //尾节点Next指向空 free(p); return h;&#125;struct ListNode *deleteeven( struct ListNode *head )&#123; struct ListNode *p,*q; p=q=(struct ListNode*)malloc(sizeof(struct ListNode)); p=head; q-&gt;next=p; while(p!=NULL) &#123; if(!(p-&gt;data%2)) //能被二整除的为偶数 &#123; if(p==head) //如果p是第一个节点就删除头节点，保留头指向的下一个节点作为头 &#123; head=head-&gt;next; p=head; q-&gt;next=p; continue; &#125; q-&gt;next=p-&gt;next; //直接跳过偶数节点 &#125; else //缺少else会导致重复偶数删除不了 q=p; p=p-&gt;next; &#125; free(p); return head;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-3 逆序数据建立链表（20 分）","slug":"shryen11-2-3","date":"2018-01-12T10:22:00.000Z","updated":"2018-03-27T16:03:32.112Z","comments":true,"path":"2018/01/12/shryen11-2-3/","link":"","permalink":"/2018/01/12/shryen11-2-3/","excerpt":"实验11-2-3 逆序数据建立链表（20 分）本题要求实现一个函数，按输入数据的逆序建立一个链表。 函数接口定义：1struct ListNode *createlist(); 函数createlist利用scanf从输入中获取一系列正整数，当读到−1时表示输入结束。按输入数据的逆序建立一个链表，并返回链表头指针。链表节点结构定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist();int main()&#123; struct ListNode *p, *head = NULL; head = createlist(); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d \", p-&gt;data); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 3 4 5 6 7 -1 输出样例：17 6 5 4 3 2 1","text":"实验11-2-3 逆序数据建立链表（20 分）本题要求实现一个函数，按输入数据的逆序建立一个链表。 函数接口定义：1struct ListNode *createlist(); 函数createlist利用scanf从输入中获取一系列正整数，当读到−1时表示输入结束。按输入数据的逆序建立一个链表，并返回链表头指针。链表节点结构定义如下： 1234struct ListNode &#123; int data; struct ListNode *next;&#125;; 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist();int main()&#123; struct ListNode *p, *head = NULL; head = createlist(); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d \", p-&gt;data); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：11 2 3 4 5 6 7 -1 输出样例：17 6 5 4 3 2 1 123456789101112131415161718192021222324252627282930313233343536#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct ListNode &#123; int data; struct ListNode *next;&#125;;struct ListNode *createlist();int main()&#123; struct ListNode *p, *head = NULL; head = createlist(); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d \", p-&gt;data); printf(\"\\n\"); return 0;&#125;struct ListNode *createlist()&#123; struct ListNode *head = NULL, *now = NULL; int a; while (1) &#123; scanf(\"%d\", &amp;a); if (a == -1)return head; now = (struct ListNode*)malloc(sizeof(struct ListNode)); now-&gt;data = a; now-&gt;next = head; head = now; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-2 学生成绩链表处理（20 分）","slug":"shryen11-2-2","date":"2018-01-12T10:17:00.000Z","updated":"2018-03-27T16:03:09.316Z","comments":true,"path":"2018/01/12/shryen11-2-2/","link":"","permalink":"/2018/01/12/shryen11-2-2/","excerpt":"实验11-2-2 学生成绩链表处理（20 分）本题要求实现两个函数，一个将输入的学生成绩组织成单向链表；另一个将成绩低于某分数线的学生结点从链表中删除。 函数接口定义：12struct stud_node *createlist();struct stud_node *deletelist( struct stud_node *head, int min_score ); 函数createlist利用scanf从输入中获取学生的信息，将其组织成单向链表，并返回链表头指针。链表节点结构定义如下： 123456struct stud_node &#123; int num; /*学号*/ char name[20]; /*姓名*/ int score; /*成绩*/ struct stud_node *next; /*指向下个结点的指针*/&#125;; 输入为若干个学生的信息（学号、姓名、成绩），当输入学号为0时结束。 函数deletelist从以head为头指针的链表中删除成绩低于min_score的学生，并返回结果链表的头指针。 裁判测试程序样例：12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct stud_node &#123; int num; char name[20]; int score; struct stud_node *next;&#125;;struct stud_node *createlist();struct stud_node *deletelist( struct stud_node *head, int min_score );int main()&#123; int min_score; struct stud_node *p, *head = NULL; head = createlist(); scanf(\"%d\", &amp;min_score); head = deletelist(head, min_score); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d %s %d\\n\", p-&gt;num, p-&gt;name, p-&gt;score); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1234561 zhang 782 wang 803 li 754 zhao 85080 输出样例：122 wang 804 zhao 85","text":"实验11-2-2 学生成绩链表处理（20 分）本题要求实现两个函数，一个将输入的学生成绩组织成单向链表；另一个将成绩低于某分数线的学生结点从链表中删除。 函数接口定义：12struct stud_node *createlist();struct stud_node *deletelist( struct stud_node *head, int min_score ); 函数createlist利用scanf从输入中获取学生的信息，将其组织成单向链表，并返回链表头指针。链表节点结构定义如下： 123456struct stud_node &#123; int num; /*学号*/ char name[20]; /*姓名*/ int score; /*成绩*/ struct stud_node *next; /*指向下个结点的指针*/&#125;; 输入为若干个学生的信息（学号、姓名、成绩），当输入学号为0时结束。 函数deletelist从以head为头指针的链表中删除成绩低于min_score的学生，并返回结果链表的头指针。 裁判测试程序样例：12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct stud_node &#123; int num; char name[20]; int score; struct stud_node *next;&#125;;struct stud_node *createlist();struct stud_node *deletelist( struct stud_node *head, int min_score );int main()&#123; int min_score; struct stud_node *p, *head = NULL; head = createlist(); scanf(\"%d\", &amp;min_score); head = deletelist(head, min_score); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d %s %d\\n\", p-&gt;num, p-&gt;name, p-&gt;score); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1234561 zhang 782 wang 803 li 754 zhao 85080 输出样例：122 wang 804 zhao 85 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;struct stud_node &#123; int num; char name[20]; int score; struct stud_node *next;&#125;;struct stud_node *createlist();struct stud_node *deletelist( struct stud_node *head, int min_score );int main()&#123; int min_score; struct stud_node *p, *head = NULL; head = createlist(); scanf(\"%d\", &amp;min_score); head = deletelist(head, min_score); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d %s %d\\n\", p-&gt;num, p-&gt;name, p-&gt;score); return 0;&#125;struct stud_node *createlist()&#123; struct stud_node *head, *tail, *q; head = tail = NULL; int num; scanf (\"%d\", &amp;num); while (num != 0) &#123; q = (struct stud_node *)malloc (sizeof (struct stud_node)); scanf (\"%s %d\", q-&gt;name, &amp;q-&gt;score); q-&gt;num = num; q-&gt;next = NULL; if (head == NULL) head = q; else tail-&gt;next = q; tail = q; scanf (\"%d\", &amp;num); &#125; return head;&#125;struct stud_node *deletelist( struct stud_node *head, int min_score )&#123; struct stud_node *ptr1, *ptr2; while (head != NULL &amp;&amp; head-&gt;score &lt; min_score) &#123; ptr2 = head; head = head-&gt;next; free(ptr2); &#125; if (head == NULL) return NULL; ptr1 = head; ptr2 = head-&gt;next; while (ptr2 != NULL) &#123; if (ptr2-&gt;score &lt; min_score) &#123; ptr1-&gt;next = ptr2-&gt;next; free(ptr2); &#125; else ptr1 = ptr2; ptr2 = ptr1-&gt;next; &#125; return head;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-2-1 建立学生信息链表（20 分）","slug":"shryen11-2-1","date":"2018-01-12T10:09:00.000Z","updated":"2018-03-27T16:02:43.454Z","comments":true,"path":"2018/01/12/shryen11-2-1/","link":"","permalink":"/2018/01/12/shryen11-2-1/","excerpt":"实验11-2-1 建立学生信息链表（20 分）本题要求实现一个将输入的学生成绩组织成单向链表的简单函数。 函数接口定义：1void input(); 该函数利用scanf从输入中获取学生的信息，并将其组织成单向链表。链表节点结构定义如下： 123456struct stud_node &#123; int num; /*学号*/ char name[20]; /*姓名*/ int score; /*成绩*/ struct stud_node *next; /*指向下个结点的指针*/&#125;; 单向链表的头尾指针保存在全局变量head和tail中。 输入为若干个学生的信息（学号、姓名、成绩），当输入学号为0时结束。 裁判测试程序样例：123456789101112131415161718192021222324252627#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;struct stud_node &#123; int num; char name[20]; int score; struct stud_node *next;&#125;;struct stud_node *head, *tail;void input();int main()&#123; struct stud_node *p; head = tail = NULL; input(); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d %s %d\\n\", p-&gt;num, p-&gt;name, p-&gt;score); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：123451 zhang 782 wang 803 li 754 zhao 850 输出样例：12341 zhang 782 wang 803 li 754 zhao 85","text":"实验11-2-1 建立学生信息链表（20 分）本题要求实现一个将输入的学生成绩组织成单向链表的简单函数。 函数接口定义：1void input(); 该函数利用scanf从输入中获取学生的信息，并将其组织成单向链表。链表节点结构定义如下： 123456struct stud_node &#123; int num; /*学号*/ char name[20]; /*姓名*/ int score; /*成绩*/ struct stud_node *next; /*指向下个结点的指针*/&#125;; 单向链表的头尾指针保存在全局变量head和tail中。 输入为若干个学生的信息（学号、姓名、成绩），当输入学号为0时结束。 裁判测试程序样例：123456789101112131415161718192021222324252627#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;struct stud_node &#123; int num; char name[20]; int score; struct stud_node *next;&#125;;struct stud_node *head, *tail;void input();int main()&#123; struct stud_node *p; head = tail = NULL; input(); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d %s %d\\n\", p-&gt;num, p-&gt;name, p-&gt;score); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：123451 zhang 782 wang 803 li 754 zhao 850 输出样例：12341 zhang 782 wang 803 li 754 zhao 85 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;struct stud_node &#123; int num; char name[20]; int score; struct stud_node *next;&#125;;struct stud_node *head, *tail;void input();int main()&#123; struct stud_node *p; head = tail = NULL; input(); for ( p = head; p != NULL; p = p-&gt;next ) printf(\"%d %s %d\\n\", p-&gt;num, p-&gt;name, p-&gt;score); return 0;&#125;void input()&#123; struct stud_node *q; q=(struct stud_node *)malloc(sizeof(struct stud_node)); scanf(\"%d\", &amp;q-&gt;num); while(q-&gt;num != 0) &#123; scanf(\"%s %d\", q-&gt;name, &amp;q-&gt;score); if(head == NULL) &#123; head = q; head-&gt;next = NULL; &#125; if(tail != NULL) &#123; tail-&gt;next = q; &#125; tail = q; tail-&gt;next = NULL; q=(struct stud_node *)malloc(sizeof(struct stud_node)); scanf(\"%d\", &amp;q-&gt;num); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-9 藏尾诗（20 分）","slug":"shryen11-1-9","date":"2018-01-11T10:53:00.000Z","updated":"2018-03-27T16:01:40.467Z","comments":true,"path":"2018/01/11/shryen11-1-9/","link":"","permalink":"/2018/01/11/shryen11-1-9/","excerpt":"实验11-1-9 藏尾诗（20 分）本题要求编写一个解密藏尾诗的程序。 输入格式：输入为一首中文藏尾诗，一共四句。每句一行，但句子不一定是等长的，最短一个汉字，最长九个汉字。注意：一个汉字占两个字节。 输出格式：取出每句的最后一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。 输入样例：1234悠悠田园风然而心难平兰花轻涌浪兰香愈幽静 输出样例：1风平浪静","text":"实验11-1-9 藏尾诗（20 分）本题要求编写一个解密藏尾诗的程序。 输入格式：输入为一首中文藏尾诗，一共四句。每句一行，但句子不一定是等长的，最短一个汉字，最长九个汉字。注意：一个汉字占两个字节。 输出格式：取出每句的最后一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。 输入样例：1234悠悠田园风然而心难平兰花轻涌浪兰香愈幽静 输出样例：1风平浪静 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include \"math.h\"#include \"string.h\"int main()&#123; char *p[4],str[20]; int i; for(i=0;i&lt;=3;i++)&#123; gets(str); p[i]=(char *)malloc(sizeof(str)+1); strcpy(p[i],str); &#125; int n; for(i=0;i&lt;=3;i++)&#123; n=strlen(p[i]); printf(\"%s\",p[i]+n-2); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-8 查找子串（20 分）","slug":"shryen11-1-8","date":"2018-01-11T10:48:00.000Z","updated":"2018-03-27T16:01:13.401Z","comments":true,"path":"2018/01/11/shryen11-1-8/","link":"","permalink":"/2018/01/11/shryen11-1-8/","excerpt":"实验11-1-8 查找子串（20 分）本题要求实现一个字符串查找的简单函数。 函数接口定义：1char *search( char *s, char *t ); 函数search在字符串s中查找子串t，返回子串t在s中的首地址。若未找到，则返回NULL。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#define MAXS 30char *search(char *s, char *t);void ReadString( char s[] ); /* 裁判提供，细节不表 */int main()&#123; char s[MAXS], t[MAXS], *pos; ReadString(s); ReadString(t); pos = search(s, t); if ( pos != NULL ) printf(\"%d\\n\", pos - s); else printf(\"-1\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12The C Programming Languageram 输出样例1：110 输入样例2：12The C Programming Languagebored 输出样例2：1-1","text":"实验11-1-8 查找子串（20 分）本题要求实现一个字符串查找的简单函数。 函数接口定义：1char *search( char *s, char *t ); 函数search在字符串s中查找子串t，返回子串t在s中的首地址。若未找到，则返回NULL。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#define MAXS 30char *search(char *s, char *t);void ReadString( char s[] ); /* 裁判提供，细节不表 */int main()&#123; char s[MAXS], t[MAXS], *pos; ReadString(s); ReadString(t); pos = search(s, t); if ( pos != NULL ) printf(\"%d\\n\", pos - s); else printf(\"-1\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12The C Programming Languageram 输出样例1：110 输入样例2：12The C Programming Languagebored 输出样例2：1-1 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;stdio.h&gt;#define MAXS 30char *search(char *s, char *t);void ReadString( char s[] ); /* 裁判提供，细节不表 */int main()&#123; char s[MAXS], t[MAXS], *pos; ReadString(s); ReadString(t); pos = search(s, t); if ( pos != NULL ) printf(\"%d\\n\", pos - s); else printf(\"-1\\n\"); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;char *search(char *s, char *t)&#123; int i, j, sLen, tLen; for (i=0; s[i]!='\\0'; i++); sLen=i; for (j=0; t[j]!='\\0'; j++); tLen=j; i=j=0; while (i &lt; sLen &amp;&amp; j &lt; tLen) &#123; if (s[i] == t[j]) &#123; i++; j++; &#125; else &#123; i = i - j + 1; j = 0; &#125; &#125; if (j == tLen) return &amp;s[i - j]; else return NULL;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-7 藏头诗（15 分）","slug":"shryen11-1-7","date":"2018-01-11T10:41:00.000Z","updated":"2018-03-27T16:00:47.545Z","comments":true,"path":"2018/01/11/shryen11-1-7/","link":"","permalink":"/2018/01/11/shryen11-1-7/","excerpt":"实验11-1-7 藏头诗（15 分）本题要求编写一个解密藏头诗的程序。 输入格式：输入为一首中文藏头诗，一共四句，每句一行。注意：一个汉字占两个字节。 输出格式：取出每句的第一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。 输入样例：1234一叶轻舟向东流帆稍轻握杨柳手风纤碧波微起舞顺水任从雅客流 输出样例：1一帆风顺","text":"实验11-1-7 藏头诗（15 分）本题要求编写一个解密藏头诗的程序。 输入格式：输入为一首中文藏头诗，一共四句，每句一行。注意：一个汉字占两个字节。 输出格式：取出每句的第一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。 输入样例：1234一叶轻舟向东流帆稍轻握杨柳手风纤碧波微起舞顺水任从雅客流 输出样例：1一帆风顺 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;char *ch( char s[][2000],char t[]);int main()&#123; char s[100][2000], t[1000],*p=NULL; int i; for(i=0;i&lt;4;i++) scanf(\"%s\",&amp;s[i][2000]); p=ch(s,t); printf(\"%s\\n\",p); return 0;&#125;char *ch(char s[][2000], char t[])&#123; int j; for (j=0; j&lt;4;j++) &#123; t[2*j]=s[j+1][0]; t[2*j+1]=s[j+1][1]; &#125; t[2*j]='\\0'; return t;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-6 指定位置输出字符串（20 分）","slug":"shryen11-1-6","date":"2018-01-11T10:36:00.000Z","updated":"2018-03-27T16:00:22.176Z","comments":true,"path":"2018/01/11/shryen11-1-6/","link":"","permalink":"/2018/01/11/shryen11-1-6/","excerpt":"实验11-1-6 指定位置输出字符串（20 分）本题要求实现一个函数，对给定的一个字符串和两个字符，打印出给定字符串中从与第一个字符匹配的位置开始到与第二个字符匹配的位置之间的所有字符。 函数接口定义：1char *match( char *s, char ch1, char ch2 ); 函数match应打印s中从ch1到ch2之间的所有字符，并且返回ch1的地址。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXS 10char *match( char *s, char ch1, char ch2 );int main()&#123; char str[MAXS], ch_start, ch_end, *p; scanf(\"%s\\n\", str); scanf(\"%c %c\", &amp;ch_start, &amp;ch_end); p = match(str, ch_start, ch_end); printf(\"%s\\n\", p); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12programr g 输出样例1：12rogrogram 输入样例2：12programz o 输出样例2：12(空行)(空行) 输入样例3：12programg z 输出样例3：12gramgram","text":"实验11-1-6 指定位置输出字符串（20 分）本题要求实现一个函数，对给定的一个字符串和两个字符，打印出给定字符串中从与第一个字符匹配的位置开始到与第二个字符匹配的位置之间的所有字符。 函数接口定义：1char *match( char *s, char ch1, char ch2 ); 函数match应打印s中从ch1到ch2之间的所有字符，并且返回ch1的地址。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXS 10char *match( char *s, char ch1, char ch2 );int main()&#123; char str[MAXS], ch_start, ch_end, *p; scanf(\"%s\\n\", str); scanf(\"%c %c\", &amp;ch_start, &amp;ch_end); p = match(str, ch_start, ch_end); printf(\"%s\\n\", p); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12programr g 输出样例1：12rogrogram 输入样例2：12programz o 输出样例2：12(空行)(空行) 输入样例3：12programg z 输出样例3：12gramgram 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;stdio.h&gt;#define MAXS 10char *match( char *s, char ch1, char ch2 );int main()&#123; char str[MAXS], ch_start, ch_end, *p; scanf(\"%s\\n\", str); scanf(\"%c %c\", &amp;ch_start, &amp;ch_end); p = match(str, ch_start, ch_end); printf(\"%s\\n\", p); return 0;&#125;char *match(char *s, char ch1, char ch2)&#123; int i, ch1index, ch2index, flag; char *p, ch = '\\0'; flag = 0; ch1index = ch2index = 0; for (i=0; s[i] != '\\0'; i++) &#123; if (s[i] == ch1) &#123; ch1index = i; flag = 1; break; &#125; &#125; if (!flag) &#123; printf(\"\\n\"); p = &amp;ch; return p; &#125; for (; s[i] != '\\0'; i++) &#123; if (s[i] == ch2) &#123; ch2index = i; flag = 0; break; &#125; &#125; for (i=ch1index; i&lt;=ch2index; i++) printf(\"%c\", s[i]); if(flag) &#123; for (i=ch1index; s[i] != '\\0'; i++) printf(\"%c\", s[i]); &#125; printf(\"\\n\"); p = &amp;s[ch1index]; return p;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-5 字符串的连接（15 分）","slug":"shryen11-1-5","date":"2018-01-11T10:30:00.000Z","updated":"2018-03-27T15:59:45.870Z","comments":true,"path":"2018/01/11/shryen11-1-5/","link":"","permalink":"/2018/01/11/shryen11-1-5/","excerpt":"实验11-1-5 字符串的连接（15 分）本题要求实现一个函数，将两个字符串连接起来。 函数接口定义：1char *str_cat( char *s, char *t ); 函数str_cat应将字符串t复制到字符串s的末端，并且返回字符串s的首地址。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12abcdef 输出样例：12abcdefabcdef","text":"实验11-1-5 字符串的连接（15 分）本题要求实现一个函数，将两个字符串连接起来。 函数接口定义：1char *str_cat( char *s, char *t ); 函数str_cat应将字符串t复制到字符串s的末端，并且返回字符串s的首地址。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12abcdef 输出样例：12abcdefabcdef 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;char *str_cat( char *s, char *t )&#123; char *p; p=strcat(s,t); return p;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-4 计算最长的字符串长度（15 分）","slug":"shryen11-1-4","date":"2018-01-11T10:27:00.000Z","updated":"2018-03-27T15:56:25.358Z","comments":true,"path":"2018/01/11/shryen11-1-4/","link":"","permalink":"/2018/01/11/shryen11-1-4/","excerpt":"实验11-1-4 计算最长的字符串长度（15 分）本题要求实现一个函数，用于计算有n个元素的指针数组s中最长的字符串的长度。 函数接口定义：1int max_len( char *s[], int n ); 其中n个字符串存储在s[]中，函数max_len应返回其中最长字符串的长度。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAXN 10#define MAXS 20int max_len( char *s[], int n );int main()&#123; int i, n; char *string[MAXN] = &#123;NULL&#125;; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) &#123; string[i] = (char *)malloc(sizeof(char)*MAXS); scanf(\"%s\", string[i]); &#125; printf(\"%d\\n\", max_len(string, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：123454blueyellowredgreen 输出样例：16","text":"实验11-1-4 计算最长的字符串长度（15 分）本题要求实现一个函数，用于计算有n个元素的指针数组s中最长的字符串的长度。 函数接口定义：1int max_len( char *s[], int n ); 其中n个字符串存储在s[]中，函数max_len应返回其中最长字符串的长度。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAXN 10#define MAXS 20int max_len( char *s[], int n );int main()&#123; int i, n; char *string[MAXN] = &#123;NULL&#125;; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) &#123; string[i] = (char *)malloc(sizeof(char)*MAXS); scanf(\"%s\", string[i]); &#125; printf(\"%d\\n\", max_len(string, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：123454blueyellowredgreen 输出样例：16 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define MAXN 10#define MAXS 20int max_len( char *s[], int n );int main()&#123; int i, n; char *string[MAXN] = &#123;NULL&#125;; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) &#123; string[i] = (char *)malloc(sizeof(char)*MAXS); scanf(\"%s\", string[i]); &#125; printf(\"%d\\n\", max_len(string, n)); return 0;&#125;int max_len(char *s[], int n)&#123; int m=0,i,l; for (i=0; i&lt;n; i++) &#123; l=strlen(s[i]); if(m&lt;l) m=l; &#125; return m;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-3 查找星期（15 分）","slug":"shryen11-1-3","date":"2018-01-11T10:19:00.000Z","updated":"2018-03-27T15:55:17.871Z","comments":true,"path":"2018/01/11/shryen11-1-3/","link":"","permalink":"/2018/01/11/shryen11-1-3/","excerpt":"实验11-1-3 查找星期（15 分）本题要求实现函数，可以根据下表查找到星期，返回对应的序号。 序号 星期 0 Sunday 1 Monday 2 Tuesday 3 Wednesday 4 Thursday 5 Friday 6 Saturday 函数接口定义：1int getindex( char *s ); 函数getindex应返回字符串s序号。如果传入的参数s不是一个代表星期的字符串，则返回-1。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 80int getindex( char *s );int main()&#123; int n; char s[MAXS]; scanf(\"%s\", s); n = getindex(s); if ( n==-1 ) printf(\"wrong input!\\n\"); else printf(\"%d\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1Tuesday 输出样例1：12 输入样例2：1today 输出样例2：1wrong input!","text":"实验11-1-3 查找星期（15 分）本题要求实现函数，可以根据下表查找到星期，返回对应的序号。 序号 星期 0 Sunday 1 Monday 2 Tuesday 3 Wednesday 4 Thursday 5 Friday 6 Saturday 函数接口定义：1int getindex( char *s ); 函数getindex应返回字符串s序号。如果传入的参数s不是一个代表星期的字符串，则返回-1。 裁判测试程序样例：123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 80int getindex( char *s );int main()&#123; int n; char s[MAXS]; scanf(\"%s\", s); n = getindex(s); if ( n==-1 ) printf(\"wrong input!\\n\"); else printf(\"%d\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1Tuesday 输出样例1：12 输入样例2：1today 输出样例2：1wrong input! 1234567891011121314151617181920212223242526272829303132333435#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 80int getindex( char *s );int main()&#123; int n; char s[MAXS]; scanf(\"%s\", s); n = getindex(s); if ( n==-1 ) printf(\"wrong input!\\n\"); else printf(\"%d\\n\", n); return 0;&#125;int getindex(char *s)&#123; char a[7][MAXS] = &#123;\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"&#125;; int i; for (i=0; i&lt;7; i++) &#123; if (strcmp(a[i],s) == 0) &#123; return i; &#125; &#125; if(i=7) return -1;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-2 输出月份英文名（15 分）","slug":"shryen11-1-2","date":"2018-01-11T10:12:00.000Z","updated":"2018-03-27T15:54:42.886Z","comments":true,"path":"2018/01/11/shryen11-1-2/","link":"","permalink":"/2018/01/11/shryen11-1-2/","excerpt":"实验11-1-2 输出月份英文名（15 分）本题要求实现函数，可以返回一个给定月份的英文名称。 函数接口定义：1char *getmonth( int n ); 函数getmonth应返回存储了n对应的月份英文名称的字符串头指针。如果传入的参数n不是一个代表月份的数字，则返回空指针NULL。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;char *getmonth( int n );int main()&#123; int n; char *s; scanf(\"%d\", &amp;n); s = getmonth(n); if ( s==NULL ) printf(\"wrong input!\\n\"); else printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：15 输出样例1：1May 输入样例2：115 输出样例2：1wrong input!","text":"实验11-1-2 输出月份英文名（15 分）本题要求实现函数，可以返回一个给定月份的英文名称。 函数接口定义：1char *getmonth( int n ); 函数getmonth应返回存储了n对应的月份英文名称的字符串头指针。如果传入的参数n不是一个代表月份的数字，则返回空指针NULL。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;char *getmonth( int n );int main()&#123; int n; char *s; scanf(\"%d\", &amp;n); s = getmonth(n); if ( s==NULL ) printf(\"wrong input!\\n\"); else printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：15 输出样例1：1May 输入样例2：115 输出样例2：1wrong input! 123456789101112131415161718192021222324#include &lt;stdio.h&gt;char *getmonth( int n );int main()&#123; int n; char *s; scanf(\"%d\", &amp;n); s = getmonth(n); if ( s==NULL ) printf(\"wrong input!\\n\"); else printf(\"%s\\n\", s); return 0;&#125;char *getmonth(int n)&#123; char *s[] = &#123;\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"&#125;; if(n&lt;=0||n&gt;12) return NULL; else return(s[n-1]); &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验11-1-1 英文单词排序（25 分）","slug":"shryen11-1-1","date":"2018-01-10T11:41:00.000Z","updated":"2018-03-27T15:53:59.190Z","comments":true,"path":"2018/01/10/shryen11-1-1/","link":"","permalink":"/2018/01/10/shryen11-1-1/","excerpt":"实验11-1-1 英文单词排序（25 分）本题要求编写程序，输入若干英文单词，对这些单词按长度从小到大排序后输出。如果长度相同，按照输入的顺序不变。 输入格式：输入为若干英文单词，每行一个，以#作为输入结束标志。其中英文单词总数不超过20个，英文单词为长度小于10的仅由小写英文字母组成的字符串。 输出格式：输出为排序后的结果，每个单词后面都额外输出一个空格。 输入样例：123456blueredyellowgreenpurple# 输出样例：1red blue green yellow purple","text":"实验11-1-1 英文单词排序（25 分）本题要求编写程序，输入若干英文单词，对这些单词按长度从小到大排序后输出。如果长度相同，按照输入的顺序不变。 输入格式：输入为若干英文单词，每行一个，以#作为输入结束标志。其中英文单词总数不超过20个，英文单词为长度小于10的仅由小写英文字母组成的字符串。 输出格式：输出为排序后的结果，每个单词后面都额外输出一个空格。 输入样例：123456blueredyellowgreenpurple# 输出样例：1red blue green yellow purple 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;void main()&#123; int i,j, n = 0; char *color[20], str[10], *temp; scanf(\"%s\", str); while(str[0] != '#') &#123; color[n] = (char *)malloc(sizeof(char)*(strlen(str)+1)); strcpy(color[n], str); n++; scanf(\"%s\", str); &#125; color[n] = '\\0'; for(i = 1; i &lt; n; i++ ) &#123; for(j = 0; j &lt; n-i; j++) if(strcmp(color[j], color[j+1]) &gt; 0) &#123; temp = color[j]; color[j] = color[j+1]; color[j+1] = temp; &#125; &#125; for(i = 0; i &lt; n; i++) &#123; printf(\"%s \", color[i]); free(color[i]); &#125; printf(\"\\n\");&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-10 递归实现顺序输出整数（15 分）","slug":"shryen10-10","date":"2018-01-10T11:06:00.000Z","updated":"2018-03-27T10:19:35.548Z","comments":true,"path":"2018/01/10/shryen10-10/","link":"","permalink":"/2018/01/10/shryen10-10/","excerpt":"实验10-10 递归实现顺序输出整数（15 分）本题要求实现一个函数，对一个整数进行按位顺序输出。 函数接口定义：1void printdigits( int n ); 函数printdigits应将n的每一位数字从高位到低位顺序打印出来，每位数字占一行。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void printdigits( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printdigits(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：112345 输出样例：1234512345","text":"实验10-10 递归实现顺序输出整数（15 分）本题要求实现一个函数，对一个整数进行按位顺序输出。 函数接口定义：1void printdigits( int n ); 函数printdigits应将n的每一位数字从高位到低位顺序打印出来，每位数字占一行。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void printdigits( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printdigits(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：112345 输出样例：1234512345 123456789101112131415161718192021222324#include &lt;stdio.h&gt;void printdigits( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printdigits(n); return 0;&#125; void printdigits(int num)&#123; if (num &lt;= 9) printf(\"%d\\n\", num); else &#123; printdigits(num / 10); printf(\"%d\\n\", num % 10); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-9 十进制转换二进制（15 分）","slug":"shryen10-9","date":"2018-01-10T11:03:00.000Z","updated":"2018-03-27T10:19:29.550Z","comments":true,"path":"2018/01/10/shryen10-9/","link":"","permalink":"/2018/01/10/shryen10-9/","excerpt":"实验10-9 十进制转换二进制（15 分）本题要求实现一个函数，将正整数n转换为二进制后输出。 函数接口定义：1void dectobin( int n ); 函数dectobin应在一行中打印出二进制的n。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void dectobin( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); dectobin(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：11010","text":"实验10-9 十进制转换二进制（15 分）本题要求实现一个函数，将正整数n转换为二进制后输出。 函数接口定义：1void dectobin( int n ); 函数dectobin应在一行中打印出二进制的n。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;void dectobin( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); dectobin(n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：11010 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;void dectobin( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); dectobin(n); return 0;&#125;void dectobin(int n)&#123; if (n == 0) printf(\"0\"); else if (n == 1) printf(\"1\"); else &#123; dectobin(n/2); printf(\"%d\", n%2); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-8 递归计算P函数（15 分）","slug":"shryen10-8","date":"2018-01-10T10:55:00.000Z","updated":"2018-03-27T10:19:23.918Z","comments":true,"path":"2018/01/10/shryen10-8/","link":"","permalink":"/2018/01/10/shryen10-8/","excerpt":"实验10-8 递归计算P函数（15 分）本题要求实现下列函数P(n,x)的计算，其函数定义如下： 函数接口定义：1double P( int n, double x ); 其中n是用户传入的非负整数，x是双精度浮点数。函数P返回P(n,x)函数的相应值。题目保证输入输出都在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double P( int n, double x );int main()&#123; int n; double x; scanf(\"%d %lf\", &amp;n, &amp;x); printf(\"%.2f\\n\", P(n,x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 1.7 输出样例：13.05","text":"实验10-8 递归计算P函数（15 分）本题要求实现下列函数P(n,x)的计算，其函数定义如下： 函数接口定义：1double P( int n, double x ); 其中n是用户传入的非负整数，x是双精度浮点数。函数P返回P(n,x)函数的相应值。题目保证输入输出都在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double P( int n, double x );int main()&#123; int n; double x; scanf(\"%d %lf\", &amp;n, &amp;x); printf(\"%.2f\\n\", P(n,x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 1.7 输出样例：13.05 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;double P( int n, double x );int main()&#123; int n; double x; scanf(\"%d %lf\", &amp;n, &amp;x); printf(\"%.2f\\n\", P(n,x)); return 0;&#125;double P( int n, double x )&#123; double result; if(n == 0) result = 1; else if(n == 1) result = x; else result = ((2 * n - 1) * P(n-1,x)-(n - 1) * P(n-2,x)) / n; return result;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-7 递归求Fabonacci数列（10 分）","slug":"shryen10-7","date":"2018-01-10T10:54:00.000Z","updated":"2018-03-27T10:19:17.894Z","comments":true,"path":"2018/01/10/shryen10-7/","link":"","permalink":"/2018/01/10/shryen10-7/","excerpt":"实验10-7 递归求Fabonacci数列（10 分）本题要求实现求Fabonacci数列项的函数。Fabonacci数列的定义如下： f(n)=f(n−2)+f(n−1) (n≥2)，其中f(0)=0，f(1)=1。 函数接口定义：1int f( int n ); 函数f应返回第n个Fabonacci数。题目保证输入输出在长整型范围内。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int f( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", f(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：16 输出样例：18","text":"实验10-7 递归求Fabonacci数列（10 分）本题要求实现求Fabonacci数列项的函数。Fabonacci数列的定义如下： f(n)=f(n−2)+f(n−1) (n≥2)，其中f(0)=0，f(1)=1。 函数接口定义：1int f( int n ); 函数f应返回第n个Fabonacci数。题目保证输入输出在长整型范围内。建议用递归实现。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int f( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", f(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：16 输出样例：18 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;int f( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", f(n)); return 0;&#125;int f(int n)&#123; int result; if (n == 0) result = 0; else if (n == 1) result = 1; else result = f(n-2) + f(n-1); return result;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-5 递归求简单交错幂级数的部分和（15 分）","slug":"shryen10-6","date":"2018-01-10T10:45:00.000Z","updated":"2018-03-27T10:19:09.766Z","comments":true,"path":"2018/01/10/shryen10-6/","link":"","permalink":"/2018/01/10/shryen10-6/","excerpt":"实验10-6 递归计算Ackermenn函数（15 分）本题要求实现Ackermenn函数的计算，其函数定义如下： 函数接口定义：1int Ack( int m, int n ); 其中m和n是用户传入的非负整数。函数Ack返回Ackermenn函数的相应值。题目保证输入输出都在长整型 范围内。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int Ack( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"%d\\n\", Ack(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：19","text":"实验10-6 递归计算Ackermenn函数（15 分）本题要求实现Ackermenn函数的计算，其函数定义如下： 函数接口定义：1int Ack( int m, int n ); 其中m和n是用户传入的非负整数。函数Ack返回Ackermenn函数的相应值。题目保证输入输出都在长整型 范围内。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int Ack( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"%d\\n\", Ack(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：19 12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;int Ack( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"%d\\n\", Ack(m, n)); return 0;&#125;int Ack(int m, int n)&#123; int result; if (m == 0) result = n+1; else &#123; if (n == 0) result = Ack(m - 1, 1); else result = Ack(m-1, Ack(m, n-1)); &#125; return result;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-5 递归求简单交错幂级数的部分和（15 分）","slug":"shryen10-5","date":"2018-01-10T10:45:00.000Z","updated":"2018-03-27T10:18:59.584Z","comments":true,"path":"2018/01/10/shryen10-5/","link":"","permalink":"/2018/01/10/shryen10-5/","excerpt":"实验10-5 递归求简单交错幂级数的部分和（15 分）本题要求实现一个函数，计算下列简单交错幂级数的部分和： f(x,n)=x−x^2+x^3−x^4+⋯+(−1)^(n−1)*x^n 函数接口定义：1double fn( double x, int n ); 其中题目保证传入的n是正整数，并且输入输出都在双精度范围内。函数fn应返回上述级数的部分和。建议尝试用递归实现。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double fn( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.2f\\n\", fn(x,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.5 12 输出样例：10.33","text":"实验10-5 递归求简单交错幂级数的部分和（15 分）本题要求实现一个函数，计算下列简单交错幂级数的部分和： f(x,n)=x−x^2+x^3−x^4+⋯+(−1)^(n−1)*x^n 函数接口定义：1double fn( double x, int n ); 其中题目保证传入的n是正整数，并且输入输出都在双精度范围内。函数fn应返回上述级数的部分和。建议尝试用递归实现。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double fn( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.2f\\n\", fn(x,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.5 12 输出样例：10.33 123456789101112131415161718192021222324#include &lt;stdio.h&gt;double fn( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.2f\\n\", fn(x,n)); return 0;&#125;double fn(double x, int n)&#123; double result; if (n == 0 || n == 1) result = x; else result = x - x*fn(x, n-1); return result;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-4 递归实现指数函数（15 分）","slug":"shryen10-4","date":"2018-01-10T10:40:00.000Z","updated":"2018-03-27T10:18:49.719Z","comments":true,"path":"2018/01/10/shryen10-4/","link":"","permalink":"/2018/01/10/shryen10-4/","excerpt":"实验10-4 递归实现指数函数（15 分）本题要求实现一个计算x^n（n≥1）的函数。 函数接口定义：1double calc_pow( double x, int n ); 函数calc_pow应返回x的n次幂的值。建议用递归实现。题目保证结果在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double calc_pow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.0f\\n\", calc_pow(x, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：18","text":"实验10-4 递归实现指数函数（15 分）本题要求实现一个计算x^n（n≥1）的函数。 函数接口定义：1double calc_pow( double x, int n ); 函数calc_pow应返回x的n次幂的值。建议用递归实现。题目保证结果在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double calc_pow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.0f\\n\", calc_pow(x, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：18 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;double calc_pow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%.0f\\n\", calc_pow(x, n)); return 0;&#125;double calc_pow(double x, int n)&#123; double result; if (n == 0) result = 1; else result = x*calc_pow(x, n-1); return result;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-3 递归求阶乘和（15 分）","slug":"shryen10-3","date":"2018-01-10T10:36:00.000Z","updated":"2018-03-27T10:18:40.257Z","comments":true,"path":"2018/01/10/shryen10-3/","link":"","permalink":"/2018/01/10/shryen10-3/","excerpt":"实验10-3 递归求阶乘和（15 分）本题要求实现一个计算非负整数阶乘的简单函数，并利用该函数求 1!+2!+3!+…+n! 的值。 函数接口定义：12double fact( int n );double factsum( int n ); 函数fact应返回n的阶乘，建议用递归实现。函数factsum应返回 1!+2!+…+n! 的值。题目保证输入输出在双精度范围内。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;double fact( int n );double factsum( int n );int main()&#123; int n; scanf(\"%d\",&amp;n); printf(\"fact(%d) = %.0f\\n\", n, fact(n)); printf(\"sum = %.0f\\n\", factsum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：12fact(10) = 3628800sum = 4037913 输入样例2：10 输出样例2：12fact(0) = 1sum = 0","text":"实验10-3 递归求阶乘和（15 分）本题要求实现一个计算非负整数阶乘的简单函数，并利用该函数求 1!+2!+3!+…+n! 的值。 函数接口定义：12double fact( int n );double factsum( int n ); 函数fact应返回n的阶乘，建议用递归实现。函数factsum应返回 1!+2!+…+n! 的值。题目保证输入输出在双精度范围内。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;double fact( int n );double factsum( int n );int main()&#123; int n; scanf(\"%d\",&amp;n); printf(\"fact(%d) = %.0f\\n\", n, fact(n)); printf(\"sum = %.0f\\n\", factsum(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：12fact(10) = 3628800sum = 4037913 输入样例2：10 输出样例2：12fact(0) = 1sum = 0 123456789101112131415161718192021222324252627282930313233343536#include &lt;stdio.h&gt;double fact( int n );double factsum( int n );int main()&#123; int n; scanf(\"%d\",&amp;n); printf(\"fact(%d) = %.0f\\n\", n, fact(n)); printf(\"sum = %.0f\\n\", factsum(n)); return 0;&#125;double fact(int n)&#123; double result; if (n == 0 || n == 1) result = 1; else result = n*fact(n-1); return result;&#125;double factsum(int n)&#123; int i; double sum; sum=0; for (i=1; i&lt;=n; i++) sum = sum+fact(i); return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-2 判断满足条件的三位数（15 分）","slug":"shryen10-2","date":"2018-01-10T10:30:00.000Z","updated":"2018-03-27T10:18:25.272Z","comments":true,"path":"2018/01/10/shryen10-2/","link":"","permalink":"/2018/01/10/shryen10-2/","excerpt":"实验10-2 判断满足条件的三位数（15 分）本题要求实现一个函数，统计给定区间内的三位数中有两位数字相同的完全平方数（如144、676）的个数。 函数接口定义：1int search( int n ); 其中传入的参数int n是一个三位数的正整数（最高位数字非0）。函数search返回[101, n]区间内所有满足条件的数的个数。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#include &lt;math.h&gt;int search( int n );int main()&#123; int number; scanf(\"%d\",&amp;number); printf(\"count=%d\\n\",search(number)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1500 输出样例：1count=6","text":"实验10-2 判断满足条件的三位数（15 分）本题要求实现一个函数，统计给定区间内的三位数中有两位数字相同的完全平方数（如144、676）的个数。 函数接口定义：1int search( int n ); 其中传入的参数int n是一个三位数的正整数（最高位数字非0）。函数search返回[101, n]区间内所有满足条件的数的个数。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#include &lt;math.h&gt;int search( int n );int main()&#123; int number; scanf(\"%d\",&amp;number); printf(\"count=%d\\n\",search(number)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1500 输出样例：1count=6 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;#include &lt;math.h&gt;int search( int n );int main()&#123; int number; scanf(\"%d\",&amp;number); printf(\"count=%d\\n\",search(number)); return 0;&#125;int search(int n)&#123; int i, count, min, max, square, first, second, third; if (n &lt; 121) &#123; count = 0; return count; &#125; min = sqrt(121); max = sqrt(n); for (i = min, count = 0; i &lt;= max; i++) &#123; square = i*i; first = square % 10; second = square / 10 % 10; third = square / 100; if (first == second || first == third || second == third) count++; &#125; return count;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验10-1 圆形体体积计算器（20 分）","slug":"shryen10-1","date":"2018-01-10T10:20:00.000Z","updated":"2018-03-27T10:18:15.152Z","comments":true,"path":"2018/01/10/shryen10-1/","link":"","permalink":"/2018/01/10/shryen10-1/","excerpt":"实验10-1 圆形体体积计算器（20 分）本题要求实现一个常用圆形体体积的计算器。计算公式如下： 球体体积 V=34πr3，其中r是球体半径。 圆柱体体积 V=πr2h，其中r是底圆半径，h是高。 圆锥体体积 V=31πr2h，其中r是底圆半径，h是高。 输入格式：在每次计算之前，要求输出如下界面： 123451-Ball2-Cylinder3-Coneother-ExitPlease enter your command: 然后从标准输入读进一个整数指令。 输出格式：如果读入的指令是1或2或3，则执行相应的体积计算；如果是其他整数，则程序结束运行。 当输入为1时，在计算球体体积之前，打印Please enter the radius:，然后读入球体半径，完成计算； 当输入为2时，在计算圆柱体体积之前，打印Please enter the radius and the height:，然后读入底圆半径和高，完成计算； 当输入为3时，在计算圆锥体体积之前，打印Please enter the radius and the height:，然后读入底圆半径和高，完成计算。 计算结果在一行内输出，保留小数点后两位。 输入样例：123451232.4 30 输出样例：123456789101112131415161718191-Ball2-Cylinder3-Coneother-ExitPlease enter your command:Please enter the radius:33.511-Ball2-Cylinder3-Coneother-ExitPlease enter your command:Please enter the radius and the height:18.101-Ball2-Cylinder3-Coneother-ExitPlease enter your command:","text":"实验10-1 圆形体体积计算器（20 分）本题要求实现一个常用圆形体体积的计算器。计算公式如下： 球体体积 V=34πr3，其中r是球体半径。 圆柱体体积 V=πr2h，其中r是底圆半径，h是高。 圆锥体体积 V=31πr2h，其中r是底圆半径，h是高。 输入格式：在每次计算之前，要求输出如下界面： 123451-Ball2-Cylinder3-Coneother-ExitPlease enter your command: 然后从标准输入读进一个整数指令。 输出格式：如果读入的指令是1或2或3，则执行相应的体积计算；如果是其他整数，则程序结束运行。 当输入为1时，在计算球体体积之前，打印Please enter the radius:，然后读入球体半径，完成计算； 当输入为2时，在计算圆柱体体积之前，打印Please enter the radius and the height:，然后读入底圆半径和高，完成计算； 当输入为3时，在计算圆锥体体积之前，打印Please enter the radius and the height:，然后读入底圆半径和高，完成计算。 计算结果在一行内输出，保留小数点后两位。 输入样例：123451232.4 30 输出样例：123456789101112131415161718191-Ball2-Cylinder3-Coneother-ExitPlease enter your command:Please enter the radius:33.511-Ball2-Cylinder3-Coneother-ExitPlease enter your command:Please enter the radius and the height:18.101-Ball2-Cylinder3-Coneother-ExitPlease enter your command: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;math.h&gt; #define PI 3.141592654 void cal(int sel); int main(void) &#123; int sel; while(1)&#123; printf(\"1-Ball\\n\"); printf(\"2-Cylinder\\n\"); printf(\"3-Cone\\n\"); printf(\"other-Exit\\n\"); printf(\"Please enter your command:\"); scanf(\"%d\",&amp;sel); if(sel&lt;1||sel&gt;3) break; else cal(sel); &#125; return 0; &#125; void cal(int sel) &#123; double vol_ball(void); double vol_cylind(void); double vol_cone(void); switch(sel) &#123; case 1: printf(\"球体积为:%.2f\\n\",vol_ball()); break; case 2: printf(\"圆柱体积为:%.2f\\n\",vol_cylind()); break; case 3: printf(\"圆锥体积为:%.2f\\n\",vol_cone()); break; &#125; &#125; double vol_ball() &#123; double r; printf(\"Please enter the radius::\"); scanf(\"%lf\",&amp;r); return (4.0/3.0*PI*r*r*r); &#125; double vol_cylind() &#123; double r,h; printf(\"Please enter the radius and the height:\"); scanf(\"%lf%lf\",&amp;r,&amp;h); return (PI*r*r*h); &#125; double vol_cone()&#123; double r,h; printf(\"Please enter the radius and the height:\"); scanf(\"%lf%lf\",&amp;r,&amp;h); return (PI*r*r*h/3.0);&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-10 平面向量加法（15 分）","slug":"shryen9-10","date":"2018-01-07T11:37:00.000Z","updated":"2018-03-27T10:18:06.992Z","comments":true,"path":"2018/01/07/shryen9-10/","link":"","permalink":"/2018/01/07/shryen9-10/","excerpt":"实验9-10 平面向量加法（15 分）本题要求编写程序，计算两个二维平面向量的和向量。 输入格式:输入在一行中按照“x1 y1 x2 y2”的格式给出两个二维平面向量v1=(x1,y1)和v2=(x2,y2)的分量。 输出格式:在一行中按照(x, y)的格式输出和向量，坐标输出小数点后一位（注意不能输出−0.0）。 输入样例:13.5 -2.7 -13.9 8.7 输出样例:1(-10.4, 6.0)","text":"实验9-10 平面向量加法（15 分）本题要求编写程序，计算两个二维平面向量的和向量。 输入格式:输入在一行中按照“x1 y1 x2 y2”的格式给出两个二维平面向量v1=(x1,y1)和v2=(x2,y2)的分量。 输出格式:在一行中按照(x, y)的格式输出和向量，坐标输出小数点后一位（注意不能输出−0.0）。 输入样例:13.5 -2.7 -13.9 8.7 输出样例:1(-10.4, 6.0) 1234567891011121314151617#include&lt;stdio.h&gt;int main()&#123; struct xy&#123; double x; double y; &#125;; struct xy a,b,c; int i,j; scanf(\"%lf%lf%lf%lf\",&amp;a.x,&amp;a.y,&amp;b.x,&amp;b.y); c.x=a.x+b.x; c.y=a.y+b.y; if(c.x&lt;0&amp;&amp;c.x&gt;-0.05) c.x=0.0; if(c.y&lt;0&amp;&amp;c.y&gt;-0.05) c.y=0.0; printf(\"(%.1lf, %.1lf)\\n\",c.x,c.y); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-9 有理数比较（10 分）","slug":"shryen9-9","date":"2018-01-07T11:35:00.000Z","updated":"2018-03-27T10:18:01.262Z","comments":true,"path":"2018/01/07/shryen9-9/","link":"","permalink":"/2018/01/07/shryen9-9/","excerpt":"实验9-9 有理数比较（10 分）本题要求编写程序，比较两个有理数的大小。 输入格式：输入在一行中按照“a1/b1 a2/b2”的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。 输出格式：在一行中按照“a1/b1 关系符 a2/b2”的格式输出两个有理数的关系。其中“&gt;”表示“大于”，“&lt;”表示“小于”，“=”表示“等于”。 输入样例1：11/2 3/4 输出样例1：11/2 &lt; 3/4 输入样例2：16/8 3/4 输出样例2：16/8 = 3/4","text":"实验9-9 有理数比较（10 分）本题要求编写程序，比较两个有理数的大小。 输入格式：输入在一行中按照“a1/b1 a2/b2”的格式给出两个分数形式的有理数，其中分子和分母全是整形范围内的正整数。 输出格式：在一行中按照“a1/b1 关系符 a2/b2”的格式输出两个有理数的关系。其中“&gt;”表示“大于”，“&lt;”表示“小于”，“=”表示“等于”。 输入样例1：11/2 3/4 输出样例1：11/2 &lt; 3/4 输入样例2：16/8 3/4 输出样例2：16/8 = 3/4 12345678910111213141516171819202122#include&lt;stdio.h&gt;int main(void)&#123; struct num&#123; int a; char c; int b; &#125;; struct num n[2]; int i; char ch; for(i=0;i&lt;2;i++)&#123; scanf(\"%d\",&amp;n[i].a); n[i].c=getchar(); scanf(\"%d\",&amp;n[i].b); &#125; if(1.0*n[0].a/n[0].b==1.0*n[1].a/n[1].b) ch='='; else if(1.0*n[0].a/n[0].b&gt;1.0*n[1].a/n[1].b) ch='&gt;'; else ch='&lt;'; printf(\"%d/%d %c %d/%d\",n[0].a,n[0].b,ch,n[1].a,n[1].b); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-8 通讯录排序（20 分）","slug":"shryen9-8","date":"2018-01-07T11:34:00.000Z","updated":"2018-03-27T10:17:45.120Z","comments":true,"path":"2018/01/07/shryen9-8/","link":"","permalink":"/2018/01/07/shryen9-8/","excerpt":"实验9-8 通讯录排序（20 分）输入n个朋友的信息，包括姓名、生日、电话号码，本题要求编写程序，按照年龄从大到小的顺序依次输出通讯录。题目保证所有人的生日均不相同。 输入格式:输入第一行给出正整数n（&lt;10）。随后n行，每行按照“姓名 生日 电话号码”的格式给出一位朋友的信息，其中“姓名”是长度不超过10的英文字母组成的字符串，“生日”是yyyymmdd格式的日期，“电话号码”是不超过17位的数字及+、-组成的字符串。 输出格式:按照年龄从大到小输出朋友的信息，格式同输出。 输入样例:12343zhang 19850403 13912345678wang 19821020 +86-0571-88018448qian 19840619 13609876543 输出样例:123wang 19821020 +86-0571-88018448qian 19840619 13609876543zhang 19850403 13912345678","text":"实验9-8 通讯录排序（20 分）输入n个朋友的信息，包括姓名、生日、电话号码，本题要求编写程序，按照年龄从大到小的顺序依次输出通讯录。题目保证所有人的生日均不相同。 输入格式:输入第一行给出正整数n（&lt;10）。随后n行，每行按照“姓名 生日 电话号码”的格式给出一位朋友的信息，其中“姓名”是长度不超过10的英文字母组成的字符串，“生日”是yyyymmdd格式的日期，“电话号码”是不超过17位的数字及+、-组成的字符串。 输出格式:按照年龄从大到小输出朋友的信息，格式同输出。 输入样例:12343zhang 19850403 13912345678wang 19821020 +86-0571-88018448qian 19840619 13609876543 输出样例:123wang 19821020 +86-0571-88018448qian 19840619 13609876543zhang 19850403 13912345678 123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#include &lt;string.h&gt;struct contact &#123; char name[10]; int birthday; char telephoneNumber[17];&#125;;int main()&#123; int i, index, j, n; struct contact friend[10], temp; scanf(\"%d\", &amp;n); for (i=0; i&lt;n; i++) scanf(\"%s %d %s\", friend[i].name, &amp;friend[i].birthday, friend[i].telephoneNumber); for (i=0; i&lt;n-1; i++) &#123; index=i; for (j=i+1; j&lt;n; j++) if (friend[index].birthday &gt; friend[j].birthday) index=j; temp=friend[index]; friend[index]=friend[i]; friend[i]=temp; &#125; for (i=0; i&lt;n; i++) printf(\"%s %d %s\\n\", friend[i].name, friend[i].birthday, friend[i].telephoneNumber); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-7 找出总分最高的学生（15 分）","slug":"shryen9-7","date":"2018-01-07T11:30:00.000Z","updated":"2018-03-27T10:17:37.400Z","comments":true,"path":"2018/01/07/shryen9-7/","link":"","permalink":"/2018/01/07/shryen9-7/","excerpt":"实验9-7 找出总分最高的学生（15 分）给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和3门课程的成绩（[0,100]区间内的整数），要求输出总分最高学生的姓名、学号和总分。 输入格式：输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号 姓名 成绩1 成绩2 成绩3”，中间以空格分隔。 输出格式：在一行中输出总分最高学生的姓名、学号和总分，间隔一个空格。题目保证这样的学生是唯一的。 输入样例：123456500001 huanglan 78 83 7500002 wanghai 76 80 7700003 shenqiang 87 83 7610001 zhangfeng 92 88 7821987 zhangmeng 80 82 75 输出样例：1zhangfeng 10001 258","text":"实验9-7 找出总分最高的学生（15 分）给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和3门课程的成绩（[0,100]区间内的整数），要求输出总分最高学生的姓名、学号和总分。 输入格式：输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号 姓名 成绩1 成绩2 成绩3”，中间以空格分隔。 输出格式：在一行中输出总分最高学生的姓名、学号和总分，间隔一个空格。题目保证这样的学生是唯一的。 输入样例：123456500001 huanglan 78 83 7500002 wanghai 76 80 7700003 shenqiang 87 83 7610001 zhangfeng 92 88 7821987 zhangmeng 80 82 75 输出样例：1zhangfeng 10001 258 1234567891011121314151617181920212223242526272829303132#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;math.h&gt;int main()&#123; int n; scanf(\"%d\",&amp;n); char s[n][5][100]; int i,j; for(i=0;i&lt;n;i++)&#123; for(j=0;j&lt;5;j++)&#123; scanf(\"%s\",s[i][j]); &#125; &#125; int num;int k;int max=0;int index=0; for(i=0;i&lt;n;i++)&#123; int sum=0; for(j=2;j&lt;5;j++)&#123; num=strlen(s[i][j]); for(k=0;s[i][j][k]!='\\0';k++)&#123; sum+=(s[i][j][k]-'0')*pow(10,num-1); num--; &#125; &#125; if(sum&gt;max)&#123; max=sum; index=i; &#125; &#125; printf(\"%s %s %d\",s[index][1],s[index][0],max); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-6 按等级统计学生成绩（20 分）","slug":"shryen9-6","date":"2018-01-04T10:19:00.000Z","updated":"2018-03-27T10:17:25.864Z","comments":true,"path":"2018/01/04/shryen9-6/","link":"","permalink":"/2018/01/04/shryen9-6/","excerpt":"实验9-6 按等级统计学生成绩（20 分）本题要求实现一个根据学生成绩设置其等级，并统计不及格人数的简单函数。 函数接口定义：1int set_grade( struct student *p, int n ); 其中p是指向学生信息的结构体数组的指针，该结构体的定义为： 123456struct student&#123; int num; char name[20]; int score; char grade;&#125;; n是数组元素个数。学号num、姓名name和成绩score均是已经存储好的。set_grade函数需要根据学生的成绩score设置其等级grade。等级设置：85－100为A，70－84为B，60－69为C，0－59为D。同时，set_grade还需要返回不及格的人数。 裁判测试程序样例：123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#define MAXN 10struct student&#123; int num; char name[20]; int score; char grade;&#125;;int set_grade( struct student *p, int n );int main()&#123; struct student stu[MAXN], *ptr; int n, i, count; ptr = stu; scanf(\"%d\\n\", &amp;n); for(i = 0; i &lt; n; i++)&#123; scanf(\"%d%s%d\", &amp;stu[i].num, stu[i].name, &amp;stu[i].score); &#125; count = set_grade(ptr, n); printf(\"The count for failed (&lt;60): %d\\n\", count); printf(\"The grades:\\n\"); for(i = 0; i &lt; n; i++) printf(\"%d %s %c\\n\", stu[i].num, stu[i].name, stu[i].grade); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12345678910111031001 annie 8531002 bonny 7531003 carol 7031004 dan 8431005 susan 9031006 paul 6931007 pam 6031008 apple 5031009 nancy 10031010 bob 78 输出样例：123456789101112The count for failed (&lt;60): 1The grades:31001 annie A31002 bonny B31003 carol B31004 dan B31005 susan A31006 paul C31007 pam C31008 apple D31009 nancy A31010 bob B","text":"实验9-6 按等级统计学生成绩（20 分）本题要求实现一个根据学生成绩设置其等级，并统计不及格人数的简单函数。 函数接口定义：1int set_grade( struct student *p, int n ); 其中p是指向学生信息的结构体数组的指针，该结构体的定义为： 123456struct student&#123; int num; char name[20]; int score; char grade;&#125;; n是数组元素个数。学号num、姓名name和成绩score均是已经存储好的。set_grade函数需要根据学生的成绩score设置其等级grade。等级设置：85－100为A，70－84为B，60－69为C，0－59为D。同时，set_grade还需要返回不及格的人数。 裁判测试程序样例：123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#define MAXN 10struct student&#123; int num; char name[20]; int score; char grade;&#125;;int set_grade( struct student *p, int n );int main()&#123; struct student stu[MAXN], *ptr; int n, i, count; ptr = stu; scanf(\"%d\\n\", &amp;n); for(i = 0; i &lt; n; i++)&#123; scanf(\"%d%s%d\", &amp;stu[i].num, stu[i].name, &amp;stu[i].score); &#125; count = set_grade(ptr, n); printf(\"The count for failed (&lt;60): %d\\n\", count); printf(\"The grades:\\n\"); for(i = 0; i &lt; n; i++) printf(\"%d %s %c\\n\", stu[i].num, stu[i].name, stu[i].grade); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12345678910111031001 annie 8531002 bonny 7531003 carol 7031004 dan 8431005 susan 9031006 paul 6931007 pam 6031008 apple 5031009 nancy 10031010 bob 78 输出样例：123456789101112The count for failed (&lt;60): 1The grades:31001 annie A31002 bonny B31003 carol B31004 dan B31005 susan A31006 paul C31007 pam C31008 apple D31009 nancy A31010 bob B 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;stdio.h&gt;#define MAXN 10struct student&#123; int num; char name[20]; int score; char grade;&#125;;int set_grade( struct student *p, int n );int main()&#123; struct student stu[MAXN], *ptr; int n, i, count; ptr = stu; scanf(\"%d\\n\", &amp;n); for(i = 0; i &lt; n; i++)&#123; scanf(\"%d%s%d\", &amp;stu[i].num, stu[i].name, &amp;stu[i].score); &#125; count = set_grade(ptr, n); printf(\"The count for failed (&lt;60): %d\\n\", count); printf(\"The grades:\\n\"); for(i = 0; i &lt; n; i++) printf(\"%d %s %c\\n\", stu[i].num, stu[i].name, stu[i].grade); return 0;&#125;int set_grade(struct student *p, int n)&#123; int i, count=0; for (i=1; i&lt;=n; i++,p++) &#123; if (p-&gt;score &gt;= 85) p-&gt;grade = 'A'; else if (p-&gt;score &gt;= 70) p-&gt;grade = 'B'; else if (p-&gt;score &gt;= 60) p-&gt;grade = 'C'; else &#123; p-&gt;grade = 'D'; count++; &#125; &#125; return count; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-5 查找书籍（20 分）","slug":"shryen9-5","date":"2018-01-04T10:16:00.000Z","updated":"2018-03-27T10:17:10.920Z","comments":true,"path":"2018/01/04/shryen9-5/","link":"","permalink":"/2018/01/04/shryen9-5/","excerpt":"实验9-5 查找书籍（20 分）给定n本书的名称和定价，本题要求编写程序，查找并输出其中定价最高和最低的书的名称和定价。 输入格式:输入第一行给出正整数n（&lt;10），随后给出n本书的信息。每本书在一行中给出书名，即长度不超过30的字符串，随后一行中给出正实数价格。题目保证没有同样价格的书。 输出格式:在一行中按照“价格, 书名”的格式先后输出价格最高和最低的书。价格保留2位小数。 输入样例:12345673Programming in C21.5Programming in VB18.5Programming in Delphi25.0 输出样例:1225.00, Programming in Delphi18.50, Programming in VB","text":"实验9-5 查找书籍（20 分）给定n本书的名称和定价，本题要求编写程序，查找并输出其中定价最高和最低的书的名称和定价。 输入格式:输入第一行给出正整数n（&lt;10），随后给出n本书的信息。每本书在一行中给出书名，即长度不超过30的字符串，随后一行中给出正实数价格。题目保证没有同样价格的书。 输出格式:在一行中按照“价格, 书名”的格式先后输出价格最高和最低的书。价格保留2位小数。 输入样例:12345673Programming in C21.5Programming in VB18.5Programming in Delphi25.0 输出样例:1225.00, Programming in Delphi18.50, Programming in VB 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;#include &lt;string.h&gt;struct book &#123; char name[30]; double price;&#125;;int main()&#123; int n, i, maxIndex, minIndex; double max, min; struct book store[10]; scanf(\"%d\", &amp;n); for (i=0; i&lt;n; i++) &#123; getchar(); gets(store[i].name); scanf(\"%lf\", &amp;store[i].price); &#125; max = min = store[0].price; for (i=0; i&lt;n; i++) &#123; if (max &lt;= store[i].price) &#123; max = store[i].price; maxIndex = i; &#125; if (min &gt;= store[i].price) &#123; min = store[i].price; minIndex = i; &#125; &#125; printf(\"%.2f, %s\\n\", max, store[maxIndex].name); printf(\"%.2f, %s\\n\", min, store[minIndex].name); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-4 计算两个复数之积（15 分）","slug":"shryen9-4","date":"2018-01-04T10:12:00.000Z","updated":"2018-03-27T10:17:02.472Z","comments":true,"path":"2018/01/04/shryen9-4/","link":"","permalink":"/2018/01/04/shryen9-4/","excerpt":"实验9-4 计算两个复数之积（15 分）本题要求实现一个计算复数之积的简单函数。 函数接口定义：1struct complex multiply(struct complex x, struct complex y); 其中struct complex是复数结构体，其定义如下： 1234struct complex&#123; int real; int imag;&#125;; 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;struct complex&#123; int real; int imag;&#125;;struct complex multiply(struct complex x, struct complex y);int main()&#123; struct complex product, x, y; scanf(\"%d%d%d%d\", &amp;x.real, &amp;x.imag, &amp;y.real, &amp;y.imag); product = multiply(x, y); printf(\"(%d+%di) * (%d+%di) = %d + %di\\n\", x.real, x.imag, y.real, y.imag, product.real, product.imag); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：13 4 5 6 输出样例：1(3+4i) * (5+6i) = -9 + 38i","text":"实验9-4 计算两个复数之积（15 分）本题要求实现一个计算复数之积的简单函数。 函数接口定义：1struct complex multiply(struct complex x, struct complex y); 其中struct complex是复数结构体，其定义如下： 1234struct complex&#123; int real; int imag;&#125;; 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;struct complex&#123; int real; int imag;&#125;;struct complex multiply(struct complex x, struct complex y);int main()&#123; struct complex product, x, y; scanf(\"%d%d%d%d\", &amp;x.real, &amp;x.imag, &amp;y.real, &amp;y.imag); product = multiply(x, y); printf(\"(%d+%di) * (%d+%di) = %d + %di\\n\", x.real, x.imag, y.real, y.imag, product.real, product.imag); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：13 4 5 6 输出样例：1(3+4i) * (5+6i) = -9 + 38i 123456789101112131415161718192021222324252627#include &lt;stdio.h&gt;struct complex&#123; int real; int imag;&#125;;struct complex multiply(struct complex x, struct complex y);int main()&#123; struct complex product, x, y; scanf(\"%d%d%d%d\", &amp;x.real, &amp;x.imag, &amp;y.real, &amp;y.imag); product = multiply(x, y); printf(\"(%d+%di) * (%d+%di) = %d + %di\\n\", x.real, x.imag, y.real, y.imag, product.real, product.imag); return 0;&#125;struct complex multiply(struct complex x, struct complex y)&#123; struct complex result; result.real = x.real*y.real - x.imag*y.imag; result.imag = x.imag*y.real + x.real*y.imag; return result;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-3 计算平均成绩（15 分）","slug":"shryen9-3","date":"2018-01-04T10:00:00.000Z","updated":"2018-03-27T10:16:50.632Z","comments":true,"path":"2018/01/04/shryen9-3/","link":"","permalink":"/2018/01/04/shryen9-3/","excerpt":"实验9-3 计算平均成绩（15 分）给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和成绩（[0,100]区间内的整数），要求计算他们的平均成绩，并顺序输出平均线以下的学生名单。 输入格式：输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号 姓名 成绩”，中间以空格分隔。 输出格式：首先在一行中输出平均成绩，保留2位小数。然后按照输入顺序，每行输出一位平均线以下的学生的姓名和学号，间隔一个空格。 输入样例：123456500001 zhang 7000002 wang 8000003 qian 9010001 li 10021987 chen 60 输出样例：12380.00zhang 00001chen 21987","text":"实验9-3 计算平均成绩（15 分）给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和成绩（[0,100]区间内的整数），要求计算他们的平均成绩，并顺序输出平均线以下的学生名单。 输入格式：输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号 姓名 成绩”，中间以空格分隔。 输出格式：首先在一行中输出平均成绩，保留2位小数。然后按照输入顺序，每行输出一位平均线以下的学生的姓名和学号，间隔一个空格。 输入样例：123456500001 zhang 7000002 wang 8000003 qian 9010001 li 10021987 chen 60 输出样例：12380.00zhang 00001chen 21987 123456789101112131415161718192021#include &lt;stdio.h&gt;int main()&#123; int N,i,m[10],sum=0; float ave; char a[10][10],b[10][20]; scanf(\"%d\",&amp;N); for(i=0;i&lt;N;i++) &#123; scanf(\"%s%s%d\",a[i],b[i],&amp;m[i]); sum=sum+m[i]; &#125; ave=sum/N; printf(\"%.2f\\n\",ave); for(i=0;i&lt;N;i++) &#123; if(m[i]&lt;ave) printf(\"%s %s\\n\",b[i],a[i]); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-2 时间换算（15 分）","slug":"shryen9-2","date":"2018-01-04T09:50:00.000Z","updated":"2018-03-27T10:16:43.664Z","comments":true,"path":"2018/01/04/shryen9-2/","link":"","permalink":"/2018/01/04/shryen9-2/","excerpt":"实验9-2 时间换算（15 分）本题要求编写程序，以hh:mm:ss的格式输出某给定时间再过n秒后的时间值（超过23:59:59就从0点开始计时）。 输入格式：输入在第一行中以hh:mm:ss的格式给出起始时间，第二行给出整秒数n（&lt;60）。 输出格式：输出在一行中给出hh:mm:ss格式的结果时间。 输入样例：1211:59:4030 输出样例：112:00:10","text":"实验9-2 时间换算（15 分）本题要求编写程序，以hh:mm:ss的格式输出某给定时间再过n秒后的时间值（超过23:59:59就从0点开始计时）。 输入格式：输入在第一行中以hh:mm:ss的格式给出起始时间，第二行给出整秒数n（&lt;60）。 输出格式：输出在一行中给出hh:mm:ss格式的结果时间。 输入样例：1211:59:4030 输出样例：112:00:10 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include &lt;stdio.h&gt;int main()&#123; struct time &#123; int h; int m; int s; int n; &#125;a; scanf(\"%d:%d:%d\", &amp;a.h, &amp;a.m, &amp;a.s); scanf(\"%d\", &amp;a.n); if (a.s+a.n&lt;59) a.s=a.s+a.n; else if (a.s+a.n==59) &#123; a.s=0; if(a.m==59) &#123; a.m=0; if(a.h==23) &#123; a.h=0; &#125;else &#123; a.h=a.h+1; &#125; &#125; else &#123; a.m=a.m+1; &#125; &#125; else if((a.s+a.n)&gt;59) &#123; a.s=(a.n+a.s)-60; if(a.m==59) &#123; a.m=0; if(a.h==23) &#123; a.h=0; &#125; else &#123; a.h=a.h+1; &#125; &#125; else &#123; a.m=a.m+1; &#125; &#125; printf(\"%02d:%02d:%02d\\n\", a.h, a.m, a.s); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验9-1 计算职工工资（15 分）","slug":"shryen9-1","date":"2018-01-04T09:43:00.000Z","updated":"2018-03-27T10:16:34.549Z","comments":true,"path":"2018/01/04/shryen9-1/","link":"","permalink":"/2018/01/04/shryen9-1/","excerpt":"实验9-1 计算职工工资（15 分）给定N个职员的信息，包括姓名、基本工资、浮动工资和支出，要求编写程序顺序输出每位职员的姓名和实发工资（实发工资=基本工资+浮动工资-支出）。 输入格式：输入在一行中给出正整数N。随后N行，每行给出一位职员的信息，格式为“姓名 基本工资 浮动工资 支出”，中间以空格分隔。其中“姓名”为长度小于10的不包含空白字符的非空字符串，其他输入、输出保证在单精度范围内。 输出格式：按照输入顺序，每行输出一位职员的姓名和实发工资，间隔一个空格，工资保留2位小数。 输入样例：12343zhao 240 400 75qian 360 120 50zhou 560 150 80 输出样例：123zhao 565.00qian 430.00zhou 630.00","text":"实验9-1 计算职工工资（15 分）给定N个职员的信息，包括姓名、基本工资、浮动工资和支出，要求编写程序顺序输出每位职员的姓名和实发工资（实发工资=基本工资+浮动工资-支出）。 输入格式：输入在一行中给出正整数N。随后N行，每行给出一位职员的信息，格式为“姓名 基本工资 浮动工资 支出”，中间以空格分隔。其中“姓名”为长度小于10的不包含空白字符的非空字符串，其他输入、输出保证在单精度范围内。 输出格式：按照输入顺序，每行输出一位职员的姓名和实发工资，间隔一个空格，工资保留2位小数。 输入样例：12343zhao 240 400 75qian 360 120 50zhou 560 150 80 输出样例：123zhao 565.00qian 430.00zhou 630.00 12345678910111213141516171819#include &lt;stdio.h&gt;int main()&#123; int N,i; float sum[1000],b[1000],c[1000],d[1000]; char a[1000][100]; scanf(\"%d\",&amp;N); for(i=0;i&lt;N;i++) &#123; scanf(\"%s%f%f%f\",a[i],&amp;b[i],&amp;c[i],&amp;d[i]); sum[i]=(b[i]+c[i])-d[i]; &#125; for(i=0;i&lt;N;i++) &#123; printf(\"%s %.2f\\n\",a[i],sum[i]); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-10 IP地址转换（20 分）","slug":"shryen8-2-10","date":"2018-01-02T03:28:00.000Z","updated":"2018-03-27T10:16:26.704Z","comments":true,"path":"2018/01/02/shryen8-2-10/","link":"","permalink":"/2018/01/02/shryen8-2-10/","excerpt":"实验8-2-10 IP地址转换（20 分）一个IP地址是用四个字节（每个字节8个位）的二进制码组成。请将32位二进制码表示的IP地址转换为十进制格式表示的IP地址输出。 输入格式：输入在一行中给出32位二进制字符串。 输出格式：在一行中输出十进制格式的IP地址，其由4个十进制数组成（分别对应4个8位的二进制数），中间用“.”分隔开。 输入样例：111001100100101000001010101110010 输出样例：1204.148.21.114","text":"实验8-2-10 IP地址转换（20 分）一个IP地址是用四个字节（每个字节8个位）的二进制码组成。请将32位二进制码表示的IP地址转换为十进制格式表示的IP地址输出。 输入格式：输入在一行中给出32位二进制字符串。 输出格式：在一行中输出十进制格式的IP地址，其由4个十进制数组成（分别对应4个8位的二进制数），中间用“.”分隔开。 输入样例：111001100100101000001010101110010 输出样例：1204.148.21.114 123456789101112131415161718192021222324#include&lt;stdio.h&gt;#include&lt;math.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;int main()&#123; char s[35]; gets(s); int a = 0, i, j; for(i = 0; i &lt; 32; i++) &#123; if(i != 0 &amp;&amp; i % 8 == 0) &#123; printf(\"%d.\", a); a = 0; &#125; if(s[i] == '1') &#123; a += pow(2, 7 - i % 8); &#125; &#125; printf(\"%d\\n\", a); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-9 长整数转化成16进制字符串（15 分）","slug":"shryen8-2-9","date":"2018-01-02T03:21:00.000Z","updated":"2018-03-27T10:16:19.320Z","comments":true,"path":"2018/01/02/shryen8-2-9/","link":"","permalink":"/2018/01/02/shryen8-2-9/","excerpt":"实验8-2-9 长整数转化成16进制字符串（15 分）本题要求实现一个将长整数转化成16进制字符串的简单函数。 函数接口定义：1void f( long int x, char *p ); 其中x是待转化的十进制长整数，p指向某个字符数组的首元素。函数f的功能是把转换所得的16进制字符串写入p所指向的数组。16进制的A~F为大写字母。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;#define MAXN 10void f( long int x, char *p );int main()&#123; long int x; char s[MAXN] = \"\"; scanf(\"%ld\", &amp;x); f(x, s); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1123456789 输出样例1：175BCD15 输入样例2：1-125 输出样例2：1-7D","text":"实验8-2-9 长整数转化成16进制字符串（15 分）本题要求实现一个将长整数转化成16进制字符串的简单函数。 函数接口定义：1void f( long int x, char *p ); 其中x是待转化的十进制长整数，p指向某个字符数组的首元素。函数f的功能是把转换所得的16进制字符串写入p所指向的数组。16进制的A~F为大写字母。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;#define MAXN 10void f( long int x, char *p );int main()&#123; long int x; char s[MAXN] = \"\"; scanf(\"%ld\", &amp;x); f(x, s); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1123456789 输出样例1：175BCD15 输入样例2：1-125 输出样例2：1-7D 12345678910111213141516171819202122232425262728293031323334353637#include &lt;stdio.h&gt;#define MAXN 10void f( long int x, char *p );int main()&#123; long int x; char s[MAXN] = \"\"; scanf(\"%ld\", &amp;x); f(x, s); printf(\"%s\\n\", s); return 0;&#125;void f(long int x,char *p)&#123; char q; static int i=0,j=0; if(x&lt;0)&#123; x=-x; *p='-'; p++; &#125; q=x%16; if(q&lt;10) q=('0'+q); else q=('A'+q-10); x=x/16; j++; i=j; if(x&gt;0) f(x,p); *(p+(i-j))=q; j--;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-8 字符串排序（20 分）","slug":"shryen8-2-8","date":"2018-01-02T03:18:00.000Z","updated":"2018-03-27T10:16:09.535Z","comments":true,"path":"2018/01/02/shryen8-2-8/","link":"","permalink":"/2018/01/02/shryen8-2-8/","excerpt":"实验8-2-8 字符串排序（20 分）本题要求编写程序，读入5个字符串，按由小到大的顺序输出。 输入格式：输入为由空格分隔的5个非空字符串，每个字符串不包括空格、制表符、换行符等空白字符，长度小于80。 输出格式：按照以下格式输出排序后的结果： 12After sorted:每行一个字符串 输入样例：1red yellow blue green white 输出样例：123456After sorted:bluegreenredwhiteyellow","text":"实验8-2-8 字符串排序（20 分）本题要求编写程序，读入5个字符串，按由小到大的顺序输出。 输入格式：输入为由空格分隔的5个非空字符串，每个字符串不包括空格、制表符、换行符等空白字符，长度小于80。 输出格式：按照以下格式输出排序后的结果： 12After sorted:每行一个字符串 输入样例：1red yellow blue green white 输出样例：123456After sorted:bluegreenredwhiteyellow 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;void bubble(char *color[], int n);int main()&#123; int i; char *pcolor[5], str[80]; for (i=0; i&lt;5; i++) &#123; scanf(\"%s\", str); pcolor[i] = malloc(sizeof(char)*(strlen(str)+1)); strcpy(pcolor[i], str); &#125; bubble(pcolor, 5); printf(\"After sorted:\\n\"); for (i=0; i&lt;5; i++) &#123; printf(\"%s\\n\", pcolor[i]); free(pcolor[i]); &#125; return 0;&#125;void bubble(char *color[], int n)&#123; int k, j; char *temp; for (k=1; k&lt;n; k++) &#123; for (j=0; j&lt;n-k; j++) &#123; if (strcmp(color[j], color[j+1]) &gt; 0) &#123; temp = color[j]; color[j] = color[j+1]; color[j+1] = temp; &#125; &#125; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-7 字符串的连接（15 分）","slug":"shryen8-2-7","date":"2018-01-02T03:15:00.000Z","updated":"2018-03-27T10:15:59.808Z","comments":true,"path":"2018/01/02/shryen8-2-7/","link":"","permalink":"/2018/01/02/shryen8-2-7/","excerpt":"实验8-2-7 字符串的连接（15 分）本题要求实现一个函数，将两个字符串连接起来。 函数接口定义：1char *str_cat( char *s, char *t ); 函数str_cat应将字符串t复制到字符串s的末端，并且返回字符串s的首地址。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12abcdef 输出样例：12abcdefabcdef","text":"实验8-2-7 字符串的连接（15 分）本题要求实现一个函数，将两个字符串连接起来。 函数接口定义：1char *str_cat( char *s, char *t ); 函数str_cat应将字符串t复制到字符串s的末端，并且返回字符串s的首地址。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12abcdef 输出样例：12abcdefabcdef 12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXS 10char *str_cat( char *s, char *t );int main()&#123; char *p; char str1[MAXS+MAXS] = &#123;'\\0'&#125;, str2[MAXS] = &#123;'\\0'&#125;; scanf(\"%s%s\", str1, str2); p = str_cat(str1, str2); printf(\"%s\\n%s\\n\", p, str1); return 0;&#125;char *str_cat( char *s, char *t )&#123; int i, j, index,length; index = strlen(s); length = index+strlen(t); for (i = index, j = 0; i &lt; length; i++, j++) s[i] = t[j]; s[length] = '\\0'; return s;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-6 分类统计各类字符个数（15 分）","slug":"shryen8-2-6","date":"2018-01-02T03:10:00.000Z","updated":"2018-03-27T10:15:46.893Z","comments":true,"path":"2018/01/02/shryen8-2-6/","link":"","permalink":"/2018/01/02/shryen8-2-6/","excerpt":"实验8-2-6 分类统计各类字符个数（15 分）本题要求实现一个函数，统计给定字符串中的大写字母、小写字母、空格、数字以及其它字符各有多少。 函数接口定义：1void StringCount( char *s ); 其中 char *s 是用户传入的字符串。函数StringCount须在一行内按照 1大写字母个数 小写字母个数 空格个数 数字个数 其它字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char *s );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ&amp;*?093 Az 输出样例：12 2 1 3 4","text":"实验8-2-6 分类统计各类字符个数（15 分）本题要求实现一个函数，统计给定字符串中的大写字母、小写字母、空格、数字以及其它字符各有多少。 函数接口定义：1void StringCount( char *s ); 其中 char *s 是用户传入的字符串。函数StringCount须在一行内按照 1大写字母个数 小写字母个数 空格个数 数字个数 其它字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char *s );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ&amp;*?093 Az 输出样例：12 2 1 3 4 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char *s );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;void StringCount(char s[])&#123; int i, uppercase, lowercase, blank, digit, other; uppercase = lowercase = blank = digit = other =0; i = 0; while(s[i] != '\\0') &#123; if (s[i] &gt;= 'A'&amp;&amp; s[i] &lt;= 'Z') uppercase++; else if (s[i] &gt;= 'a' &amp;&amp; s[i] &lt;= 'z') lowercase++; else if (s[i] == ' ') blank++; else if (s[i] &gt;= '0' &amp;&amp; s[i] &lt;= '9') digit++; else other++; i++; &#125; printf(\"%d %d %d %d %d\\n\", uppercase, lowercase, blank, digit, other);&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-5 判断回文字符串（20 分）","slug":"shryen8-2-5","date":"2018-01-01T01:54:00.000Z","updated":"2018-03-27T10:15:30.583Z","comments":true,"path":"2018/01/01/shryen8-2-5/","link":"","permalink":"/2018/01/01/shryen8-2-5/","excerpt":"实验8-2-5 判断回文字符串（20 分）本题要求编写函数，判断给定的一串字符是否为“回文”。所谓“回文”是指顺读和倒读都一样的字符串。如“XYZYX”和“xyzzyx”都是回文。 函数接口定义：1bool palindrome( char *s ); 函数palindrome判断输入字符串char *s是否为回文。若是则返回true，否则返回false。 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXN 20typedef enum &#123;false, true&#125; bool;bool palindrome( char *s );int main()&#123; char s[MAXN]; scanf(\"%s\", s); if ( palindrome(s)==true ) printf(\"Yes\\n\"); else printf(\"No\\n\"); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1thisistrueurtsisiht 输出样例1：12Yesthisistrueurtsisiht 输入样例2：1thisisnottrue 输出样例2：12Nothisisnottrue","text":"实验8-2-5 判断回文字符串（20 分）本题要求编写函数，判断给定的一串字符是否为“回文”。所谓“回文”是指顺读和倒读都一样的字符串。如“XYZYX”和“xyzzyx”都是回文。 函数接口定义：1bool palindrome( char *s ); 函数palindrome判断输入字符串char *s是否为回文。若是则返回true，否则返回false。 裁判测试程序样例：1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXN 20typedef enum &#123;false, true&#125; bool;bool palindrome( char *s );int main()&#123; char s[MAXN]; scanf(\"%s\", s); if ( palindrome(s)==true ) printf(\"Yes\\n\"); else printf(\"No\\n\"); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：1thisistrueurtsisiht 输出样例1：12Yesthisistrueurtsisiht 输入样例2：1thisisnottrue 输出样例2：12Nothisisnottrue 12345678910111213141516171819202122232425262728293031323334353637#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define MAXN 20typedef enum &#123;false, true&#125; bool;bool palindrome( char *s );int main()&#123; char s[MAXN]; scanf(\"%s\", s); if ( palindrome(s)==true ) printf(\"Yes\\n\"); else printf(\"No\\n\"); printf(\"%s\\n\", s); return 0;&#125;bool palindrome( char *s )&#123; int len; len=strlen(s); int i,j; for(i=0,j=len-1;i&lt;=j;i++,j--)&#123; if(*(s+i)!=*(s+j))&#123; break; &#125; &#125; if(i&gt;j)&#123; return true; &#125;else&#123; return false; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-3 删除字符（20 分）","slug":"shryen8-2-3","date":"2018-01-01T01:50:00.000Z","updated":"2018-03-27T10:15:05.879Z","comments":true,"path":"2018/01/01/shryen8-2-3/","link":"","permalink":"/2018/01/01/shryen8-2-3/","excerpt":"实验8-2-3 删除字符（20 分）本题要求实现一个删除字符串中的指定字符的简单函数。 函数接口定义：1void delchar( char *str, char c ); 其中char *str是传入的字符串，c是待删除的字符。函数delchar的功能是将字符串str中出现的所有c字符删除。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 20void delchar( char *str, char c );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char str[MAXN], c; scanf(\"%c\\n\", &amp;c); ReadString(str); delchar(str, c); printf(\"%s\\n\", str); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12ahappy new year 输出样例：1hppy new yer","text":"实验8-2-3 删除字符（20 分）本题要求实现一个删除字符串中的指定字符的简单函数。 函数接口定义：1void delchar( char *str, char c ); 其中char *str是传入的字符串，c是待删除的字符。函数delchar的功能是将字符串str中出现的所有c字符删除。 裁判测试程序样例：12345678910111213141516171819#include &lt;stdio.h&gt;#define MAXN 20void delchar( char *str, char c );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char str[MAXN], c; scanf(\"%c\\n\", &amp;c); ReadString(str); delchar(str, c); printf(\"%s\\n\", str); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12ahappy new year 输出样例：1hppy new yer `12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#define MAXN 20void delchar( char *str, char c );int main()&#123; char str[MAXN], c; scanf(\"%c\\n\", &amp;c); gets(str); delchar(str, c); printf(\"%s\\n\", str); return 0;&#125;void delchar( char *str, char c )&#123; int i=0,count=0,j=0,coun=0,q=0; char a [100],b[100];while(str[i++]!='\\0')&#123;count++;&#125;for(i=0;i&lt;count;i++)&#123;if(str[i]==c)&#123;continue;&#125;else&#123;a[j++]=str[i];coun++;&#125;&#125;j=0;for(i=0;i&lt;coun;i++)&#123; str[q++]=a[j++]; &#125; //注意此处加终止符表示结束 str[q]='\\0';&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-4 使用函数实现字符串部分复制（20 分）","slug":"shryen8-2-4","date":"2018-01-01T01:50:00.000Z","updated":"2018-03-27T10:15:17.341Z","comments":true,"path":"2018/01/01/shryen8-2-4/","link":"","permalink":"/2018/01/01/shryen8-2-4/","excerpt":"实验8-2-4 使用函数实现字符串部分复制（20 分）本题要求编写函数，将输入字符串t中从第m个字符开始的全部字符复制到字符串s中。 函数接口定义：1void strmcpy( char *t, int m, char *s ); 函数strmcpy将输入字符串char *t中从第m个字符开始的全部字符复制到字符串char *s中。若m超过输入字符串的长度，则结果字符串应为空串。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void strmcpy( char *t, int m, char *s );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char t[MAXN], s[MAXN]; int m; scanf(\"%d\\n\", &amp;m); ReadString(t); strmcpy( t, m, s ); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：127happy new year 输出样例：1new year","text":"实验8-2-4 使用函数实现字符串部分复制（20 分）本题要求编写函数，将输入字符串t中从第m个字符开始的全部字符复制到字符串s中。 函数接口定义：1void strmcpy( char *t, int m, char *s ); 函数strmcpy将输入字符串char *t中从第m个字符开始的全部字符复制到字符串char *s中。若m超过输入字符串的长度，则结果字符串应为空串。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void strmcpy( char *t, int m, char *s );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char t[MAXN], s[MAXN]; int m; scanf(\"%d\\n\", &amp;m); ReadString(t); strmcpy( t, m, s ); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：127happy new year 输出样例：1new year 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#define MAXN 20void strmcpy( char *t, int m, char *s );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char t[MAXN], s[MAXN]; int m; scanf(\"%d\\n\", &amp;m); ReadString(t); strmcpy( t, m, s ); printf(\"%s\\n\", s); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;void strmcpy(char *t, int m, char *s)&#123; int i, j, length; length=0; while (t[length] != '\\0') length++; j = 0; if (m&gt;0 &amp;&amp; m&lt;=length) &#123; for (i=m-1; t[i] !='\\0'; i++) &#123; s[j] = t[i]; j++; &#125; s[j] = '\\0'; &#125; else s[0] = '\\0';&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-2 找最长的字符串（15 分）","slug":"shryen8-2-2","date":"2018-01-01T01:36:00.000Z","updated":"2018-03-27T10:14:51.864Z","comments":true,"path":"2018/01/01/shryen8-2-2/","link":"","permalink":"/2018/01/01/shryen8-2-2/","excerpt":"实验8-2-2 找最长的字符串（15 分）本题要求编写程序，针对输入的N个字符串，输出其中最长的字符串。 输入格式：输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。 输出格式：在一行中用以下格式输出最长的字符串： 1The longest is: 最长的字符串 如果字符串的长度相同，则输出先输入的字符串。 输入样例：1234565liwangzhangjinxiang 输出样例：1The longest is: zhang","text":"实验8-2-2 找最长的字符串（15 分）本题要求编写程序，针对输入的N个字符串，输出其中最长的字符串。 输入格式：输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。 输出格式：在一行中用以下格式输出最长的字符串： 1The longest is: 最长的字符串 如果字符串的长度相同，则输出先输入的字符串。 输入样例：1234565liwangzhangjinxiang 输出样例：1The longest is: zhang `123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;int main()&#123; char str[10000][100]; int N,i,j,k=0,m; scanf(\"%d\",&amp;N); for(i=0;i&lt;=N;i++) &#123; for(j=0;j&lt;80;j++) &#123; scanf(\"%c\",&amp;str[i][j]); if(str[i][j]=='\\n') break; &#125; &#125; for(i=0;i&lt;=N;i++) &#123; for(j=0;j&lt;80;j++) if(str[i][j]=='\\n') if(j&gt;k) &#123; k=j; m=i; &#125; &#125;printf(\"The longest is: \"); for(i=0;i&lt;k;i++) printf(\"%c\",str[m][i]); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-2-1 找最小的字符串（15 分）","slug":"shryen8-2-1","date":"2018-01-01T01:31:00.000Z","updated":"2018-03-27T10:14:43.055Z","comments":true,"path":"2018/01/01/shryen8-2-1/","link":"","permalink":"/2018/01/01/shryen8-2-1/","excerpt":"实验8-2-1 找最小的字符串（15 分）本题要求编写程序，针对输入的N个字符串，输出其中最小的字符串。 输入格式：输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。 输出格式：在一行中用以下格式输出最小的字符串： 1Min is: 最小字符串 输入样例：1234565LiWangZhaJinXian 输出样例：1Min is: Jin","text":"实验8-2-1 找最小的字符串（15 分）本题要求编写程序，针对输入的N个字符串，输出其中最小的字符串。 输入格式：输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。 输出格式：在一行中用以下格式输出最小的字符串： 1Min is: 最小字符串 输入样例：1234565LiWangZhaJinXian 输出样例：1Min is: Jin `1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt; int main()&#123; int i, j, N; char *min, str[100][80]; scanf (\"%d\", &amp;N); //输入行数 getchar (); for (i=0; i&lt;N; i++) gets (str[i]); //这个函数不读取换行符,请放心使用 min = str[0]; for (i=0; i&lt;N; i++) if (strcmp(min, str[i]) &gt; 0) min = str[i]; printf (\"Min is: %s\\n\", min); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-9 输出学生成绩（20 分）","slug":"shryen8-1-9","date":"2018-01-01T01:22:00.000Z","updated":"2018-03-27T10:14:30.516Z","comments":true,"path":"2018/01/01/shryen8-1-9/","link":"","permalink":"/2018/01/01/shryen8-1-9/","excerpt":"实验8-1-9 输出学生成绩（20 分）本题要求编写程序，根据输入学生的成绩，统计并输出学生的平均成绩、最高成绩和最低成绩。建议使用动态内存分配来实现。 输入格式：输入第一行首先给出一个正整数N，表示学生的个数。接下来一行给出N个学生的成绩，数字间以空格分隔。 输出格式：按照以下格式输出： 123average = 平均成绩max = 最高成绩min = 最低成绩 结果均保留两位小数。 输入样例：12385 90 95 输出样例：123average = 90.00max = 95.00min = 85.00","text":"实验8-1-9 输出学生成绩（20 分）本题要求编写程序，根据输入学生的成绩，统计并输出学生的平均成绩、最高成绩和最低成绩。建议使用动态内存分配来实现。 输入格式：输入第一行首先给出一个正整数N，表示学生的个数。接下来一行给出N个学生的成绩，数字间以空格分隔。 输出格式：按照以下格式输出： 123average = 平均成绩max = 最高成绩min = 最低成绩 结果均保留两位小数。 输入样例：12385 90 95 输出样例：123average = 90.00max = 95.00min = 85.00 `1234567891011121314151617181920212223242526#include &lt;stdlib.h&gt;int main()&#123; int n, sum, i, max, min, *p; double average; scanf(\"%d\", &amp;n); p = (int *) calloc(n,sizeof(int)); sum = 0; max = 0; min = 100; for (i=0; i&lt;n; i++) &#123; scanf(\"%d\", p+i); sum = sum + *(p+i); if (max &lt;= *(p+i)) max = *(p+i); if (min &gt;= *(p+i)) min = *(p+i); &#125; average = (double) sum/n; printf(\"average = %.2f\\nmax = %.2f\\nmin = %.2f\\n\", average, (double) max, (double) min); free(p); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-8 报数（20 分）","slug":"shryen8-1-8","date":"2018-01-01T01:08:00.000Z","updated":"2018-03-27T10:14:17.624Z","comments":true,"path":"2018/01/01/shryen8-1-8/","link":"","permalink":"/2018/01/01/shryen8-1-8/","excerpt":"实验8-1-8 报数（20 分）报数游戏是这样的：有n个人围成一圈，按顺序从1到n编好号。从第一个人开始报数，报到m（&lt;n）的人退出圈子；下一个人从1开始报数，报到m的人退出圈子。如此下去，直到留下最后一个人。 本题要求编写函数，给出每个人的退出顺序编号。 函数接口定义：1void CountOff( int n, int m, int out[] ); 其中n是初始人数；m是游戏规定的退出位次（保证为小于n的正整数）。函数CountOff将每个人的退出顺序编号存在数组out[]中。因为C语言数组下标是从0开始的，所以第i个位置上的人是第out[i-1]个退出的。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void CountOff( int n, int m, int out[] );int main()&#123; int out[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); CountOff( n, m, out ); for ( i = 0; i &lt; n; i++ ) printf(\"%d \", out[i]); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：111 3 输出样例：14 10 1 7 5 2 11 9 3 6 8","text":"实验8-1-8 报数（20 分）报数游戏是这样的：有n个人围成一圈，按顺序从1到n编好号。从第一个人开始报数，报到m（&lt;n）的人退出圈子；下一个人从1开始报数，报到m的人退出圈子。如此下去，直到留下最后一个人。 本题要求编写函数，给出每个人的退出顺序编号。 函数接口定义：1void CountOff( int n, int m, int out[] ); 其中n是初始人数；m是游戏规定的退出位次（保证为小于n的正整数）。函数CountOff将每个人的退出顺序编号存在数组out[]中。因为C语言数组下标是从0开始的，所以第i个位置上的人是第out[i-1]个退出的。 裁判测试程序样例：1234567891011121314151617181920#include &lt;stdio.h&gt;#define MAXN 20void CountOff( int n, int m, int out[] );int main()&#123; int out[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); CountOff( n, m, out ); for ( i = 0; i &lt; n; i++ ) printf(\"%d \", out[i]); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：111 3 输出样例：14 10 1 7 5 2 11 9 3 6 8 `1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;stdio.h&gt;#define MAXN 20void CountOff( int n, int m, int out[] );int main()&#123; int out[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); CountOff( n, m, out ); for ( i = 0; i &lt; n; i++ ) printf(\"%d \", out[i]); printf(\"\\n\"); return 0;&#125;void CountOff(int n, int m, int out[])&#123; int i, j, count, length, circle[MAXN], temp[MAXN]; for (i = 0, length = 0; i &lt; n; i++) &#123; circle[i] = i+1; length++; &#125; count = 0; j = 0; while (length &gt; 0) &#123; for (i = 0; i &lt; n; i++) &#123; if (circle[i] != 0) count++; else continue; if (count%m == 0) &#123; temp[j] = circle[i]; j++; circle[i] = 0; length--; &#125; &#125; &#125; for (i = 0; i &lt; n; i++) &#123; j = temp[i]; out[j-1] = i + 1; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-7 数组循环右移（20 分）","slug":"shryen8-1-7","date":"2017-12-28T01:38:00.000Z","updated":"2018-03-27T10:14:02.896Z","comments":true,"path":"2017/12/28/shryen8-1-7/","link":"","permalink":"/2017/12/28/shryen8-1-7/","excerpt":"实验8-1-7 数组循环右移（20 分）本题要求实现一个对数组进行循环右移的简单函数：一个数组a中存有n（&gt;0）个整数，将每个整数循环向右移m（≥0）个位置，即将a中的数据由（a0a1⋯an−1）变换为（an−m⋯an−1a0a1⋯an−m−1）（最后m个数循环移至最前面的m个位置）。 函数接口定义：1int ArrayShift( int a[], int n, int m ); 其中a[]是用户传入的数组；n是数组的大小；m是右移的位数。函数ArrayShift须将循环右移后的数组仍然存在a[]中。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#define MAXN 10int ArrayShift( int a[], int n, int m );int main()&#123; int a[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); for ( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); ArrayShift(a, n, m); for ( i = 0; i &lt; n; i++ ) &#123; if (i != 0) printf(\" \"); printf(\"%d\", a[i]); &#125; printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：126 21 2 3 4 5 6 输出样例：15 6 1 2 3 4","text":"实验8-1-7 数组循环右移（20 分）本题要求实现一个对数组进行循环右移的简单函数：一个数组a中存有n（&gt;0）个整数，将每个整数循环向右移m（≥0）个位置，即将a中的数据由（a0a1⋯an−1）变换为（an−m⋯an−1a0a1⋯an−m−1）（最后m个数循环移至最前面的m个位置）。 函数接口定义：1int ArrayShift( int a[], int n, int m ); 其中a[]是用户传入的数组；n是数组的大小；m是右移的位数。函数ArrayShift须将循环右移后的数组仍然存在a[]中。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#define MAXN 10int ArrayShift( int a[], int n, int m );int main()&#123; int a[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); for ( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); ArrayShift(a, n, m); for ( i = 0; i &lt; n; i++ ) &#123; if (i != 0) printf(\" \"); printf(\"%d\", a[i]); &#125; printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：126 21 2 3 4 5 6 输出样例：15 6 1 2 3 4 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;stdio.h&gt;#define MAXN 10int ArrayShift( int a[], int n, int m );int main()&#123; int a[MAXN], n, m; int i; scanf(\"%d %d\", &amp;n, &amp;m); for ( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); ArrayShift(a, n, m); for ( i = 0; i &lt; n; i++ ) &#123; if (i != 0) printf(\" \"); printf(\"%d\", a[i]); &#125; printf(\"\\n\"); return 0;&#125;int ArrayShift( int a[], int n, int m )&#123; int i, j = 0, s[MAXN],num; int *p=&amp;a[0]; if(m==0)&#123; return 0; &#125; if(m&gt;n)&#123; if(m%n==0)&#123; return 0; &#125; m=m%n; &#125; for (i = n - m; i &lt; n; i++) &#123; s[j] = *(p+i); j++; &#125; for (i = 0; i &lt; n - m ; i++) &#123; s[j] = *(p+i); j++; &#125; for(num = 0; num &lt; n; num++) &#123; *(p+num)=s[num]; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-6 函数实现字符串逆序（15 分）","slug":"shryen8-1-6","date":"2017-12-28T01:33:00.000Z","updated":"2018-03-27T10:13:43.056Z","comments":true,"path":"2017/12/28/shryen8-1-6/","link":"","permalink":"/2017/12/28/shryen8-1-6/","excerpt":"实验8-1-6 函数实现字符串逆序（15 分）本题要求实现一个字符串逆序的简单函数。 函数接口定义：1void f( char *p ); 函数f对p指向的字符串进行逆序操作。要求函数f中不能定义任何数组，不能调用任何字符串处理函数。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;#define MAXS 20void f( char *p );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); f(s); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1Hello World! 输出样例：1!dlroW olleH","text":"实验8-1-6 函数实现字符串逆序（15 分）本题要求实现一个字符串逆序的简单函数。 函数接口定义：1void f( char *p ); 函数f对p指向的字符串进行逆序操作。要求函数f中不能定义任何数组，不能调用任何字符串处理函数。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;#define MAXS 20void f( char *p );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); f(s); printf(\"%s\\n\", s); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1Hello World! 输出样例：1!dlroW olleH 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;stdio.h&gt;#define MAXS 20void f( char *p );void ReadString( char *s ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); f(s); printf(\"%s\\n\", s); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;void f(char *p) &#123; // p指向字符串头部 char *s=p; // q指向字符串尾部 char *q = s; while(*q) q++; q--; // 交换并移动指针，知道p和q交叉 while(q&gt;s) &#123; char t = *s; *s++ = *q; *q-- = t; &#125; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-5 在数组中查找指定元素（15 分）","slug":"shryen8-1-5","date":"2017-12-28T01:30:00.000Z","updated":"2018-03-27T10:13:33.254Z","comments":true,"path":"2017/12/28/shryen8-1-5/","link":"","permalink":"/2017/12/28/shryen8-1-5/","excerpt":"实验8-1-5 在数组中查找指定元素（15 分）本题要求实现一个在数组中查找指定元素的简单函数。 函数接口定义：1int search( int list[], int n, int x ); 其中list[]是用户传入的数组；n（≥0）是list[]中元素的个数；x是待查找的元素。如果找到 则函数search返回相应元素的最小下标（下标从0开始），否则返回−1。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int search( int list[], int n, int x );int main()&#123; int i, index, n, x; int a[MAXN]; scanf(\"%d\", &amp;n); for( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); scanf(\"%d\", &amp;x); index = search( a, n, x ); if( index != -1 ) printf(\"index = %d\\n\", index); else printf(\"Not found\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12351 2 2 5 42 输出样例1：1index = 1 输入样例2：12351 2 2 5 40 输出样例2：1Not found","text":"实验8-1-5 在数组中查找指定元素（15 分）本题要求实现一个在数组中查找指定元素的简单函数。 函数接口定义：1int search( int list[], int n, int x ); 其中list[]是用户传入的数组；n（≥0）是list[]中元素的个数；x是待查找的元素。如果找到 则函数search返回相应元素的最小下标（下标从0开始），否则返回−1。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int search( int list[], int n, int x );int main()&#123; int i, index, n, x; int a[MAXN]; scanf(\"%d\", &amp;n); for( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); scanf(\"%d\", &amp;x); index = search( a, n, x ); if( index != -1 ) printf(\"index = %d\\n\", index); else printf(\"Not found\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：12351 2 2 5 42 输出样例1：1index = 1 输入样例2：12351 2 2 5 40 输出样例2：1Not found 123456789101112131415161718192021222324252627282930313233int search( int list[], int n, int x );#define MAXN 10int main()&#123; int i, index, n, x; int a[MAXN]; scanf(\"%d\", &amp;n); for( i = 0; i &lt; n; i++ ) scanf(\"%d\", &amp;a[i]); scanf(\"%d\", &amp;x); index = search( a, n, x ); if( index != -1 ) printf(\"index = %d\\n\", index); else printf(\"Not found\\n\"); return 0;&#125;int search( int list[], int n, int x )&#123; int i,*p=&amp;list[0]; for(i=0;i&lt;n;i++)&#123; if(x==*p++)&#123; break; &#125; &#125; if(i==n)&#123; return -1; &#125; return i;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-4 使用函数的选择法排序（25 分）","slug":"shryen8-1-4","date":"2017-12-28T01:27:00.000Z","updated":"2018-03-27T10:13:20.352Z","comments":true,"path":"2017/12/28/shryen8-1-4/","link":"","permalink":"/2017/12/28/shryen8-1-4/","excerpt":"实验8-1-4 使用函数的选择法排序（25 分）本题要求实现一个用选择法对整数数组进行简单排序的函数。 函数接口定义：1void sort( int a[], int n ); 其中a是待排序的数组，n是数组a中元素的个数。该函数用选择法将数组a中的元素按升序排列，结果仍然在数组a中。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#define MAXN 10void sort( int a[], int n );int main()&#123; int i, n; int a[MAXN]; scanf(\"%d\", &amp;n); for( i=0; i&lt;n; i++ ) scanf(\"%d\", &amp;a[i]); sort(a, n); printf(\"After sorted the array is:\"); for( i = 0; i &lt; n; i++ ) printf(\" %d\", a[i]); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1245 1 7 6 输出样例：1After sorted the array is: 1 5 6 7","text":"实验8-1-4 使用函数的选择法排序（25 分）本题要求实现一个用选择法对整数数组进行简单排序的函数。 函数接口定义：1void sort( int a[], int n ); 其中a是待排序的数组，n是数组a中元素的个数。该函数用选择法将数组a中的元素按升序排列，结果仍然在数组a中。 裁判测试程序样例：12345678910111213141516171819202122232425#include &lt;stdio.h&gt;#define MAXN 10void sort( int a[], int n );int main()&#123; int i, n; int a[MAXN]; scanf(\"%d\", &amp;n); for( i=0; i&lt;n; i++ ) scanf(\"%d\", &amp;a[i]); sort(a, n); printf(\"After sorted the array is:\"); for( i = 0; i &lt; n; i++ ) printf(\" %d\", a[i]); printf(\"\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1245 1 7 6 输出样例：1After sorted the array is: 1 5 6 7 123456789101112131415161718192021222324252627282930313233343536#include &lt;stdio.h&gt;#define MAXN 10void sort( int a[], int n );int main()&#123; int i, n; int a[MAXN]; scanf(\"%d\", &amp;n); for( i=0; i&lt;n; i++ ) scanf(\"%d\", &amp;a[i]); sort(a, n); printf(\"After sorted the array is:\"); for( i = 0; i &lt; n; i++ ) printf(\" %d\", a[i]); printf(\"\\n\"); return 0;&#125;void sort( int a[], int n )&#123; int *p=&amp;a[0],i,j; for(i=0;i&lt;n;i++)&#123; for(j=0;j&lt;n-i-1;j++)&#123; if(*(p+j)&gt;*(p+j+1))&#123; int temp=*(p+j); *(p+j)=*(p+j+1); *(p+j+1)=temp; &#125; &#125; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-3 拆分实数的整数与小数部分（15 分）","slug":"shryen8-1-3","date":"2017-12-28T01:23:00.000Z","updated":"2018-03-27T10:13:10.704Z","comments":true,"path":"2017/12/28/shryen8-1-3/","link":"","permalink":"/2017/12/28/shryen8-1-3/","excerpt":"实验8-1-3 拆分实数的整数与小数部分（15 分）本题要求实现一个拆分实数的整数与小数部分的简单函数。 函数接口定义：1void splitfloat( float x, int *intpart, float *fracpart ); 其中x是被拆分的实数（0≤x&lt;10000），*intpart和*fracpart分别是将实数x拆分出来的整数部分与小数部分。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;void splitfloat( float x, int *intpart, float *fracpart );int main()&#123; float x, fracpart; int intpart; scanf(\"%f\", &amp;x); splitfloat(x, &amp;intpart, &amp;fracpart); printf(\"The integer part is %d\\n\", intpart); printf(\"The fractional part is %g\\n\", fracpart); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12.718 输出样例：12The integer part is 2The fractional part is 0.718","text":"实验8-1-3 拆分实数的整数与小数部分（15 分）本题要求实现一个拆分实数的整数与小数部分的简单函数。 函数接口定义：1void splitfloat( float x, int *intpart, float *fracpart ); 其中x是被拆分的实数（0≤x&lt;10000），*intpart和*fracpart分别是将实数x拆分出来的整数部分与小数部分。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;void splitfloat( float x, int *intpart, float *fracpart );int main()&#123; float x, fracpart; int intpart; scanf(\"%f\", &amp;x); splitfloat(x, &amp;intpart, &amp;fracpart); printf(\"The integer part is %d\\n\", intpart); printf(\"The fractional part is %g\\n\", fracpart); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12.718 输出样例：12The integer part is 2The fractional part is 0.718 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;void splitfloat( float x, int *intpart, float *fracpart );int main()&#123; float x, fracpart; int intpart; scanf(\"%f\", &amp;x); splitfloat(x, &amp;intpart, &amp;fracpart); printf(\"The integer part is %d\\n\", intpart); printf(\"The fractional part is %g\\n\", fracpart); return 0;&#125;void splitfloat(float x, int *intpart, float *fracpart) &#123;if(x&lt;0) x=-x;*intpart=(int)x;*fracpart=x-*intpart;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-2 计算两数的和与差（10 分）","slug":"shryen8-1-2","date":"2017-12-28T01:16:00.000Z","updated":"2018-03-27T10:12:54.880Z","comments":true,"path":"2017/12/28/shryen8-1-2/","link":"","permalink":"/2017/12/28/shryen8-1-2/","excerpt":"实验8-1-2 计算两数的和与差（10 分）本题要求实现一个计算输入的两数的和与差的简单函数。 函数接口定义：1void sum_diff( float op1, float op2, float *psum, float *pdiff ); 其中op1和op2是输入的两个实数，*psum和*pdiff是计算得出的和与差。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;void sum_diff( float op1, float op2, float *psum, float *pdiff );int main()&#123; float a, b, sum, diff; scanf(\"%f %f\", &amp;a, &amp;b); sum_diff(a, b, &amp;sum, &amp;diff); printf(\"The sum is %.2f\\nThe diff is %.2f\\n\", sum, diff); return 0; &#125;/* 你的代码将被嵌在这里 */ 输入样例：14 6 输出样例：12The sum is 10.00The diff is -2.00","text":"实验8-1-2 计算两数的和与差（10 分）本题要求实现一个计算输入的两数的和与差的简单函数。 函数接口定义：1void sum_diff( float op1, float op2, float *psum, float *pdiff ); 其中op1和op2是输入的两个实数，*psum和*pdiff是计算得出的和与差。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;void sum_diff( float op1, float op2, float *psum, float *pdiff );int main()&#123; float a, b, sum, diff; scanf(\"%f %f\", &amp;a, &amp;b); sum_diff(a, b, &amp;sum, &amp;diff); printf(\"The sum is %.2f\\nThe diff is %.2f\\n\", sum, diff); return 0; &#125;/* 你的代码将被嵌在这里 */ 输入样例：14 6 输出样例：12The sum is 10.00The diff is -2.00 123456789101112131415161718#include &lt;stdio.h&gt;void sum_diff( float op1, float op2, float *psum, float *pdiff );int main()&#123; float a, b, sum, diff; scanf(\"%f %f\", &amp;a, &amp;b); sum_diff(a, b, &amp;sum, &amp;diff); printf(\"The sum is %.2f\\nThe diff is %.2f\\n\", sum, diff); return 0; &#125;void sum_diff( float op1, float op2, float *psum, float *pdiff )&#123; *psum=op1+op2; *pdiff=op1-op2;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验8-1-1 利用指针找最大值（10 分）","slug":"shryen8-1-1","date":"2017-12-28T01:13:00.000Z","updated":"2018-03-27T10:12:45.572Z","comments":true,"path":"2017/12/28/shryen8-1-1/","link":"","permalink":"/2017/12/28/shryen8-1-1/","excerpt":"实验8-1-1 利用指针找最大值（10 分）本题要求实现一个简单函数，找出两个数中的最大值。 函数接口定义：1void findmax( int *px, int *py, int *pmax ); 其中px和px是用户传入的两个整数的指针。函数findmax应找出两个指针所指向的整数中的最大值，存放在pmax指向的位置。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;void findmax( int *px, int *py, int *pmax );int main()&#123; int max, x, y; scanf(\"%d %d\", &amp;x, &amp;y); findmax( &amp;x, &amp;y, &amp;max ); printf(\"%d\\n\", max); return 0;&#125; /* 你的代码将被嵌在这里 */ 输入样例：13 5 输出样例：15","text":"实验8-1-1 利用指针找最大值（10 分）本题要求实现一个简单函数，找出两个数中的最大值。 函数接口定义：1void findmax( int *px, int *py, int *pmax ); 其中px和px是用户传入的两个整数的指针。函数findmax应找出两个指针所指向的整数中的最大值，存放在pmax指向的位置。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;void findmax( int *px, int *py, int *pmax );int main()&#123; int max, x, y; scanf(\"%d %d\", &amp;x, &amp;y); findmax( &amp;x, &amp;y, &amp;max ); printf(\"%d\\n\", max); return 0;&#125; /* 你的代码将被嵌在这里 */ 输入样例：13 5 输出样例：15 123456789101112131415161718192021#include &lt;stdio.h&gt;void findmax( int *px, int *py, int *pmax );int main()&#123; int max, x, y; scanf(\"%d %d\", &amp;x, &amp;y); findmax( &amp;x, &amp;y, &amp;max ); printf(\"%d\\n\", max); return 0;&#125; void findmax( int *px, int *py, int *pmax )&#123; if(*px&gt;*py) *pmax=*px; else *pmax=*py;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-10 删除重复字符（20 分）","slug":"shryen7-3-10","date":"2017-12-27T09:38:00.000Z","updated":"2018-03-27T10:12:34.968Z","comments":true,"path":"2017/12/27/shryen7-3-10/","link":"","permalink":"/2017/12/27/shryen7-3-10/","excerpt":"实验7-3-10 删除重复字符（20 分）本题要求编写程序，将给定字符串去掉重复的字符后，按照字符ASCII码顺序从小到大排序后输出。 输入格式：输入是一个以回车结束的非空字符串（少于80个字符）。 输出格式：输出去重排序后的结果字符串。 输入样例：1ad2f3adjfeainzzzv 输出样例：123adefijnvz","text":"实验7-3-10 删除重复字符（20 分）本题要求编写程序，将给定字符串去掉重复的字符后，按照字符ASCII码顺序从小到大排序后输出。 输入格式：输入是一个以回车结束的非空字符串（少于80个字符）。 输出格式：输出去重排序后的结果字符串。 输入样例：1ad2f3adjfeainzzzv 输出样例：123adefijnvz 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include&lt;stdio.h&gt;int main(void)&#123;char str[80], ch;int i=0, j, index;while((str[i] = getchar( )) != '\\n')i++;str[i] = '\\0';for(i=0;str[i];i++)&#123;index=i;for(j=i+1;str[j];j++)if(str[j] &lt; str[index])index=j;ch=str[index];str[index]=str[i];str[i]=ch;&#125;ch=0;for(i = 0; str[i] != '\\0'; i++)if(str[i]!=ch)&#123;putchar(str[i]);ch=str[i];&#125;putchar('\\n');return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-9 字符串字母大小写转换（15 分）","slug":"shryen7-3-9","date":"2017-12-27T09:36:00.000Z","updated":"2018-03-27T10:12:28.310Z","comments":true,"path":"2017/12/27/shryen7-3-9/","link":"","permalink":"/2017/12/27/shryen7-3-9/","excerpt":"实验7-3-9 字符串字母大小写转换（15 分）本题要求编写程序，对一个以“#”结束的字符串，将其小写字母全部转换成大写字母，把大写字母全部转换成小写字母，其他字符不变输出。 输入格式：输入为一个以“#”结束的字符串（不超过30个字符）。 输出格式：在一行中输出大小写转换后的结果字符串。 输入样例：1Hello World! 123# 输出样例：1hELLO wORLD! 123","text":"实验7-3-9 字符串字母大小写转换（15 分）本题要求编写程序，对一个以“#”结束的字符串，将其小写字母全部转换成大写字母，把大写字母全部转换成小写字母，其他字符不变输出。 输入格式：输入为一个以“#”结束的字符串（不超过30个字符）。 输出格式：在一行中输出大小写转换后的结果字符串。 输入样例：1Hello World! 123# 输出样例：1hELLO wORLD! 123 123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main()&#123; char str[50]; int i=0,j; gets(str); while(str[i]!='#') &#123; if(str[i]&gt;='a'&amp;&amp;str[i]&lt;='z') str[i]=str[i]-32; else if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z') str[i]=str[i]+32; i++; &#125; for(j=0;j&lt;i;j++) printf(\"%c\",str[j]); printf(\"\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-8 找鞍点（20 分）","slug":"shryen7-3-8","date":"2017-12-27T09:31:00.000Z","updated":"2018-03-27T10:12:22.887Z","comments":true,"path":"2017/12/27/shryen7-3-8/","link":"","permalink":"/2017/12/27/shryen7-3-8/","excerpt":"实验7-3-8 统计字符出现次数（20 分）本题要求编写程序，统计并输出某给定字符在给定字符串中出现的次数。 输入格式：输入第一行给出一个以回车结束的字符串（少于80个字符）；第二行输入一个字符。 输出格式：在一行中输出给定字符在给定字符串中出现的次数。 输入样例：12programming is More fun!m 输出样例：12","text":"实验7-3-8 统计字符出现次数（20 分）本题要求编写程序，统计并输出某给定字符在给定字符串中出现的次数。 输入格式：输入第一行给出一个以回车结束的字符串（少于80个字符）；第二行输入一个字符。 输出格式：在一行中输出给定字符在给定字符串中出现的次数。 输入样例：12programming is More fun!m 输出样例：12 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;stdio.h&gt;int main()&#123; int i, j, k, n, row, col, max, flag; int matrix[6][6]; scanf(\"%d\", &amp;n); for (i = 0; i &lt; n; i++) &#123; for (j = 0; j &lt; n; j++) scanf(\"%d\", &amp;matrix[i][j]); &#125; for (i = 0; i &lt; n; i++) &#123; row = 0; col = 0; max = matrix[i][0]; for (j = 0; j &lt; n; j++) &#123; if(max &lt;= matrix[i][j]) &#123; max = matrix[i][j]; row = i; col = j; &#125; &#125; flag = 1; for (k = 0; k &lt; n; k++) &#123; if (max &gt; matrix[k][col]) flag = 0; &#125; if (flag) &#123; printf(\"%d %d\\n\", row, col); break; &#125; &#125; if (!flag) printf(\"NONE\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-7 字符转换（15 分）","slug":"shryen7-3-7","date":"2017-12-27T09:29:00.000Z","updated":"2018-03-27T10:12:14.373Z","comments":true,"path":"2017/12/27/shryen7-3-7/","link":"","permalink":"/2017/12/27/shryen7-3-7/","excerpt":"实验7-3-7 字符转换（15 分）本题要求提取一个字符串中的所有数字字符（’0’……’9’），将其转换为一个整数输出。 输入格式：输入在一行中给出一个不超过80个字符且以回车结束的字符串。 输出格式：在一行中输出转换后的整数。题目保证输出不超过长整型范围。 输入样例：1free82jeep5 输出样例：1825","text":"实验7-3-7 字符转换（15 分）本题要求提取一个字符串中的所有数字字符（’0’……’9’），将其转换为一个整数输出。 输入格式：输入在一行中给出一个不超过80个字符且以回车结束的字符串。 输出格式：在一行中输出转换后的整数。题目保证输出不超过长整型范围。 输入样例：1free82jeep5 输出样例：1825 1234567891011121314151617181920212223242526272829303132#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; char a[81]; char b[81]; gets(a); int m,i; m=strlen(a); int j=0; for(i=0;i&lt;m;i++) &#123; if(a[i]&gt;='0'&amp;&amp;a[i]&lt;='9') &#123; b[j]=a[i]; j++; &#125; &#125; int k=0; while(b[k]=='0') &#123; k++; &#125; if(k==j) printf(\"0\"); for(i=k;i&lt;j;i++) &#123; printf(\"%c\",b[i]); &#125; printf(\"\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-6 字符串转换成十进制整数（15 分）","slug":"shryen7-3-6","date":"2017-12-27T09:27:00.000Z","updated":"2018-03-27T10:12:06.973Z","comments":true,"path":"2017/12/27/shryen7-3-6/","link":"","permalink":"/2017/12/27/shryen7-3-6/","excerpt":"实验7-3-6 字符串转换成十进制整数（15 分）输入一个以#结束的字符串，本题要求滤去所有的非十六进制字符（不分大小写），组成一个新的表示十六进制数字的字符串，然后将其转换为十进制数后输出。如果在第一个十六进制字符之前存在字符“-”，则代表该数是负数。 输入格式：输入在一行中给出一个以#结束的非空字符串。 输出格式：在一行中输出转换后的十进制数。题目保证输出在长整型范围内。 输入样例：1+-P-xf4+-1!# 输出样例：1-3905","text":"实验7-3-6 字符串转换成十进制整数（15 分）输入一个以#结束的字符串，本题要求滤去所有的非十六进制字符（不分大小写），组成一个新的表示十六进制数字的字符串，然后将其转换为十进制数后输出。如果在第一个十六进制字符之前存在字符“-”，则代表该数是负数。 输入格式：输入在一行中给出一个以#结束的非空字符串。 输出格式：在一行中输出转换后的十进制数。题目保证输出在长整型范围内。 输入样例：1+-P-xf4+-1!# 输出样例：1-3905 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include &lt;stdio.h&gt;int main()&#123; int i, j, flag; char hexad[100], str[100]; long number; i = 0; while ((str[i] = getchar()) != '#') i++; str[i] = '\\0'; flag = 0; for (i = 0; str[i] != '\\0'; i++) &#123; if (str[i] == '-') &#123; flag = 1; break; &#125; else if ((str[i] &gt;= '0' &amp;&amp; str[i] &lt;= '9')) break; &#125; if (flag) &#123; hexad[0] = '-'; j = 1; &#125; else j = 0; for (i = 0; str[i] != '\\0'; i++) &#123; if ((str[i] &gt;= '0' &amp;&amp; str[i] &lt;= '9') || (str[i] &gt;= 'a' &amp;&amp; str[i] &lt;= 'f') || (str[i] &gt;= 'A' &amp;&amp; str[i] &lt;= 'F')) &#123; hexad[j] = str[i]; j++; &#125; &#125; hexad[j] = '\\0'; number = 0; for (i = 0; hexad[i] != '\\0'; i++) &#123; if (hexad[i] &gt;= '0' &amp;&amp; hexad[i] &lt;= '9') number = number*16 + hexad[i]-'0'; else if (hexad[i] &gt;= 'A' &amp;&amp; hexad[i] &lt;= 'F') number = number*16+hexad[i]-'A'+10; else if (hexad[i] &gt;= 'a' &amp;&amp; hexad[i] &lt;= 'f') number = number*16 + hexad[i]-'a'+10; &#125; if (hexad[0] == '-' &amp;&amp; number &lt; 0xabcdef) number = -1*number; printf(\"%ld\\n\", number); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-5 输出大写英文字母（15 分）","slug":"shryen7-3-5","date":"2017-12-27T03:37:00.000Z","updated":"2018-03-27T10:11:53.199Z","comments":true,"path":"2017/12/27/shryen7-3-5/","link":"","permalink":"/2017/12/27/shryen7-3-5/","excerpt":"实验7-3-5 输出大写英文字母（15 分）本题要求编写程序，顺序输出给定字符串中所出现过的大写英文字母，每个字母只输出一遍；若无大写英文字母则输出“Not Found”。 输入格式：输入为一个以回车结束的字符串（少于80个字符）。 输出格式：按照输入的顺序在一行中输出所出现过的大写英文字母，每个字母只输出一遍。若无大写英文字母则输出“Not Found”。 输入样例1：1FONTNAME and FILENAME 输出样例1：1FONTAMEIL 输入样例2：1fontname and filrname 输出样例2：1Not Found","text":"实验7-3-5 输出大写英文字母（15 分）本题要求编写程序，顺序输出给定字符串中所出现过的大写英文字母，每个字母只输出一遍；若无大写英文字母则输出“Not Found”。 输入格式：输入为一个以回车结束的字符串（少于80个字符）。 输出格式：按照输入的顺序在一行中输出所出现过的大写英文字母，每个字母只输出一遍。若无大写英文字母则输出“Not Found”。 输入样例1：1FONTNAME and FILENAME 输出样例1：1FONTAMEIL 输入样例2：1fontname and filrname 输出样例2：1Not Found 12345678910111213141516171819#include &lt;stdio.h&gt;int main(void)&#123;char x[80],y[26]; int i,j,ny=0;gets(x);for(i=0;x[i]!='\\0' ; i++)if(x[i]&gt;='A'&amp;&amp; x[i]&lt;='Z')&#123;for(j=0;j&lt;ny;j++)if(y[j]==x[i])break;if(j==ny)&#123; y[ny]=x[i]; ny++; &#125;&#125;for(i=0;i&lt;ny;i++)printf(\"%c\",y[i]);if(ny==0)&#123;printf(\"Not Found\\n\");&#125;return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-4 字符串替换（15 分）","slug":"shryen7-3-4","date":"2017-12-27T03:32:00.000Z","updated":"2018-03-27T10:11:44.338Z","comments":true,"path":"2017/12/27/shryen7-3-4/","link":"","permalink":"/2017/12/27/shryen7-3-4/","excerpt":"实验7-3-4 字符串替换（15 分）本题要求编写程序，将给定字符串中的大写英文字母按以下对应规则替换： 原字母 对应字母 A Z B Y C X D W … … X C Y B Z A 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出替换完成后的字符串。 输入样例：1Only the 11 CAPItaL LeTtERS are replaced. 输出样例：1Lnly the 11 XZKRtaO OeGtVIH are replaced.","text":"实验7-3-4 字符串替换（15 分）本题要求编写程序，将给定字符串中的大写英文字母按以下对应规则替换： 原字母 对应字母 A Z B Y C X D W … … X C Y B Z A 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出替换完成后的字符串。 输入样例：1Only the 11 CAPItaL LeTtERS are replaced. 输出样例：1Lnly the 11 XZKRtaO OeGtVIH are replaced. 123456789101112131415161718192021222324//字符串替换#include&lt;stdio.h&gt;int main(void)&#123; int i=0; char str[80]; printf(\"Enter a string:\"); while((str[i]=getchar())!='\\n') i++; str[i]='\\0'; for(i=0;str[i]!='\\0';i++) &#123; if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z') str[i]=155-str[i]; &#125; printf(\"After change:\"); for(i=0;str[i]!='\\0';i++) putchar(str[i]); printf(\"\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-3 统计大写辅音字母（15 分）","slug":"shryen7-3-3","date":"2017-12-27T03:25:00.000Z","updated":"2018-03-27T10:11:38.525Z","comments":true,"path":"2017/12/27/shryen7-3-3/","link":"","permalink":"/2017/12/27/shryen7-3-3/","excerpt":"实验7-3-3 统计大写辅音字母（15 分）英文辅音字母是除A、E、I、O、U以外的字母。本题要求编写程序，统计给定字符串中大写辅音字母的个数。 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出字符串中大写辅音字母的个数。 输入样例：1HELLO World! 输出样例：14","text":"实验7-3-3 统计大写辅音字母（15 分）英文辅音字母是除A、E、I、O、U以外的字母。本题要求编写程序，统计给定字符串中大写辅音字母的个数。 输入格式：输入在一行中给出一个不超过80个字符、并以回车结束的字符串。 输出格式：输出在一行中给出字符串中大写辅音字母的个数。 输入样例：1HELLO World! 输出样例：14 12345678910111213141516171819202122//统计大写辅音字母#include&lt;stdio.h&gt;int main()&#123; int i=0; char str[80]; while((str[i]=getchar())!='\\n') i++; str[i]='\\0'; int count=0; for(i=0;str[i]!='\\0';i++) &#123; if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z'&amp;&amp;str[i]!='A'&amp;&amp;str[i]!='E'&amp;&amp;str[i]!='I'&amp;&amp;str[i]!='O'&amp;&amp;str[i]!='U') &#123; count++; &#125; &#125; printf(\"%d\",count); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-2 查找指定字符（15 分）","slug":"shryen7-3-2","date":"2017-12-21T10:03:00.000Z","updated":"2018-03-27T10:11:32.877Z","comments":true,"path":"2017/12/21/shryen7-3-2/","link":"","permalink":"/2017/12/21/shryen7-3-2/","excerpt":"实验7-3-2 查找指定字符（15 分）本题要求编写程序，从给定字符串中查找某指定的字符。 输入格式：输入的第一行是一个待查找的字符。第二行是一个以回车结束的非空字符串（不超过80个字符）。 输出格式：如果找到，在一行内按照格式“index = 下标”输出该字符在字符串中所对应的最大下标（下标从0开始）；否则输出”Not Found”。 输入样例1：12mprogramming 输出样例1：1index = 7 输入样例2：12a1234 输出样例2：1Not Found","text":"实验7-3-2 查找指定字符（15 分）本题要求编写程序，从给定字符串中查找某指定的字符。 输入格式：输入的第一行是一个待查找的字符。第二行是一个以回车结束的非空字符串（不超过80个字符）。 输出格式：如果找到，在一行内按照格式“index = 下标”输出该字符在字符串中所对应的最大下标（下标从0开始）；否则输出”Not Found”。 输入样例1：12mprogramming 输出样例1：1index = 7 输入样例2：12a1234 输出样例2：1Not Found 1234567891011121314#include&lt;stdio.h&gt;#include&lt;string.h&gt;char buf[80],search[80];int main()&#123; scanf(\"%s\",search); scanf(\"%s\",buf); char * pos = strstr(buf,search); if (pos==NULL) printf(\"Not Found\\n\"); else printf(\"index = %d\\n\",pos-buf+1); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-3-1 字符串逆序（15 分）","slug":"shryen7-3-1","date":"2017-12-21T09:56:00.000Z","updated":"2018-03-27T10:11:25.845Z","comments":true,"path":"2017/12/21/shryen7-3-1/","link":"","permalink":"/2017/12/21/shryen7-3-1/","excerpt":"实验7-3-1 字符串逆序（15 分）输入一个字符串，对该字符串进行逆序，输出逆序后的字符串。 输入格式：输入在一行中给出一个不超过80个字符长度的、以回车结束的非空字符串。 输出格式：在一行中输出逆序后的字符串。 输入样例：1Hello World! 输出样例：1!dlroW olleH","text":"实验7-3-1 字符串逆序（15 分）输入一个字符串，对该字符串进行逆序，输出逆序后的字符串。 输入格式：输入在一行中给出一个不超过80个字符长度的、以回车结束的非空字符串。 输出格式：在一行中输出逆序后的字符串。 输入样例：1Hello World! 输出样例：1!dlroW olleH 12345678910111213141516171819#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main()&#123; char str[81]; int i = 0; int c; while((c=getchar()) != '\\n')&#123;// 记录字符串 str[i] = (char) c; i++; &#125; i--; for(;i&gt;=0;i--)&#123; printf(\"%c\", str[i]); &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-10 简易连连看（20 分）","slug":"shryen7-2-10","date":"2017-12-20T09:57:00.000Z","updated":"2018-03-27T10:11:17.078Z","comments":true,"path":"2017/12/20/shryen7-2-10/","link":"","permalink":"/2017/12/20/shryen7-2-10/","excerpt":"实验7-2-10 简易连连看（20 分）本题要求实现一个简易连连看游戏模拟程序。 给定一个2N×2N的方阵网格游戏盘面，每个格子中放置一些符号。这些符号一定是成对出现的，同一个符号可能不止一对。程序读入玩家给出的一对位置(x1,y1)、(x2,y2)，判断这两个位置上的符号是否匹配。如果匹配成功，则将两个符号消为“*”并输出消去后的盘面；否则输出“Uh-oh”。若匹配错误达到3次，则输出“Game Over”并结束游戏。或者当全部符号匹配成功，则输出“Congratulations!”，然后结束游戏。 输入格式：输入在一行中给一个正整数N（&lt;5）。随后2N行，每行2N个大写英文字母（其间以1个空格分隔），表示游戏盘面。盘面之后给出一个正整数K，随后K行，每行按照格式“x1 y1 x2 y2”给出一个玩家的输入。注意格子的行、列编号是从1到2N。 输出格式：根据玩家的每一步输入，输出相应的结果。输出盘面时注意，每行字符间以1个空格分隔，行末不得有多余空格。 输入样例1：12345678910111213141516172I T I TY T I AT A T YI K K T111 1 1 34 2 4 33 1 4 22 2 1 23 1 2 44 4 3 12 1 3 43 3 1 44 1 2 32 4 3 21 1 2 2 输出样例1：12345678910111213141516171819202122232425262728293031* T * TY T I AT A T YI K K T* T * TY T I AT A T YI * * TUh-oh* * * TY * I AT A T YI * * TUh-oh* * * TY * I A* A T YI * * ** * * T* * I A* A T *I * * ** * * ** * I A* A * *I * * ** * * ** * * A* A * ** * * *Congratulations! 输入样例2：12345678910112I T I TY T I AT A T YI K K T51 1 4 41 1 2 31 1 2 32 2 4 12 2 3 3 输出样例2：12345678Uh-oh* T I TY T * AT A T YI K K TUh-ohUh-ohGame Over","text":"实验7-2-10 简易连连看（20 分）本题要求实现一个简易连连看游戏模拟程序。 给定一个2N×2N的方阵网格游戏盘面，每个格子中放置一些符号。这些符号一定是成对出现的，同一个符号可能不止一对。程序读入玩家给出的一对位置(x1,y1)、(x2,y2)，判断这两个位置上的符号是否匹配。如果匹配成功，则将两个符号消为“*”并输出消去后的盘面；否则输出“Uh-oh”。若匹配错误达到3次，则输出“Game Over”并结束游戏。或者当全部符号匹配成功，则输出“Congratulations!”，然后结束游戏。 输入格式：输入在一行中给一个正整数N（&lt;5）。随后2N行，每行2N个大写英文字母（其间以1个空格分隔），表示游戏盘面。盘面之后给出一个正整数K，随后K行，每行按照格式“x1 y1 x2 y2”给出一个玩家的输入。注意格子的行、列编号是从1到2N。 输出格式：根据玩家的每一步输入，输出相应的结果。输出盘面时注意，每行字符间以1个空格分隔，行末不得有多余空格。 输入样例1：12345678910111213141516172I T I TY T I AT A T YI K K T111 1 1 34 2 4 33 1 4 22 2 1 23 1 2 44 4 3 12 1 3 43 3 1 44 1 2 32 4 3 21 1 2 2 输出样例1：12345678910111213141516171819202122232425262728293031* T * TY T I AT A T YI K K T* T * TY T I AT A T YI * * TUh-oh* * * TY * I AT A T YI * * TUh-oh* * * TY * I A* A T YI * * ** * * T* * I A* A T *I * * ** * * ** * I A* A * *I * * ** * * ** * * A* A * ** * * *Congratulations! 输入样例2：12345678910112I T I TY T I AT A T YI K K T51 1 4 41 1 2 31 1 2 32 2 4 12 2 3 3 输出样例2：12345678Uh-oh* T I TY T * AT A T YI K K TUh-ohUh-ohGame Over 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(void)&#123; int x1,y1,x2,y2; int i,j,k; int N;//题目中的N char array[10][10]; int count=0;//计次匹配错误的次数 int m=0;//玩家输入的次数 int letterLeft;//盘面中剩余的字母个数，当减少到0时，则胜利 scanf(\"%i\",&amp;N); getchar(); letterLeft=2*N*2*N; for(i=0;i&lt;(2*N);i++) for(j=0;j&lt;(2*N);j++)&#123; array[i][j]=getchar(); getchar(); &#125; scanf(\"%d\",&amp;m); getchar(); for(i=0;i&lt;m;i++)&#123; scanf(\"%d %d %d %d\",&amp;x1,&amp;y1,&amp;x2,&amp;y2); //匹配成功，则将两个符号消为“*” if((array[x1-1][y1-1]==array[x2-1][y2-1]) &amp;&amp; (array[x1-1][y1-1]&lt;='Z' &amp;&amp; array[x1-1][y1-1]&gt;='A'))&#123; array[x1-1][y1-1]='*'; array[x2-1][y2-1]='*'; letterLeft=letterLeft-2; &#125; else&#123; printf(\"Uh-oh\\n\"); count++; continue; &#125; //若匹配错误达到3次，则输出“Game Over”并结束游戏 if(count==3)&#123; printf(\"Game Over\\n\"); exit(0); &#125; //当全部符号匹配成功，则输出“Congratulations!”，然后结束游戏 if(letterLeft==0)&#123; printf(\"Congratulations!\\n\"); exit(0); &#125; //输出盘面 for(j=0;j&lt;2*N;j++)&#123; for(k=0;k&lt;2*N-1;k++) printf(\"%c \",array[j][k]); printf(\"%c\\n\",array[j][2*N-1]); &#125; &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-9 螺旋方阵（20 分）","slug":"shryen7-2-9","date":"2017-12-20T09:47:00.000Z","updated":"2018-03-27T10:11:10.026Z","comments":true,"path":"2017/12/20/shryen7-2-9/","link":"","permalink":"/2017/12/20/shryen7-2-9/","excerpt":"实验7-2-9 螺旋方阵（20 分）所谓“螺旋方阵”，是指对任意给定的N，将1到N×N的数字从左上角第1个格子开始，按顺时针螺旋方向顺序填入N×N的方阵里。本题要求构造这样的螺旋方阵。 输入格式：输入在一行中给出一个正整数N（&lt;10）。 输出格式：输出N×N的螺旋方阵。每行N个数字，每个数字占3位。 输入样例：15 输出样例：12345 1 2 3 4 516 17 18 19 615 24 25 20 714 23 22 21 813 12 11 10 9","text":"实验7-2-9 螺旋方阵（20 分）所谓“螺旋方阵”，是指对任意给定的N，将1到N×N的数字从左上角第1个格子开始，按顺时针螺旋方向顺序填入N×N的方阵里。本题要求构造这样的螺旋方阵。 输入格式：输入在一行中给出一个正整数N（&lt;10）。 输出格式：输出N×N的螺旋方阵。每行N个数字，每个数字占3位。 输入样例：15 输出样例：12345 1 2 3 4 516 17 18 19 615 24 25 20 714 23 22 21 813 12 11 10 9 1234567891011121314151617181920212223242526272829303132333435363738394041424344#include&lt;stdio.h&gt;#define SIZE 10 int main()&#123; int a[SIZE][SIZE]=&#123;0&#125;; int N; scanf(\"%d\",&amp;N); //每条边的下标在x,y上的增量 int dx[]=&#123;0,1,0,-1&#125;; int dy[]=&#123;1,0,-1,0&#125;; int x=0,y=0,nx,ny,i,k=0; //k用来表示边，k=0,1,2,3 分别代表上，右，下，左 for(i=0;i&lt;N*N;i++) &#123; a[x][y]=i+1; nx=x+dx[k]; //下一个坐标的位置 ny=y+dy[k]; if(nx&lt;0 || nx==N || ny&lt;0 || ny==N || a[nx][ny]!=0) //下标越界或下标上已经赋值，转变方向 &#123; k=(k+1)%4; nx=x+dx[k]; ny=y+dy[k]; &#125; x=nx; y=ny; &#125; int j; for(i=0;i&lt;N;i++) &#123; for(j=0;j&lt;N;j++) &#123; printf(\"%3d\",a[i][j]); &#125; printf(\"\\n\"); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-8 找鞍点（20 分）","slug":"shryen7-2-8","date":"2017-12-20T09:39:00.000Z","updated":"2018-03-27T10:09:03.985Z","comments":true,"path":"2017/12/20/shryen7-2-8/","link":"","permalink":"/2017/12/20/shryen7-2-8/","excerpt":"实验7-2-8 找鞍点（20 分）一个矩阵元素的“鞍点”是指该位置上的元素值在该行上最大、在该列上最小。 本题要求编写程序，求一个给定的n阶方阵的鞍点。 输入格式：输入第一行给出一个正整数n（1≤n≤6）。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：输出在一行中按照“行下标 列下标”（下标从0开始）的格式输出鞍点的位置。如果鞍点不存在，则输出“NONE”。题目保证给出的矩阵至多存在一个鞍点。 输入样例1：1234541 7 4 14 8 3 61 6 1 20 7 8 9 输出样例1：12 1 输入样例2：12321 74 1 输出样例2：1NONE","text":"实验7-2-8 找鞍点（20 分）一个矩阵元素的“鞍点”是指该位置上的元素值在该行上最大、在该列上最小。 本题要求编写程序，求一个给定的n阶方阵的鞍点。 输入格式：输入第一行给出一个正整数n（1≤n≤6）。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：输出在一行中按照“行下标 列下标”（下标从0开始）的格式输出鞍点的位置。如果鞍点不存在，则输出“NONE”。题目保证给出的矩阵至多存在一个鞍点。 输入样例1：1234541 7 4 14 8 3 61 6 1 20 7 8 9 输出样例1：12 1 输入样例2：12321 74 1 输出样例2：1NONE 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;stdio.h&gt;int main()&#123; int a[6][6];//定义二维数组 int n; scanf(\"%d\",&amp;n); int i,j; for(i=0; i&lt;n; i++) for(j=0; j&lt;n; j++) &#123; scanf(\"%d\",&amp;a[i][j]); &#125; int k=0,y=0,flag=1,p=0; if(n==1) printf(\"0 0\");//只有一个点时，一定是鞍点 else &#123; for(i=0; i&lt;n; i++) &#123; y=i; for(p=0; p&lt;n; p++) //找行最大值 &#123; if(a[i][k]&lt;=a[i][p])//数组元素之间比较，若比a[i][k]大，则将数组列标赋给k &#123; k=p; &#125; &#125; for(j=0; j&lt;n; j++)//判断是否为列最小值 &#123; if(a[y][k]&gt;a[j][k])//若此行最大值不是列所在最小值，把小的行标赋给y &#123; y=j; break; &#125; &#125; if(i==y)//行最大且列最小，判断条件行标不改变 &#123; flag=0; break; &#125; &#125; if(flag==0) printf(\"%d %d\",i,k); else printf(\"NONE\"); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-7 方阵循环右移（20 分）","slug":"shryen7-2-7","date":"2017-12-20T09:19:00.000Z","updated":"2018-03-27T10:08:54.997Z","comments":true,"path":"2017/12/20/shryen7-2-7/","link":"","permalink":"/2017/12/20/shryen7-2-7/","excerpt":"实验7-2-7 方阵循环右移（20 分）本题要求编写程序，将给定n×n方阵中的每个元素循环向右移m个位置，即将第0、1、⋯、n−1列变换为第n−m、n−m+1、⋯、n−1、0、1、⋯、n−m−1列。 输入格式：输入第一行给出两个正整数m和n（1≤n≤6）。接下来一共n行，每行n个整数，表示一个n阶的方阵。 输出格式：按照输入格式输出移动后的方阵：即输出n行，每行n个整数，每个整数后输出一个空格。 输入样例：12342 31 2 34 5 67 8 9 输出样例：1232 3 1 5 6 4 8 9 7","text":"实验7-2-7 方阵循环右移（20 分）本题要求编写程序，将给定n×n方阵中的每个元素循环向右移m个位置，即将第0、1、⋯、n−1列变换为第n−m、n−m+1、⋯、n−1、0、1、⋯、n−m−1列。 输入格式：输入第一行给出两个正整数m和n（1≤n≤6）。接下来一共n行，每行n个整数，表示一个n阶的方阵。 输出格式：按照输入格式输出移动后的方阵：即输出n行，每行n个整数，每个整数后输出一个空格。 输入样例：12342 31 2 34 5 67 8 9 输出样例：1232 3 1 5 6 4 8 9 7 1234567891011121314151617181920#include &lt;stdio.h&gt; int main() &#123; int a[10][10]; int i,j,n,m; scanf(\"%d %d\",&amp;m,&amp;n); for(i=0;i&lt;n;i++) &#123; for(j=0;j&lt;n;j++) &#123; scanf(\"%d\",&amp;a[i][j]); m%=n; &#125; &#125; for(i=0;i&lt;n;i++) &#123; for(j=0;j&lt;n;j++) &#123; printf(\"%d \",a[i][(n-m+j)%n]); &#125; printf(\"\\n\"); &#125; return 0; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-5 打印杨辉三角（20 分）","slug":"shryen7-2-6","date":"2017-12-20T09:15:00.000Z","updated":"2018-03-27T10:08:49.425Z","comments":true,"path":"2017/12/20/shryen7-2-6/","link":"","permalink":"/2017/12/20/shryen7-2-6/","excerpt":"实验7-2-6 打印杨辉三角（20 分）本题要求按照规定格式打印前N行杨辉三角。 输入格式：输入在一行中给出N（1≤N≤10）。 输出格式：以正三角形的格式输出前N行杨辉三角。每个数字占固定4位。 输入样例：16 输出样例：123456 1 1 1 1 2 1 1 3 3 1 1 4 6 4 11 5 10 10 5 1","text":"实验7-2-6 打印杨辉三角（20 分）本题要求按照规定格式打印前N行杨辉三角。 输入格式：输入在一行中给出N（1≤N≤10）。 输出格式：以正三角形的格式输出前N行杨辉三角。每个数字占固定4位。 输入样例：16 输出样例：123456 1 1 1 1 2 1 1 3 3 1 1 4 6 4 11 5 10 10 5 1 12345678910111213141516171819202122232425262728#include &lt;stdio.h&gt;int main()&#123; int n; int a[50][50]=&#123;0&#125;; while(scanf(\"%d\",&amp;n)!=EOF) &#123; int i,j; a[0][10]=1; for(j=0;j&lt;n-1;j++) printf(\" \"); printf(\"%4d\\n\",a[0][10]); for(i=1;i&lt;n;i++) &#123; for(j=0;j&lt;n-i-1;j++) printf(\" \"); for(j=10-i;j&lt;10+1;j++) &#123; a[i][j]=a[i-1][j]+a[i-1][j+1]; if(j==10) printf(\"%4d\\n\",a[i][j]); else printf(\"%4d\",a[i][j]); &#125; &#125; &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-5 判断上三角矩阵（15 分）","slug":"shryen7-2-5","date":"2017-12-11T02:53:00.000Z","updated":"2018-03-27T10:08:42.931Z","comments":true,"path":"2017/12/11/shryen7-2-5/","link":"","permalink":"/2017/12/11/shryen7-2-5/","excerpt":"实验7-2-5 判断上三角矩阵（15 分）上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。 本题要求编写程序，判断一个给定的方阵是否上三角矩阵。 输入格式：输入第一行给出一个正整数T，为待测矩阵的个数。接下来给出T个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数n。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。 输入样例：12345678231 2 30 4 50 0 621 0-8 2 输出样例：12YESNO","text":"实验7-2-5 判断上三角矩阵（15 分）上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。 本题要求编写程序，判断一个给定的方阵是否上三角矩阵。 输入格式：输入第一行给出一个正整数T，为待测矩阵的个数。接下来给出T个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数n。随后n行，每行给出n个整数，其间以空格分隔。 输出格式：每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。 输入样例：12345678231 2 30 4 50 0 621 0-8 2 输出样例：12YESNO 1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;int main()&#123; int n; scanf(\"%d\",&amp;n); while (n--) &#123; int flag=1; int i=0; int size=0; int num=0; scanf(\"%d\",&amp;size); for (i=0;i&lt;size*size;i++) &#123; scanf(\"%d\",&amp;num); if ((i/size&gt;i%size)&amp;&amp;num!=0) flag=0; &#125; printf(flag?\"Yes\\n\":\"No\\n\"); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-4 计算天数（15 分）","slug":"shryen7-2-4","date":"2017-12-11T02:49:00.000Z","updated":"2018-03-27T10:08:35.783Z","comments":true,"path":"2017/12/11/shryen7-2-4/","link":"","permalink":"/2017/12/11/shryen7-2-4/","excerpt":"实验7-2-4 计算天数（15 分）本题要求编写程序计算某年某月某日是该年中的第几天。 输入格式:输入在一行中按照格式“yyyy/mm/dd”（即“年/月/日”）给出日期。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。闰年的2月有29天。 输出格式:在一行输出日期是该年中的第几天。 输入样例1:12009/03/02 输出样例1:161 输入样例2:12000/03/02 输出样例2:162","text":"实验7-2-4 计算天数（15 分）本题要求编写程序计算某年某月某日是该年中的第几天。 输入格式:输入在一行中按照格式“yyyy/mm/dd”（即“年/月/日”）给出日期。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。闰年的2月有29天。 输出格式:在一行输出日期是该年中的第几天。 输入样例1:12009/03/02 输出样例1:161 输入样例2:12000/03/02 输出样例2:162 12345678910111213141516171819#include&lt;stdio.h&gt;int main(int argc, const char * argv[])&#123; int year,month,day,i,num=0; int m[12]=&#123;31,28,31,30,31,30,31,31,30,31,30,31&#125;; scanf(\"%d/%d/%d\",&amp;year,&amp;month,&amp;day); if(((year%4==0)&amp;&amp;(year%100!=0))||(year%400==0)) &#123; if(month&gt;2) num=1; &#125; for(i=0;i&lt;(month-1);i++) &#123; num+=m[i]; &#125; num=num+day; printf(\"%d\",num); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-3 求矩阵的局部极大值（15 分）","slug":"shryen7-2-3","date":"2017-12-11T02:46:00.000Z","updated":"2018-03-27T10:08:29.539Z","comments":true,"path":"2017/12/11/shryen7-2-3/","link":"","permalink":"/2017/12/11/shryen7-2-3/","excerpt":"实验7-2-3 求矩阵的局部极大值（15 分）给定M行N列的整数矩阵A，如果A的非边界元素A[i][j]大于相邻的上下左右4个元素，那么就称元素A[i][j]是矩阵的局部极大值。本题要求给定矩阵的全部局部极大值及其所在的位置。 输入格式：输入在第一行中给出矩阵A的行数M和列数N（3≤M,N≤20）；最后M行，每行给出A在该行的N个元素的值。数字间以空格分隔。 输出格式：每行按照“元素值 行号 列号”的格式输出一个局部极大值，其中行、列编号从1开始。要求按照行号递增输出；若同行有超过1个局部极大值，则该行按列号递增输出。若没有局部极大值，则输出“None 总行数 总列数”。 输入样例1：123454 51 1 1 1 11 3 9 3 11 5 3 5 11 1 1 1 1 输出样例1：1239 2 35 3 25 3 4 输入样例2：12343 51 1 1 1 19 3 9 9 11 5 3 5 1 输出样例2：1None 3 5","text":"实验7-2-3 求矩阵的局部极大值（15 分）给定M行N列的整数矩阵A，如果A的非边界元素A[i][j]大于相邻的上下左右4个元素，那么就称元素A[i][j]是矩阵的局部极大值。本题要求给定矩阵的全部局部极大值及其所在的位置。 输入格式：输入在第一行中给出矩阵A的行数M和列数N（3≤M,N≤20）；最后M行，每行给出A在该行的N个元素的值。数字间以空格分隔。 输出格式：每行按照“元素值 行号 列号”的格式输出一个局部极大值，其中行、列编号从1开始。要求按照行号递增输出；若同行有超过1个局部极大值，则该行按列号递增输出。若没有局部极大值，则输出“None 总行数 总列数”。 输入样例1：123454 51 1 1 1 11 3 9 3 11 5 3 5 11 1 1 1 1 输出样例1：1239 2 35 3 25 3 4 输入样例2：12343 51 1 1 1 19 3 9 9 11 5 3 5 1 输出样例2：1None 3 5 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(int argc, char *argv[])&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); int** a = (int**)malloc(sizeof(int*)*m); //二维数组矩阵 int i, j; for (i = 0; i &lt; m; i++) &#123; a[i] = (int*)malloc(sizeof(int)*n); &#125; for (i = 0; i &lt; m; i++) &#123; for (j = 0; j &lt; n; j++) &#123; scanf(\"%d\", &amp;a[i][j]); &#125; &#125; int count = 0; for (i = 1; i &lt; m - 1; i++) &#123; for (j = 1; j &lt; n - 1; j++) &#123; if (a[i][j] &gt; a[i][j - 1] &amp;&amp; a[i][j] &gt; a[i - 1][j] &amp;&amp; a[i][j] &gt; a[i][j + 1] &amp;&amp; a[i][j] &gt; a[i + 1][j]) &#123; //判断上下左右的值 printf(\"%d %d %d\\n\", a[i][j], i + 1, j + 1); count++; &#125; &#125; &#125; for (i = 0; i &lt; m; i++) &#123; //释放动态二维数组 free(a[i]); a[i] = NULL; &#125; free(a); a = NULL; if (!count) printf(\"None %d %d\\n\", m, n); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-2 矩阵运算（20 分）","slug":"shryen7-2-2","date":"2017-12-11T02:39:00.000Z","updated":"2018-03-27T10:08:21.428Z","comments":true,"path":"2017/12/11/shryen7-2-2/","link":"","permalink":"/2017/12/11/shryen7-2-2/","excerpt":"实验7-2-2 矩阵运算（20 分）给定一个n×n的方阵，本题要求计算该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。副对角线为从矩阵的右上角至左下角的连线。 输入格式:输入第一行给出正整数n（1&lt;n≤10）；随后n行，每行给出n个整数，其间以空格分隔。 输出格式:在一行中给出该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。 输入样例:1234542 3 4 15 6 1 17 1 8 11 1 1 1 输出样例:135","text":"实验7-2-2 矩阵运算（20 分）给定一个n×n的方阵，本题要求计算该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。副对角线为从矩阵的右上角至左下角的连线。 输入格式:输入第一行给出正整数n（1&lt;n≤10）；随后n行，每行给出n个整数，其间以空格分隔。 输出格式:在一行中给出该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。 输入样例:1234542 3 4 15 6 1 17 1 8 11 1 1 1 输出样例:135 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;int main(void)&#123; int a[6][6]; int i,j,sum,n; printf(\"Input n: \"); scanf(\"%d\",&amp;n); printf(\"Input array: \\n\"); for(i=0;i&lt;n;i++)&#123; //this for(j=0;j&lt;n;j++) //and this scanf(\"%d\",&amp;a[i][j]); &#125; sum=0; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++) &#123; if((i+j!=(n-1))&amp;&amp;(i!=(n-1))&amp;&amp;(j!=(n-1))) sum=sum+a[i][j]; &#125; printf(\"sum=%d\\n\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-2-1 求矩阵各行元素之和（15 分）","slug":"shryen7-2-1","date":"2017-12-11T02:30:00.000Z","updated":"2018-03-27T10:08:13.167Z","comments":true,"path":"2017/12/11/shryen7-2-1/","link":"","permalink":"/2017/12/11/shryen7-2-1/","excerpt":"实验7-2-1 求矩阵各行元素之和（15 分）本题要求编写程序，求一个给定的m×n矩阵各行元素之和。 输入格式：输入第一行给出两个正整数m和n（1≤m,n≤6）。随后m行，每行给出n个整数，其间 以空格分隔。 输出格式：每行输出对应矩阵行元素之和。 输入样例：12343 26 31 -83 12 输出样例：1239-715","text":"实验7-2-1 求矩阵各行元素之和（15 分）本题要求编写程序，求一个给定的m×n矩阵各行元素之和。 输入格式：输入第一行给出两个正整数m和n（1≤m,n≤6）。随后m行，每行给出n个整数，其间 以空格分隔。 输出格式：每行输出对应矩阵行元素之和。 输入样例：12343 26 31 -83 12 输出样例：1239-715 123456789101112131415161718#include&lt;stdio.h&gt; main() &#123; int i,j,m,n,sum; printf(\"输入正整数m和n（1&lt;=m,n&lt;=6）:\"); scanf(\"%d%d\",&amp;m,&amp;n); int a[m][n]; printf(\"输入数:\\n\"); for(i=0;i&lt;m;i++) for(j=0;j&lt;n;j++) scanf(\"%d\",&amp;a[i][j]); for(i=0;i&lt;m;i++)&#123; sum=0; for(j=0;j&lt;n;j++)&#123; sum+=a[i][j]; &#125; printf(\"第%d行的和为：%d\\n\",i+1,sum); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-13 装箱问题（20 分）","slug":"shryen7-1-13","date":"2017-12-11T02:27:00.000Z","updated":"2018-03-27T10:08:05.355Z","comments":true,"path":"2017/12/11/shryen7-1-13/","link":"","permalink":"/2017/12/11/shryen7-1-13/","excerpt":"实验7-1-13 装箱问题（20 分）假设有N项物品，大小分别为s1、s2、…、si、…、sN，其中si为满足1≤si≤100的整数。要把这些物品装入到容量为100的一批箱子（序号1-N）中。装箱方法是：对每项物品, 顺序扫描箱子，把该物品放入足以能够容下它的第一个箱子中。请写一个程序模拟这种装箱过程，并输出每个物品所在的箱子序号，以及放置全部物品所需的箱子数目。 输入格式：输入第一行给出物品个数N（≤1000）；第二行给出N个正整数si（1≤si≤100，表示第i项物品的大小）。 输出格式：按照输入顺序输出每个物品的大小及其所在的箱子序号，每个物品占1行，最后一行输出所需的箱子数目。 输入样例：12860 70 80 90 30 40 10 20 输出样例：12345678960 170 280 390 430 140 510 120 25","text":"实验7-1-13 装箱问题（20 分）假设有N项物品，大小分别为s1、s2、…、si、…、sN，其中si为满足1≤si≤100的整数。要把这些物品装入到容量为100的一批箱子（序号1-N）中。装箱方法是：对每项物品, 顺序扫描箱子，把该物品放入足以能够容下它的第一个箱子中。请写一个程序模拟这种装箱过程，并输出每个物品所在的箱子序号，以及放置全部物品所需的箱子数目。 输入格式：输入第一行给出物品个数N（≤1000）；第二行给出N个正整数si（1≤si≤100，表示第i项物品的大小）。 输出格式：按照输入顺序输出每个物品的大小及其所在的箱子序号，每个物品占1行，最后一行输出所需的箱子数目。 输入样例：12860 70 80 90 30 40 10 20 输出样例：12345678960 170 280 390 430 140 510 120 25 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;math.h&gt;#include &lt;stdlib.h&gt;#include &lt;ctype.h&gt;#define TSIZE 45int main()&#123; int n,i,j,flag,max; int s[1000]; int dun[1000]; int biao[1000]; while(scanf(\"%d\",&amp;n)!=EOF) &#123; for(i=0;i&lt;100;i++) &#123; biao[i]=-1; &#125; for(i=0;i&lt;n;i++) &#123; scanf(\"%d\",&amp;s[i]); dun[i]=s[i]; &#125; biao[0]=0; for(i=1;i&lt;n;i++) &#123; for(j=0;j&lt;i;j++) &#123; flag=0; if(dun[i]+dun[j]&lt;=100) &#123; dun[j]=dun[j]+dun[i]; dun[i]=0; biao[i]=j; flag=1; break; &#125; &#125; if(flag==0) &#123; biao[i]=i; &#125; &#125; max=0; for(i=0;i&lt;n;i++) &#123; if(biao[i]&gt;max) max=biao[i]; &#125; for(i=0;i&lt;n;i++) printf(\"%d %d\\n\",s[i],biao[i]+1); printf(\"%d\\n\",max+1); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-12 组个最小数（20 分）","slug":"shryen7-1-12","date":"2017-12-11T02:16:00.000Z","updated":"2018-03-27T09:20:36.748Z","comments":true,"path":"2017/12/11/shryen7-1-12/","link":"","permalink":"/2017/12/11/shryen7-1-12/","excerpt":"实验7-1-12 组个最小数（20 分）给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。 现给定数字，请编写程序输出能够组成的最小的数。 输入格式：输入在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。 输出格式：在一行中输出能够组成的最小的数。 输入样例：12 2 0 0 0 3 0 0 1 0 输出样例：110015558","text":"实验7-1-12 组个最小数（20 分）给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。 现给定数字，请编写程序输出能够组成的最小的数。 输入格式：输入在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。 输出格式：在一行中输出能够组成的最小的数。 输入样例：12 2 0 0 0 3 0 0 1 0 输出样例：110015558 123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main()&#123; int a[10]=&#123;0&#125;,i,j; for(i=0;i&lt;10;i++) scanf(\"%d\",&amp;a[i]); for(i=1;i&lt;10;i++)//先输出第一个数 &#123; if(a[i]&gt;0) &#123; printf(\"%d\",i); a[i]--; break; &#125; &#125; for(i=0;i&lt;10;i++)//后面从小到大全部输出完 &#123; for(j=0;j&lt;a[i];j++) &#123; printf(\"%d\",i); &#125; &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-11 求整数序列中出现次数最多的数（15 分）","slug":"shryen7-1-11","date":"2017-12-11T02:12:00.000Z","updated":"2018-03-27T09:20:14.803Z","comments":true,"path":"2017/12/11/shryen7-1-11/","link":"","permalink":"/2017/12/11/shryen7-1-11/","excerpt":"实验7-1-11 求整数序列中出现次数最多的数（15 分）本题要求统计一个整型序列中出现次数最多的整数及其出现次数。 输入格式：输入在一行中给出序列中整数个数N（0&lt;N≤1000），以及N个整数。数字间以空格分隔。 输出格式：在一行中输出出现次数最多的整数及其出现次数，数字间以空格分隔。题目保证这样的数字是唯一的。 输入样例：110 3 2 -1 5 3 4 3 0 3 2 输出样例：13 4","text":"实验7-1-11 求整数序列中出现次数最多的数（15 分）本题要求统计一个整型序列中出现次数最多的整数及其出现次数。 输入格式：输入在一行中给出序列中整数个数N（0&lt;N≤1000），以及N个整数。数字间以空格分隔。 输出格式：在一行中输出出现次数最多的整数及其出现次数，数字间以空格分隔。题目保证这样的数字是唯一的。 输入样例：110 3 2 -1 5 3 4 3 0 3 2 输出样例：13 4 12345678910111213141516171819202122#include&lt;stdio.h&gt;int main(void)&#123; int a[1000],b[1000]=&#123;0&#125;,n,i,j,max,f=1,flag=1; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++)&#123; scanf(\"%d\",&amp;a[i]); &#125; for(i=0;i&lt;n;i++)&#123; for(j=0;j&lt;i;j++)&#123; if(a[j]==a[i])&#123;b[j]++;break;f=0;&#125; &#125; if(f) b[i]++; &#125; max=b[0]; for(i=0;i&lt;n;i++)&#123; if(max&lt;b[i])&#123;max=b[i];j=i;flag=0;&#125; &#125; if(flag) j=0; printf(\"%d %d\\n\",a[j],max); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-10 交换最小值和最大值（15 分）","slug":"shryen7-1-10","date":"2017-12-08T03:12:00.000Z","updated":"2018-03-27T10:07:16.626Z","comments":true,"path":"2017/12/08/shryen7-1-10/","link":"","permalink":"/2017/12/08/shryen7-1-10/","excerpt":"实验7-1-10 交换最小值和最大值（15 分）本题要求编写程序，先将输入的一系列整数中的最小值与第一个数交换，然后将最大值与最后一个数交换，最后输出交换后的序列。 注意：题目保证最大和最小值都是唯一的。 输入格式：输入在第一行中给出一个正整数N（≤10），第二行给出N个整数，数字间以空格分隔。 输出格式：在一行中顺序输出交换后的序列，每个整数后跟一个空格。 输入样例：1258 2 5 1 4 输出样例：11 2 5 4 8","text":"实验7-1-10 交换最小值和最大值（15 分）本题要求编写程序，先将输入的一系列整数中的最小值与第一个数交换，然后将最大值与最后一个数交换，最后输出交换后的序列。 注意：题目保证最大和最小值都是唯一的。 输入格式：输入在第一行中给出一个正整数N（≤10），第二行给出N个整数，数字间以空格分隔。 输出格式：在一行中顺序输出交换后的序列，每个整数后跟一个空格。 输入样例：1258 2 5 1 4 输出样例：11 2 5 4 8 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt; int main(void) &#123; int i,index,n,t; int a[10]; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++)&#123; scanf(\"%d\",&amp;a[i]); &#125; index=0; for(i=1;i&lt;n;i++)&#123; if(a[i]&lt;a[index])&#123; index=i; &#125; &#125; t=a[index]; /*最小值与第一个数交换 */ a[index]=a[0]; a[0]=t; index=0; for(i=1;i&lt;n;i++)&#123; if(a[i]&gt;a[index])&#123; index=i; &#125; &#125; t=a[index]; /*最大值与最后一个数交换 */ a[index]=a[n-1]; a[n-1]=t; for(i=0;i&lt;n;i++)&#123; printf(\"%d \",a[i]); &#125; printf(\"\\n\"); &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-9 数字加密（15 分）","slug":"shryen7-1-9","date":"2017-12-07T01:32:00.000Z","updated":"2018-03-27T10:07:10.953Z","comments":true,"path":"2017/12/07/shryen7-1-9/","link":"","permalink":"/2017/12/07/shryen7-1-9/","excerpt":"实验7-1-9 数字加密（15 分）输入一个四位数，将其加密后输出。方法是将该数每一位上的数字加9，然后除以10取余，做为该位上的新数字，最后将千位和十位上的数字互换，百位和个位上的数字互换，组成加密后的新四位数。例如输入1257，经过加9取余后得到新数字0146，再经过两次换位后得到4601。 输入格式：输入在一行中给出一个四位的整数x，即要求被加密的数。 输出格式：在一行中按照格式“The encrypted number is V”输出加密后得到的新数V。 输入样例：11257 输出样例：1The encrypted number is 4601","text":"实验7-1-9 数字加密（15 分）输入一个四位数，将其加密后输出。方法是将该数每一位上的数字加9，然后除以10取余，做为该位上的新数字，最后将千位和十位上的数字互换，百位和个位上的数字互换，组成加密后的新四位数。例如输入1257，经过加9取余后得到新数字0146，再经过两次换位后得到4601。 输入格式：输入在一行中给出一个四位的整数x，即要求被加密的数。 输出格式：在一行中按照格式“The encrypted number is V”输出加密后得到的新数V。 输入样例：11257 输出样例：1The encrypted number is 4601 123456789101112131415#include &lt;stdio.h&gt; void main( ) &#123; int number, digit1, digit2, digit3, digit4, newnum; scanf(\"%d\", &amp;number); digit1=number/1000; digit2=number%1000/100; digit3=number%1000%100/10; digit4=number%1000%100%10; digit1=(digit1+9)%10; digit2=(digit2+9)%10; digit3=(digit3+9)%10; digit4=(digit4+9)%10; newnum=digit3*1000+digit4*100+digit1*10+digit2; printf(\"The encrypted number is %d\\n\", newnum);&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-8 输出数组元素（15 分）","slug":"shryen7-1-8","date":"2017-12-07T00:48:00.000Z","updated":"2018-03-27T10:07:04.457Z","comments":true,"path":"2017/12/07/shryen7-1-8/","link":"","permalink":"/2017/12/07/shryen7-1-8/","excerpt":"实验7-1-8 输出数组元素（15 分）本题要求编写程序，对顺序读入的n个整数，顺次计算后项减前项之差，并按每行三个元素的格式输出结果。 输入格式：输入的第一行给出正整数n（1&lt;n≤10）。随后一行给出n个整数，其间以空格分隔。 输出格式：顺次计算后项减前项之差，并按每行三个元素的格式输出结果。数字间空一格，行末不得有多余空格。 输入样例：12105 1 7 14 6 36 4 28 50 100 输出样例：123-4 6 7-8 30 -3224 22 50","text":"实验7-1-8 输出数组元素（15 分）本题要求编写程序，对顺序读入的n个整数，顺次计算后项减前项之差，并按每行三个元素的格式输出结果。 输入格式：输入的第一行给出正整数n（1&lt;n≤10）。随后一行给出n个整数，其间以空格分隔。 输出格式：顺次计算后项减前项之差，并按每行三个元素的格式输出结果。数字间空一格，行末不得有多余空格。 输入样例：12105 1 7 14 6 36 4 28 50 100 输出样例：123-4 6 7-8 30 -3224 22 50 12345678910111213141516#include&lt;stdio.h&gt;void main()&#123; int a[10], b[10], i,j; scanf(\"%d\",&amp;j); for(i=0;i&lt;j;i++) scanf(\"%d\",&amp;a[i]); for(i=1;i&lt;j;i++) b[i-1]=a[i]-a[i-1]; for(i=0;i&lt;j-1;i++) &#123; printf(\"%3d\",b[i]); if(i%3==0) printf(\"\\n\"); &#125; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-7 查找整数（10 分）","slug":"shryen7-1-7","date":"2017-12-07T00:44:00.000Z","updated":"2018-03-27T10:06:57.397Z","comments":true,"path":"2017/12/07/shryen7-1-7/","link":"","permalink":"/2017/12/07/shryen7-1-7/","excerpt":"实验7-1-7 查找整数（10 分）本题要求从输入的N个整数中查找给定的X。如果找到，输出X的位置（从0开始数）；如果没有找到，输出“Not Found”。 输入格式：输入在第一行中给出两个正整数N（≤20）和X，第二行给出N个整数。数字均不超过长整型，其间以空格分隔。 输出格式：在一行中输出X的位置，或者“Not Found”。 输入样例1：125 73 5 7 1 9 输出样例1：12 输入样例2：125 73 5 8 1 9 输出样例2：1Not Found","text":"实验7-1-7 查找整数（10 分）本题要求从输入的N个整数中查找给定的X。如果找到，输出X的位置（从0开始数）；如果没有找到，输出“Not Found”。 输入格式：输入在第一行中给出两个正整数N（≤20）和X，第二行给出N个整数。数字均不超过长整型，其间以空格分隔。 输出格式：在一行中输出X的位置，或者“Not Found”。 输入样例1：125 73 5 7 1 9 输出样例1：12 输入样例2：125 73 5 8 1 9 输出样例2：1Not Found 123456789101112131415161718#include&lt;stdio.h&gt;int main()&#123; int n,x,i,flag=1; scanf(\"%d %d\",&amp;n,&amp;x); long int str[25]; for(i=0;i&lt;n;i++)&#123; scanf(\"%ld\",&amp;str[i]); &#125; for(i=0;i&lt;n;i++)&#123; if(str[i]==x)&#123; printf(\"%d\",i); flag=0; &#125; &#125; if(flag) printf(\"Not Found\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-6 求一批整数中出现最多的个位数字（20 分）","slug":"shryen7-1-6","date":"2017-12-07T00:42:00.000Z","updated":"2018-03-27T10:06:50.941Z","comments":true,"path":"2017/12/07/shryen7-1-6/","link":"","permalink":"/2017/12/07/shryen7-1-6/","excerpt":"实验7-1-6 求一批整数中出现最多的个位数字（20 分）给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多次数的数字是3和4，均出现了3次。 输入格式：输入在第1行中给出正整数N（≤1000），在第二行中给出N个不超过整型范围的非负整数，数字间以空格分隔。 输出格式：在一行中按格式“M: n1 n2 …”输出，其中M是最大次数，n1、n2、……为出现次数最多的个位数字，按从小到大的顺序排列。数字间以空格分隔，但末尾不得有多余空格。 输入样例：1231234 2345 3456 输出样例：13: 3 4","text":"实验7-1-6 求一批整数中出现最多的个位数字（20 分）给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多次数的数字是3和4，均出现了3次。 输入格式：输入在第1行中给出正整数N（≤1000），在第二行中给出N个不超过整型范围的非负整数，数字间以空格分隔。 输出格式：在一行中按格式“M: n1 n2 …”输出，其中M是最大次数，n1、n2、……为出现次数最多的个位数字，按从小到大的顺序排列。数字间以空格分隔，但末尾不得有多余空格。 输入样例：1231234 2345 3456 输出样例：13: 3 4 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;stdio.h&gt;int main()&#123; int num[1000]; //输入正整数N int n; scanf(\"%d\",&amp;n); //输入N个正整数存入数组Num int i; for(i=0;i&lt;n;i++)&#123; scanf(\"%d\",&amp;num[i]); &#125; int count[10]=&#123;0&#125;;//0-9计数 int a,temp,mask ; for(i=0;i&lt;n;i++)&#123; temp = num[i]; mask = 1; while(temp &gt; 9)&#123; temp /= 10; mask *= 10; &#125; while(mask&gt;0)&#123; a = num[i] / mask; count[a]++; num[i] %= mask; mask /= 10; &#125; &#125; int max[10],nmax=0; int numOfMax=0; //遍历count[]，找出最大值，并且存入max[] max[0] = -1; for(i=0;i&lt;10;i++)&#123; if(count[i] &gt; numOfMax)&#123; nmax = 0; numOfMax = count[i]; max[nmax] = i; &#125; else if(count[i] == numOfMax)&#123; nmax++; max[nmax] = i; &#125; &#125; //输出 printf(\"%d:\",numOfMax); for(i=0;i&lt;=nmax;i++)&#123; printf(\" %d\",max[i]); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-4 找出不是两个数组共有的元素（20 分）","slug":"shryen7-1-4","date":"2017-12-01T02:35:00.000Z","updated":"2018-03-27T10:06:32.970Z","comments":true,"path":"2017/12/01/shryen7-1-4/","link":"","permalink":"/2017/12/01/shryen7-1-4/","excerpt":"实验7-1-4 找出不是两个数组共有的元素（3 分）给定两个整型数组，本题要求找出不是两者共有的元素。 输入格式:输入分别在两行中给出两个整型数组，每行先给出正整数N（≤20），随后是N个整数，其间以空格分隔。 输出格式:在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。题目保证至少存在一个这样的数字。同一数字不重复输出。 输入样例:1210 3 -5 2 8 0 3 5 -15 9 10011 6 4 8 2 6 -5 9 0 100 8 1 输出样例:13 5 -15 6 4 1","text":"实验7-1-4 找出不是两个数组共有的元素（3 分）给定两个整型数组，本题要求找出不是两者共有的元素。 输入格式:输入分别在两行中给出两个整型数组，每行先给出正整数N（≤20），随后是N个整数，其间以空格分隔。 输出格式:在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。题目保证至少存在一个这样的数字。同一数字不重复输出。 输入样例:1210 3 -5 2 8 0 3 5 -15 9 10011 6 4 8 2 6 -5 9 0 100 8 1 输出样例:13 5 -15 6 4 1 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#include&lt;stdio.h&gt;int main(void)&#123; int n,m,a[20],b[20],c[40],i,j,d,k=0,f,e=0,flag1,flag2; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++)&#123; scanf(\"%d\",&amp;a[i]); &#125; scanf(\"%d\",&amp;m); for(j=0;j&lt;m;j++)&#123; scanf(\"%d\",&amp;b[j]); &#125; for(i=0;i&lt;n;i++) for(j=0;j&lt;m;j++)&#123; if(a[i]==b[j])&#123; c[k]=a[i];k++; &#125; &#125; if(k==0)&#123; for(i=0;i&lt;n;i++)&#123; if(e==0)&#123;printf(\"%d\",a[i]);e++;&#125; else printf(\" %d\",a[i]); &#125; for(j=0;j&lt;m;j++)&#123; if(e==0)&#123;printf(\"%d\",b[j]);e++;&#125; else printf(\" %d\",b[j]); &#125; &#125; for(i=0;i&lt;n;i++)&#123; flag1=1; for(j=0;j&lt;k;j++)&#123; if(a[i]!=c[j]) f=1; else&#123;f=0;break;&#125; &#125; if(f)&#123; for(d=0;d&lt;i;++d)&#123; if(a[d]==a[i]) &#123;flag1=0;break;&#125; &#125; if(flag1)&#123; if(e==0)&#123;printf(\"%d\",a[i]);e++;&#125; else printf(\" %d\",a[i]); &#125; &#125; &#125; for(i=0;i&lt;m;i++)&#123; for(j=0;j&lt;k;j++)&#123; flag2=1; if(b[i]!=c[j]) f=1; else&#123;f=0;break;&#125; &#125; if(f)&#123; for(d=0;d&lt;i;++d)&#123; if(b[d]==b[i])&#123;flag2=0;break;&#125; &#125; if(flag2)&#123; if(e==0)&#123;printf(\"%d\",b[i]);e++;&#125; else printf(\" %d\",b[i]); &#125; &#125; &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-5 选择法排序（20 分）","slug":"shryen7-1-5","date":"2017-12-01T02:35:00.000Z","updated":"2018-03-27T10:06:43.089Z","comments":true,"path":"2017/12/01/shryen7-1-5/","link":"","permalink":"/2017/12/01/shryen7-1-5/","excerpt":"实验7-1-5 选择法排序（20 分）本题要求将给定的n个整数从大到小排序后输出。 输入格式：输入第一行给出一个不超过10的正整数n。第二行给出n个整数，其间以空格分隔。 输出格式：在一行中输出从大到小有序的数列，相邻数字间有一个空格，行末不得有多余空格。 输入样例：1245 1 7 6 输出样例：17 6 5 1","text":"实验7-1-5 选择法排序（20 分）本题要求将给定的n个整数从大到小排序后输出。 输入格式：输入第一行给出一个不超过10的正整数n。第二行给出n个整数，其间以空格分隔。 输出格式：在一行中输出从大到小有序的数列，相邻数字间有一个空格，行末不得有多余空格。 输入样例：1245 1 7 6 输出样例：17 6 5 1 123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;int main(void)&#123; int i,index,k,n,temp; int a[10]; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++) scanf(\"%d\",&amp;a[i]); for(k=0;k&lt;n-1;k++) &#123; index=k; for(i=k+1;i&lt;n;i++) if(a[i]&gt;a[index])&#123; index=i; &#125; temp=a[index]; a[index]=a[k]; a[k]=temp; &#125; for(i=0;i&lt;n;i++) printf(\"%d \",a[i]); putchar('\\n'); &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-3 将数组中的数逆序存放（20 分）","slug":"shryen7-1-3","date":"2017-12-01T01:40:00.000Z","updated":"2018-03-27T10:06:26.426Z","comments":true,"path":"2017/12/01/shryen7-1-3/","link":"","permalink":"/2017/12/01/shryen7-1-3/","excerpt":"实验7-1-3 将数组中的数逆序存放（20 分）本题要求编写程序，将给定的n个整数存入数组中，将数组中的这n个数逆序存放，再按顺序输出数组中的元素。 输入格式:输入在第一行中给出一个正整数n（1≤n≤10）。第二行输入n个整数，用空格分开。 输出格式:在一行中输出这n个整数的处理结果，相邻数字中间用一个空格分开，行末不得有多余空格。 输入样例:12410 8 1 2 输出样例:12 1 8 10","text":"实验7-1-3 将数组中的数逆序存放（20 分）本题要求编写程序，将给定的n个整数存入数组中，将数组中的这n个数逆序存放，再按顺序输出数组中的元素。 输入格式:输入在第一行中给出一个正整数n（1≤n≤10）。第二行输入n个整数，用空格分开。 输出格式:在一行中输出这n个整数的处理结果，相邻数字中间用一个空格分开，行末不得有多余空格。 输入样例:12410 8 1 2 输出样例:12 1 8 10 123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main(void)&#123; int i,n,temp; int ri; int a[10]; scanf(\"%d\",&amp;n); for(i=0;i&lt;n;i++) scanf(\"%d\",&amp;a[i]); i=0; for(i=0;i&lt;n/2;i++) &#123; temp=a[i]; a[i]=a[n-1-i]; a[n-1-i]=temp; &#125; for(i=0;i&lt;n;i++) printf(\"%d \",a[i]); putchar('\\n'); &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-2 求最大值及其下标（20 分）","slug":"shryen7-1-2","date":"2017-12-01T01:40:00.000Z","updated":"2018-03-27T10:06:10.318Z","comments":true,"path":"2017/12/01/shryen7-1-2/","link":"","permalink":"/2017/12/01/shryen7-1-2/","excerpt":"实验7-1-2 求最大值及其下标（20 分）本题要求编写程序，找出给定的n个数中的最大值及其对应的最小下标（下标从0开始）。 输入格式:输入在第一行中给出一个正整数n（1&lt;n≤10）。第二行输入n个整数，用空格分开。 输出格式:在一行中输出最大值及最大值的最小下标，中间用一个空格分开。 输入样例:1262 8 10 1 9 10 输出样例:110 2","text":"实验7-1-2 求最大值及其下标（20 分）本题要求编写程序，找出给定的n个数中的最大值及其对应的最小下标（下标从0开始）。 输入格式:输入在第一行中给出一个正整数n（1&lt;n≤10）。第二行输入n个整数，用空格分开。 输出格式:在一行中输出最大值及最大值的最小下标，中间用一个空格分开。 输入样例:1262 8 10 1 9 10 输出样例:110 2 12345678910111213141516171819#include &lt;stdio.h&gt; int main( ) &#123; int i, index, n, temp; int a[10]; scanf(\"%d\", &amp;n); for(i = 0; i &lt; n; i++) scanf(\"%d\", &amp;a[i]); index=0; a[index]=a[0]; for(i=1;i&lt;n;i++)&#123; if(a[index]&lt;a[i])&#123; a[index]=a[i]; index=i; &#125; &#125; printf(\"%d %d\\n\", a[index],index); &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验7-1-1 简化的插入排序（15 分）","slug":"shryen7-1-1","date":"2017-12-01T01:34:00.000Z","updated":"2018-03-27T10:05:57.966Z","comments":true,"path":"2017/12/01/shryen7-1-1/","link":"","permalink":"/2017/12/01/shryen7-1-1/","excerpt":"实验7-1-1 简化的插入排序（15 分）本题要求编写程序，将一个给定的整数插到原本有序的整数序列中，使结果序列仍然有序。 输入格式：输入在第一行先给出非负整数N（&lt;10）；第二行给出N个从小到大排好顺序的整数；第三行给出一个整数X。 输出格式：在一行内输出将X插入后仍然从小到大有序的整数序列，每个数字后面有一个空格。 输入样例：12351 2 4 5 73 输出样例：11 2 3 4 5 7","text":"实验7-1-1 简化的插入排序（15 分）本题要求编写程序，将一个给定的整数插到原本有序的整数序列中，使结果序列仍然有序。 输入格式：输入在第一行先给出非负整数N（&lt;10）；第二行给出N个从小到大排好顺序的整数；第三行给出一个整数X。 输出格式：在一行内输出将X插入后仍然从小到大有序的整数序列，每个数字后面有一个空格。 输入样例：12351 2 4 5 73 输出样例：11 2 3 4 5 7 12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;stdio.h&gt;int main()&#123; int N; scanf(\"%d\",&amp;N); int i; int a[10]; for(i=0;i&lt;N;i++)&#123; scanf(\"%d\",&amp;a[i]); &#125; int x; scanf(\"%d\",&amp;x); int j; for(i=0;i&lt;N;i++)&#123; if(x&gt;a[i])&#123; continue; &#125; else &#123; j=N-1; while(j&gt;=i)&#123; a[j+1]=a[j]; j--; &#125; a[i]=x; break; &#125; &#125; if(i==N)&#123; a[N]=x; &#125; for(i=0;i&lt;N+1;i++)&#123; printf(\"%d \",a[i]); &#125; putchar('\\n'); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"习题6-8 统计一行文本的单词个数（15 分）","slug":"siti6-8","date":"2017-11-30T14:07:00.000Z","updated":"2018-03-30T07:10:41.269Z","comments":true,"path":"2017/11/30/siti6-8/","link":"","permalink":"/2017/11/30/siti6-8/","excerpt":"习题6-8 统计一行文本的单词个数（15 分）本题目要求编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。 输入格式:输入给出一行字符。 输出格式:在一行中输出单词个数。 输入样例:1Let&apos;s go to room 209. 输出样例:15","text":"习题6-8 统计一行文本的单词个数（15 分）本题目要求编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。 输入格式:输入给出一行字符。 输出格式:在一行中输出单词个数。 输入样例:1Let&apos;s go to room 209. 输出样例:15 1234567891011121314151617181920#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; char a[1000]; gets(a); int m,i,j; m=strlen(a); if(a[0]==' ') j=0; else j=1; for(i=0;i&lt;m-1;i++) &#123; if(a[i]==' ' &amp;&amp; a[i+1]!=' ') j++; &#125; printf(\"%d\\n\",j); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"习题6-7 简单计算器（20 分）","slug":"siti6-7","date":"2017-11-30T14:05:00.000Z","updated":"2018-03-30T07:10:20.735Z","comments":true,"path":"2017/11/30/siti6-7/","link":"","permalink":"/2017/11/30/siti6-7/","excerpt":"习题6-7 简单计算器（20 分）模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。 输入格式:输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。 输出格式:在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。 输入样例:11+2*10-10/2= 输出样例:110","text":"习题6-7 简单计算器（20 分）模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。 输入格式:输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。 输出格式:在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。 输入样例:11+2*10-10/2= 输出样例:110 1234567891011121314151617181920#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; char a[1000]; gets(a); int m,i,j; m=strlen(a); if(a[0]==' ') j=0; else j=1; for(i=0;i&lt;m-1;i++) &#123; if(a[i]==' ' &amp;&amp; a[i+1]!=' ') j++; &#125; printf(\"%d\\n\",j); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计（第3版）》题目集/"}]},{"title":"实验6-9 统计一行文本的单词个数（15 分）","slug":"shryen6-9","date":"2017-11-30T14:03:00.000Z","updated":"2018-03-27T10:05:22.910Z","comments":true,"path":"2017/11/30/shryen6-9/","link":"","permalink":"/2017/11/30/shryen6-9/","excerpt":"实验6-9 统计一行文本的单词个数（15 分）本题目要求编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。 输入格式:输入给出一行字符。 输出格式:在一行中输出单词个数。 输入样例:1Let&apos;s go to room 209. 输出样例:15","text":"实验6-9 统计一行文本的单词个数（15 分）本题目要求编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。 输入格式:输入给出一行字符。 输出格式:在一行中输出单词个数。 输入样例:1Let&apos;s go to room 209. 输出样例:15 1234567891011121314151617181920#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; char a[1000]; gets(a); int m,i,j; m=strlen(a); if(a[0]==' ') j=0; else j=1; for(i=0;i&lt;m-1;i++) &#123; if(a[i]==' ' &amp;&amp; a[i+1]!=' ') j++; &#125; printf(\"%d\\n\",j); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-8 简单计算器（20 分）","slug":"shryen6-8","date":"2017-11-30T13:59:00.000Z","updated":"2018-03-27T10:05:15.894Z","comments":true,"path":"2017/11/30/shryen6-8/","link":"","permalink":"/2017/11/30/shryen6-8/","excerpt":"实验6-8 简单计算器（20 分）模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。 输入格式:输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。 输出格式:在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。 输入样例:11+2*10-10/2= 输出样例:110","text":"实验6-8 简单计算器（20 分）模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。 输入格式:输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。 输出格式:在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。 输入样例:11+2*10-10/2= 输出样例:110 123456789101112131415161718192021222324252627282930313233#include&lt;stdio.h&gt;int main(void)&#123;int a,b;char ch;scanf(\"%d %c %d\",&amp;a,&amp;ch,&amp;b);if(ch!='+'&amp;&amp;ch!='-'&amp;&amp;ch!='*'&amp;&amp;ch!='/'&amp;&amp;ch!='%')printf(\"ERROR\");else&#123;if(ch=='+') printf(\"%d\",a+b);if(ch=='-') printf(\"%d\",a-b);if(ch=='*') printf(\"%d\",a*b);if(ch=='/') printf(\"%d\",a/b);if(ch=='%') printf(\"%d\",a%b);&#125;return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-7 使用函数输出一个整数的逆序数（20 分）","slug":"shryen6-7","date":"2017-11-30T02:30:00.000Z","updated":"2018-03-27T10:05:08.707Z","comments":true,"path":"2017/11/30/shryen6-7/","link":"","permalink":"/2017/11/30/shryen6-7/","excerpt":"实验6-7 使用函数输出一个整数的逆序数（20 分）本题要求实现一个求整数的逆序数的简单函数。 函数接口定义：1int reverse( int number ); 其中函数reverse须返回用户传入的整型number的逆序数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int reverse( int number );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", reverse(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-12340 输出样例：1-4321","text":"实验6-7 使用函数输出一个整数的逆序数（20 分）本题要求实现一个求整数的逆序数的简单函数。 函数接口定义：1int reverse( int number ); 其中函数reverse须返回用户传入的整型number的逆序数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int reverse( int number );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", reverse(n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-12340 输出样例：1-4321 1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;int reverse( int number );int main()&#123; int n; scanf(\"%d\", &amp;n); printf(\"%d\\n\", reverse(n)); return 0;&#125;/* -12340 -&gt; -4321 */int reverse( int number )&#123; int i=1,a,sum=0; if(number&lt;0)&#123; number=-number; i=-1; &#125; while(number)&#123; a = number%10; sum = sum * 10 +a; number/=10; &#125; sum*=i; return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-6 使用函数验证哥德巴赫猜想（20 分）","slug":"shryen6-6","date":"2017-11-30T02:27:00.000Z","updated":"2018-03-27T10:04:53.709Z","comments":true,"path":"2017/11/30/shryen6-6/","link":"","permalink":"/2017/11/30/shryen6-6/","excerpt":"实验6-6 使用函数验证哥德巴赫猜想（20 分）本题要求实现一个判断素数的简单函数，并利用该函数验证哥德巴赫猜想：任何一个不小于6的偶数均可表示为两个奇素数之和。素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );void Goldbach( int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数Goldbach按照格式“n=p+q”输出n的素数分解，其中p≤q均为素数。又因为这样的分解不唯一（例如24可以分解为5+19，还可以分解为7+17），要求必须输出所有解中p最小的解。 裁判测试程序样例：1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );void Goldbach( int n );int main()&#123; int m, n, i, cnt; scanf(\"%d %d\", &amp;m, &amp;n); if ( prime(m) != 0 ) printf(\"%d is a prime number\\n\", m); if ( m &lt; 6 ) m = 6; if ( m%2 ) m++; cnt = 0; for( i=m; i&lt;=n; i+=2 ) &#123; Goldbach(i); cnt++; if ( cnt%5 ) printf(\", \"); else printf(\"\\n\"); &#125; return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：189 100 输出样例：12389 is a prime number90=7+83, 92=3+89, 94=5+89, 96=7+89, 98=19+79100=3+97,","text":"实验6-6 使用函数验证哥德巴赫猜想（20 分）本题要求实现一个判断素数的简单函数，并利用该函数验证哥德巴赫猜想：任何一个不小于6的偶数均可表示为两个奇素数之和。素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );void Goldbach( int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数Goldbach按照格式“n=p+q”输出n的素数分解，其中p≤q均为素数。又因为这样的分解不唯一（例如24可以分解为5+19，还可以分解为7+17），要求必须输出所有解中p最小的解。 裁判测试程序样例：1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );void Goldbach( int n );int main()&#123; int m, n, i, cnt; scanf(\"%d %d\", &amp;m, &amp;n); if ( prime(m) != 0 ) printf(\"%d is a prime number\\n\", m); if ( m &lt; 6 ) m = 6; if ( m%2 ) m++; cnt = 0; for( i=m; i&lt;=n; i+=2 ) &#123; Goldbach(i); cnt++; if ( cnt%5 ) printf(\", \"); else printf(\"\\n\"); &#125; return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：189 100 输出样例：12389 is a prime number90=7+83, 92=3+89, 94=5+89, 96=7+89, 98=19+79100=3+97, 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );void Goldbach( int n );int main() &#123; int m, n, i, cnt; scanf(\"%d %d\", &amp;m, &amp;n); if ( prime(m) != 0 ) printf(\"%d is a prime number\\n\", m); if ( m &lt; 6 ) m = 6; if ( m%2 ) m++; cnt = 0; for( i=m; i&lt;=n; i+=2 ) &#123; Goldbach(i); cnt++; if ( cnt%5 ) printf(\", \"); else printf(\"\\n\"); &#125; return 0;&#125;int prime( int p ) &#123; int i,count=0; for(i=2; i&lt;p; i++) &#123; if(p%i==0) &#123; count++; &#125; &#125; if(count==0&amp;&amp;p!=1) &#123; return 1; &#125; else &#123; return 0; &#125;&#125;void Goldbach( int n ) &#123; int i,k; if(prime(n) == 0) &#123; for(i=2; i&lt;n; i++) &#123; if(prime(i)!=0) &#123; k=n-i; if(prime(k)!=0) &#123; printf(\"%d=%d+%d\",n,i,k); break; &#125; &#125; &#125; &#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-5 使用函数输出指定范围内的Fibonacci数（20 分）","slug":"shryen6-5","date":"2017-11-30T02:18:00.000Z","updated":"2018-03-27T10:04:42.967Z","comments":true,"path":"2017/11/30/shryen6-5/","link":"","permalink":"/2017/11/30/shryen6-5/","excerpt":"实验6-5 使用函数输出指定范围内的Fibonacci数（20 分）本题要求实现一个计算Fibonacci数的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有Fibonacci数。所谓Fibonacci数列就是满足任一项数字是前两项的和（最开始两项均定义为1）的数列。 函数接口定义：12int fib( int n );void PrintFN( int m, int n ); 其中函数fib须返回第n项Fibonacci数；函数PrintFN要在一行中输出给定范围[m, n]内的所有Fibonacci数，相邻数字间有一个空格，行末不得有多余空格。如果给定区间内没有Fibonacci数，则输出一行“No Fibonacci number”。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fib( int n );void PrintFN( int m, int n ); int main()&#123; int m, n, t; scanf(\"%d %d %d\", &amp;m, &amp;n, &amp;t); printf(\"fib(%d) = %d\\n\", t, fib(t)); PrintFN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：120 100 7 输出样例1：12fib(7) = 1321 34 55 89 输入样例2：12000 2500 8 输出样例2：12fib(8) = 21No Fibonacci number","text":"实验6-5 使用函数输出指定范围内的Fibonacci数（20 分）本题要求实现一个计算Fibonacci数的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有Fibonacci数。所谓Fibonacci数列就是满足任一项数字是前两项的和（最开始两项均定义为1）的数列。 函数接口定义：12int fib( int n );void PrintFN( int m, int n ); 其中函数fib须返回第n项Fibonacci数；函数PrintFN要在一行中输出给定范围[m, n]内的所有Fibonacci数，相邻数字间有一个空格，行末不得有多余空格。如果给定区间内没有Fibonacci数，则输出一行“No Fibonacci number”。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fib( int n );void PrintFN( int m, int n ); int main()&#123; int m, n, t; scanf(\"%d %d %d\", &amp;m, &amp;n, &amp;t); printf(\"fib(%d) = %d\\n\", t, fib(t)); PrintFN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：120 100 7 输出样例1：12fib(7) = 1321 34 55 89 输入样例2：12000 2500 8 输出样例2：12fib(8) = 21No Fibonacci number 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;int fib( int n );void PrintFN( int m, int n );int main()&#123; int m, n, t; scanf(\"%d %d %d\", &amp;m, &amp;n, &amp;t); printf(\"fib(%d) = %d\\n\", t, fib(t)); PrintFN(m, n); return 0;&#125;int fib( int n )&#123;if(n==1||n==2)&#123;return 1;&#125;if(n&gt;2)&#123;return fib(n-1)+fib(n-2);&#125;&#125;void PrintFN( int m, int n )&#123;int i=0,j,k=1,count=0;for(j=0;j&lt;=21;j++)&#123; i++; if(fib(i)&gt;=m&amp;&amp;fib(i)&lt;=n)&#123; count++; printf(\"%d \",fib(i));&#125; &#125;if(count==0)&#123; printf(\"No Fibonacci number\");&#125;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-4 使用函数输出指定范围内的完数（20 分）","slug":"shryen6-4","date":"2017-11-29T02:23:00.000Z","updated":"2018-03-27T10:04:29.742Z","comments":true,"path":"2017/11/29/shryen6-4/","link":"","permalink":"/2017/11/29/shryen6-4/","excerpt":"实验6-4 使用函数输出指定范围内的完数（20 分）本题要求实现一个计算整数因子和的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有完数。所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。 函数接口定义：12int factorsum( int number );void PrintPN( int m, int n ); 其中函数factorsum须返回int number的因子和；函数PrintPN要逐行输出给定范围[m, n]内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。如果给定区间内没有完数，则输出一行“No perfect number”。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int factorsum( int number );void PrintPN( int m, int n ); int main()&#123; int i, m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m); if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n); PrintPN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：11 30 输出样例1：12341 is a perfect number1 = 16 = 1 + 2 + 328 = 1 + 2 + 4 + 7 + 14 输入样例2：17 25 输出样例2：1No perfect number","text":"实验6-4 使用函数输出指定范围内的完数（20 分）本题要求实现一个计算整数因子和的简单函数，并利用其实现另一个函数，输出两正整数m和n（0&lt;m≤n≤10000）之间的所有完数。所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。 函数接口定义：12int factorsum( int number );void PrintPN( int m, int n ); 其中函数factorsum须返回int number的因子和；函数PrintPN要逐行输出给定范围[m, n]内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。如果给定区间内没有完数，则输出一行“No perfect number”。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int factorsum( int number );void PrintPN( int m, int n ); int main()&#123; int i, m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m); if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n); PrintPN(m, n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：11 30 输出样例1：12341 is a perfect number1 = 16 = 1 + 2 + 328 = 1 + 2 + 4 + 7 + 14 输入样例2：17 25 输出样例2：1No perfect number 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;stdio.h&gt;#define N 100int factorsum( int number );void PrintPN( int m, int n ); int main()&#123; int i, m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( factorsum(m) == m ) printf(\"%d is a perfect number\\n\", m); if ( factorsum(n) == n ) printf(\"%d is a perfect number\\n\", n); PrintPN(m, n); return 0;&#125;int factorsum( int number )&#123; int a[N],i,j=0,n=0,sum=0; if(number == 1) return 1; for(i=1;i&lt;number;i++) if(number%i==0)&#123; a[j++]=i; &#125; for(i=0;i&lt;j;i++) sum+=a[i]; if(sum == number) return 1; return 0; &#125; void PrintPN( int m, int n )&#123; int i,j,k=0,l,a[N]; if(m==1)&#123; printf(\"%d = %d\\n\",m , m); m+=1; &#125; for(i=m;i&lt;=n;i++)&#123; if(factorsum(i)==1)&#123; for(j=1;j&lt;i;j++)&#123; if(i%j==0)&#123; a[k++]=j; &#125; &#125; printf(\"%d = \", i); for(l=0;l&lt;k-1;l++) printf(\"%d + \", a[l]); printf(\"%d\\n\", a[l]); k=0; &#125; &#125; &#125; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-3 使用函数求特殊a串数列和（20 分）","slug":"shryen6-3","date":"2017-11-29T02:21:00.000Z","updated":"2018-03-27T10:04:19.614Z","comments":true,"path":"2017/11/29/shryen6-3/","link":"","permalink":"/2017/11/29/shryen6-3/","excerpt":"实验6-3 使用函数求特殊a串数列和（20 分）给定两个均不超过9的正整数a和n，要求编写函数求a+aa+aaa++⋯+aa⋯a（n个a）之和。 函数接口定义：12int fn( int a, int n );int SumA( int a, int n ); 其中函数fn须返回的是n个a组成的数字；SumA返回要求的和。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fn( int a, int n );int SumA( int a, int n ); int main()&#123; int a, n; scanf(\"%d %d\", &amp;a, &amp;n); printf(\"fn(%d, %d) = %d\\n\", a, n, fn(a,n)); printf(\"s = %d\\n\", SumA(a,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：12fn(2, 3) = 222s = 246","text":"实验6-3 使用函数求特殊a串数列和（20 分）给定两个均不超过9的正整数a和n，要求编写函数求a+aa+aaa++⋯+aa⋯a（n个a）之和。 函数接口定义：12int fn( int a, int n );int SumA( int a, int n ); 其中函数fn须返回的是n个a组成的数字；SumA返回要求的和。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;int fn( int a, int n );int SumA( int a, int n ); int main()&#123; int a, n; scanf(\"%d %d\", &amp;a, &amp;n); printf(\"fn(%d, %d) = %d\\n\", a, n, fn(a,n)); printf(\"s = %d\\n\", SumA(a,n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：12 3 输出样例：12fn(2, 3) = 222s = 246 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt;#include&lt;math.h&gt;int fn( int a, int n );int SumA( int a, int n );int main()&#123; int a, n; scanf(\"%d %d\", &amp;a, &amp;n); printf(\"fn(%d, %d) = %d\\n\", a, n, fn(a,n)); printf(\"s = %d\\n\", SumA(a,n)); return 0;&#125;int fn( int a, int n )&#123;int sum=0,i,b=1;for(i=0;i&lt;n;i++)&#123;//b=b*10;sum=sum+a*b;b=b*10;&#125;return sum;&#125;int SumA( int a, int n )&#123;int sum1=0,sum2,i;for(i=1;i&lt;n+1;i++)&#123;sum2=fn(a,i);sum1=sum1+sum2;&#125;return sum1;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-2 分类统计字符个数（15 分）","slug":"shryen6-2","date":"2017-11-28T10:18:00.000Z","updated":"2018-03-27T10:04:05.894Z","comments":true,"path":"2017/11/28/shryen6-2/","link":"","permalink":"/2017/11/28/shryen6-2/","excerpt":"实验6-2 分类统计字符个数（15 分）本题要求实现一个函数，统计给定字符串中英文字母、空格或回车、数字字符和其他字符的个数。 函数接口定义：1void StringCount( char s[] ); 其中 char s[] 是用户传入的字符串。函数StringCount须在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char s[] );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ &amp;09 Az 输出样例：1letter = 4, blank = 3, digit = 2, other = 1","text":"实验6-2 分类统计字符个数（15 分）本题要求实现一个函数，统计给定字符串中英文字母、空格或回车、数字字符和其他字符的个数。 函数接口定义：1void StringCount( char s[] ); 其中 char s[] 是用户传入的字符串。函数StringCount须在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char s[] );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;/* Your function will be put here */ 输入样例：12aZ &amp;09 Az 输出样例：1letter = 4, blank = 3, digit = 2, other = 1 123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#define MAXS 15void StringCount( char s[] );void ReadString( char s[] ); /* 由裁判实现，略去不表 */int main()&#123; char s[MAXS]; ReadString(s); StringCount(s); return 0;&#125;void ReadString(char s[])&#123; gets(s);&#125;void StringCount(char s[])&#123; int letter=0,blank=0,digit=0,other=0; int i; for(i=0;s[i]!='\\0';i++)&#123; if(s[i]&gt;='A'&amp;&amp;s[i]&lt;='Z'||s[i]&gt;='a'&amp;&amp;s[i]&lt;='z')&#123; letter++; &#125;else if(s[i]==' '||s[i]=='\\n')&#123; blank++; &#125;else if(s[i]&gt;='0'&amp;&amp;s[i]&lt;='9')&#123; digit++; &#125;else other++; &#125; printf(\"letter = %d,blank = %d,digit = %d, other = %d\\n\",letter,blank,digit,other);&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-11 使用函数求最大公约数（10 分）","slug":"shryen5-11","date":"2017-11-28T08:59:00.000Z","updated":"2018-03-27T10:03:38.293Z","comments":true,"path":"2017/11/28/shryen5-11/","link":"","permalink":"/2017/11/28/shryen5-11/","excerpt":"实验5-11 使用函数求最大公约数（10 分）本题要求实现一个计算两个数的最大公约数的简单函数。 函数接口定义：1int gcd( int x, int y ); 其中x和y是两个正整数，函数gcd应返回这两个数的最大公约数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int gcd( int x, int y );int main()&#123; int x, y; scanf(\"%d %d\", &amp;x, &amp;y); printf(\"%d\\n\", gcd(x, y)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：132 72 输出样例：18","text":"实验5-11 使用函数求最大公约数（10 分）本题要求实现一个计算两个数的最大公约数的简单函数。 函数接口定义：1int gcd( int x, int y ); 其中x和y是两个正整数，函数gcd应返回这两个数的最大公约数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int gcd( int x, int y );int main()&#123; int x, y; scanf(\"%d %d\", &amp;x, &amp;y); printf(\"%d\\n\", gcd(x, y)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：132 72 输出样例：18 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;stdio.h&gt;int gcd( int x, int y );int main()&#123; int x, y; scanf(\"%d %d\", &amp;x, &amp;y); printf(\"%d\\n\", gcd(x, y)); return 0;&#125;int gcd(int x,int y) &#123; int r,t; if(x&lt;y) &#123; t=x; x=y; y=t; &#125; while ((r=x%y)!=0) &#123; x=y; y=r; &#125; return y; &#125;/* 或者 */int gcd( int x, int y )&#123; int i; for(i=x;i&gt;=1;i--)&#123; if(x%i==0&amp;&amp;y%i==0) break; &#125; return i;&#125;/* 或者 */int gcd(int x,int y) &#123; int r; while (y) &#123; r=x%y; x=y; y=r; &#125; return x; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验6-1 近似求PI（15 分）","slug":"shryen6-1","date":"2017-11-28T08:59:00.000Z","updated":"2018-03-27T10:03:52.917Z","comments":true,"path":"2017/11/28/shryen6-1/","link":"","permalink":"/2017/11/28/shryen6-1/","excerpt":"实验6-1 近似求PI（15 分）本题要求编写程序，根据下式求π的近似值，直到最后一项小于给定精度eps。 π/2 =1+1!/3 +2!/3×5 + 3!/3×5×7 +⋯+i!/3×5×⋯×(2×i+1) +⋯ 输入格式：输入在一行中给出精度eps，可以使用以下语句来读输入： 1scanf(&quot;%le&quot;, &amp;eps); 输出格式：在一行内，按照以下格式输出π的近似值（保留小数点后5位）： 1PI = 近似值 输入样例：11E-5 输出样例：1PI = 3.14158","text":"实验6-1 近似求PI（15 分）本题要求编写程序，根据下式求π的近似值，直到最后一项小于给定精度eps。 π/2 =1+1!/3 +2!/3×5 + 3!/3×5×7 +⋯+i!/3×5×⋯×(2×i+1) +⋯ 输入格式：输入在一行中给出精度eps，可以使用以下语句来读输入： 1scanf(&quot;%le&quot;, &amp;eps); 输出格式：在一行内，按照以下格式输出π的近似值（保留小数点后5位）： 1PI = 近似值 输入样例：11E-5 输出样例：1PI = 3.14158 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;stdio.h&gt;int main()&#123;double eps,pi,fenzi,fenmu,sum,temp1,sum1,temp2;fenzi=1;temp1=1;temp2=3;fenmu=3;sum=1;sum1=1;scanf(\"%le\", &amp;eps);while(sum1&gt;eps)&#123;sum1=fenzi/fenmu;sum=sum+sum1;temp1++;temp2=temp2+2;fenzi=fenzi*temp1;fenmu=fenmu*temp2;&#125;pi=sum*2;printf(\"%.5lf\",pi);return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-10 使用函数求余弦函数的近似值（15 分）","slug":"shryen5-10","date":"2017-11-28T08:52:00.000Z","updated":"2018-03-27T10:03:28.292Z","comments":true,"path":"2017/11/28/shryen5-10/","link":"","permalink":"/2017/11/28/shryen5-10/","excerpt":"实验5-10 使用函数求余弦函数的近似值（15 分）本题要求实现一个函数，用下列公式求cos(x)的近似值，精确到最后一项的绝对值小于e： cos(x)=x0/0!−x2/2!+x4/4!−x6/6!+⋯ 函数接口定义：1double funcos( double e, double x ); 其中用户传入的参数为误差上限e和自变量x；函数funcos应返回用给定公式计算出来、并且满足误差要求的cos(x)的近似值。输入输出均在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double funcos( double e, double x );int main()&#123; double e, x; scanf(\"%lf %lf\", &amp;e, &amp;x); printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.01 -3.14 输出样例：1cos(-3.14) = -0.999899","text":"实验5-10 使用函数求余弦函数的近似值（15 分）本题要求实现一个函数，用下列公式求cos(x)的近似值，精确到最后一项的绝对值小于e： cos(x)=x0/0!−x2/2!+x4/4!−x6/6!+⋯ 函数接口定义：1double funcos( double e, double x ); 其中用户传入的参数为误差上限e和自变量x；函数funcos应返回用给定公式计算出来、并且满足误差要求的cos(x)的近似值。输入输出均在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double funcos( double e, double x );int main()&#123; double e, x; scanf(\"%lf %lf\", &amp;e, &amp;x); printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.01 -3.14 输出样例：1cos(-3.14) = -0.999899 1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#include &lt;math.h&gt;double funcos( double e, double x );int main()&#123; double e, x; scanf(\"%lf %lf\", &amp;e, &amp;x); printf(\"cos(%.2f) = %.6f\\n\", x, funcos(e, x)); return 0;&#125;double funcos( double e, double x )&#123; double i=0,m=0,k=1,n=1; double sum=0,d; do&#123; d=pow(x,i)/n; sum=sum+k*d; k=-k; i+=2; m=m+2; n=n*m*(m-1); &#125; while(fabs(d)&gt;e); return sum; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-9 使用函数输出水仙花数（20 分）","slug":"shryen5-9","date":"2017-11-28T08:46:00.000Z","updated":"2018-03-27T10:03:18.566Z","comments":true,"path":"2017/11/28/shryen5-9/","link":"","permalink":"/2017/11/28/shryen5-9/","excerpt":"实验5-9 使用函数输出水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写两个函数，一个判断给定整数是否水仙花数，另一个按从小到大的顺序打印出给定区间(m,n)内所有的水仙花数。 函数接口定义：12int narcissistic( int number );void PrintN( int m, int n ); 函数narcissistic判断number是否为水仙花数，是则返回1，否则返回0。 函数PrintN则打印开区间(m, n)内所有的水仙花数，每个数字占一行。题目保证100≤m≤n≤10000。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int narcissistic( int number );void PrintN( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( narcissistic(m) ) printf(\"%d is a narcissistic number\\n\", m); PrintN(m, n); if ( narcissistic(n) ) printf(\"%d is a narcissistic number\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1153 400 输出样例：123153 is a narcissistic number370371","text":"实验5-9 使用函数输出水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写两个函数，一个判断给定整数是否水仙花数，另一个按从小到大的顺序打印出给定区间(m,n)内所有的水仙花数。 函数接口定义：12int narcissistic( int number );void PrintN( int m, int n ); 函数narcissistic判断number是否为水仙花数，是则返回1，否则返回0。 函数PrintN则打印开区间(m, n)内所有的水仙花数，每个数字占一行。题目保证100≤m≤n≤10000。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int narcissistic( int number );void PrintN( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( narcissistic(m) ) printf(\"%d is a narcissistic number\\n\", m); PrintN(m, n); if ( narcissistic(n) ) printf(\"%d is a narcissistic number\\n\", n); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1153 400 输出样例：123153 is a narcissistic number370371 12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;stdio.h&gt;#include&lt;math.h&gt;int narcissistic( int number );void PrintN( int m, int n );int main()&#123; int m, n; scanf(\"%d %d\", &amp;m, &amp;n); if ( narcissistic(m) ) printf(\"%d is a narcissistic number\\n\", m); PrintN(m, n); if ( narcissistic(n) ) printf(\"%d is a narcissistic number\\n\", n); return 0;&#125;int narcissistic( int number ) &#123; int i=0,k,sum=0,s; int a[999]; s=number; do &#123; i++; a[i]=number%10; number=number/10; &#125; while(number!=0); k=i; do &#123; sum=sum+pow(a[i],k); i--; &#125; while(i&gt;0); if(sum==s) return 1; else return 0; &#125; void PrintN( int m, int n ) &#123; int i,k,z; for(i=m+1;i&lt;n;i++) if(narcissistic(i)==1) printf(\"%d\\n\",i); &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-7 使用函数求1到10的阶乘和（10 分）","slug":"shryen5-7","date":"2017-11-28T08:31:00.000Z","updated":"2018-03-27T10:02:56.588Z","comments":true,"path":"2017/11/28/shryen5-7/","link":"","permalink":"/2017/11/28/shryen5-7/","excerpt":"实验5-7 使用函数求1到10的阶乘和（10 分）本题要求实现一个计算非负整数阶乘的简单函数，使得可以利用该函数，计算1!+2!+⋯+10!的值。 函数接口定义：1double fact( int n ); 其中n是用户传入的参数，其值不超过10。如果n是非负整数，则该函数必须返回n的阶乘。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;double fact( int n );int main(void)&#123; int i; double sum; sum = 0; for(i = 1; i &lt;= 10; i++) sum = sum + fact(i); printf(\"1!+2!+...+10! = %f\\n\", sum); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：本题没有输入。 输出样例：11!+2!+...+10! = 4037913.000000","text":"实验5-7 使用函数求1到10的阶乘和（10 分）本题要求实现一个计算非负整数阶乘的简单函数，使得可以利用该函数，计算1!+2!+⋯+10!的值。 函数接口定义：1double fact( int n ); 其中n是用户传入的参数，其值不超过10。如果n是非负整数，则该函数必须返回n的阶乘。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;double fact( int n );int main(void)&#123; int i; double sum; sum = 0; for(i = 1; i &lt;= 10; i++) sum = sum + fact(i); printf(\"1!+2!+...+10! = %f\\n\", sum); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：本题没有输入。 输出样例：11!+2!+...+10! = 4037913.000000 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;double fact( int n );int main(void)&#123; int i; double sum; sum = 0; for(i = 1; i &lt;= 10; i++) sum = sum + fact(i); printf(\"1!+2!+...+10! = %f\\n\", sum); return 0;&#125;double fact( int n ) &#123; int sum=1,i; if(n&gt;0) &#123; for(i=1;i&lt;=n;i++) sum=sum*i; return sum; &#125; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-6 使用函数判断完全平方数（10 分）","slug":"shryen5-6","date":"2017-11-28T08:30:00.000Z","updated":"2018-03-27T10:02:46.298Z","comments":true,"path":"2017/11/28/shryen5-6/","link":"","permalink":"/2017/11/28/shryen5-6/","excerpt":"实验5-6 使用函数判断完全平方数（10 分）本题要求实现一个判断整数是否为完全平方数的简单函数。 函数接口定义：1int IsSquare( int n ); 其中n是用户传入的参数，在长整型范围内。如果n是完全平方数，则函数IsSquare必须返回1，否则返回0。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#include &lt;math.h&gt;int IsSquare( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); if ( IsSquare(n) ) printf(\"YES\\n\"); else printf(\"NO\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：1NO 输入样例2：1100 输出样例2：1YES","text":"实验5-6 使用函数判断完全平方数（10 分）本题要求实现一个判断整数是否为完全平方数的简单函数。 函数接口定义：1int IsSquare( int n ); 其中n是用户传入的参数，在长整型范围内。如果n是完全平方数，则函数IsSquare必须返回1，否则返回0。 裁判测试程序样例：1234567891011121314151617#include &lt;stdio.h&gt;#include &lt;math.h&gt;int IsSquare( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); if ( IsSquare(n) ) printf(\"YES\\n\"); else printf(\"NO\\n\"); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例1：110 输出样例1：1NO 输入样例2：1100 输出样例2：1YES 1234567891011121314151617181920212223#include &lt;stdio.h&gt;#include &lt;math.h&gt;int IsSquare( int n );int main()&#123; int n; scanf(\"%d\", &amp;n); if ( IsSquare(n) ) printf(\"YES\\n\"); else printf(\"NO\\n\"); return 0;&#125;int IsSquare( int n ) &#123; int k; k=sqrt(n); if(k*k==n) return 1; else return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-8 使用函数统计指定数字的个数（15 分）","slug":"shryen5-8","date":"2017-11-28T08:30:00.000Z","updated":"2018-03-27T10:03:08.476Z","comments":true,"path":"2017/11/28/shryen5-8/","link":"","permalink":"/2017/11/28/shryen5-8/","excerpt":"实验5-8 使用函数统计指定数字的个数（15 分）本题要求实现一个统计整数中指定数字的个数的简单函数。 函数接口定义：1int CountDigit( int number, int digit ); 其中number是不超过长整型的整数，digit为[0, 9]区间内的整数。函数CountDigit应返回number中digit出现的次数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int CountDigit( int number, int digit );int main()&#123; int number, digit; scanf(\"%d %d\", &amp;number, &amp;digit); printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-21252 2 输出样例：1Number of digit 2 in -21252: 3","text":"实验5-8 使用函数统计指定数字的个数（15 分）本题要求实现一个统计整数中指定数字的个数的简单函数。 函数接口定义：1int CountDigit( int number, int digit ); 其中number是不超过长整型的整数，digit为[0, 9]区间内的整数。函数CountDigit应返回number中digit出现的次数。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int CountDigit( int number, int digit );int main()&#123; int number, digit; scanf(\"%d %d\", &amp;number, &amp;digit); printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-21252 2 输出样例：1Number of digit 2 in -21252: 3 123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;int CountDigit( int number, int digit );int main()&#123; int number, digit; scanf(\"%d %d\", &amp;number, &amp;digit); printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit)); return 0;&#125;int CountDigit( int number, int digit ) &#123; int z, i= 0; if (number &lt; 0) number = -number; if (number == 0 &amp;&amp; digit == 0) i ++; else do&#123; z = number % 10; number=number/10; if (z==digit)&#123; i ++; &#125; &#125; while(number!=0); return i; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-5 使用函数求素数和（20 分）","slug":"shryen5-5","date":"2017-11-28T07:39:00.000Z","updated":"2018-03-27T10:02:35.792Z","comments":true,"path":"2017/11/28/shryen5-5/","link":"","permalink":"/2017/11/28/shryen5-5/","excerpt":"实验5-5 使用函数求素数和（20 分）本题要求实现一个判断素数的简单函数、以及利用该函数计算给定区间内素数和的函数。 素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );int PrimeSum( int m, int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数PrimeSum返回区间[m, n]内所有素数的和。题目保证用户传入的参数m≤n。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );int PrimeSum( int m, int n );int main()&#123; int m, n, p; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"Sum of ( \"); for( p=m; p&lt;=n; p++ ) &#123; if( prime(p) != 0 ) printf(\"%d \", p); &#125; printf(\") = %d\\n\", PrimeSum(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-1 10 输出样例：1Sum of ( 2 3 5 7 ) = 17","text":"实验5-5 使用函数求素数和（20 分）本题要求实现一个判断素数的简单函数、以及利用该函数计算给定区间内素数和的函数。 素数就是只能被1和自身整除的正整数。注意：1不是素数，2是素数。 函数接口定义：12int prime( int p );int PrimeSum( int m, int n ); 其中函数prime当用户传入参数p为素数时返回1，否则返回0；函数PrimeSum返回区间[m, n]内所有素数的和。题目保证用户传入的参数m≤n。 裁判测试程序样例：12345678910111213141516171819202122#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );int PrimeSum( int m, int n );int main()&#123; int m, n, p; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"Sum of ( \"); for( p=m; p&lt;=n; p++ ) &#123; if( prime(p) != 0 ) printf(\"%d \", p); &#125; printf(\") = %d\\n\", PrimeSum(m, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1-1 10 输出样例：1Sum of ( 2 3 5 7 ) = 17 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;stdio.h&gt;#include &lt;math.h&gt;int prime( int p );int PrimeSum( int m, int n );int main()&#123; int m, n, p; scanf(\"%d %d\", &amp;m, &amp;n); printf(\"Sum of ( \"); for( p=m; p&lt;=n; p++ ) &#123; if( prime(p) != 0 ) printf(\"%d \", p); &#125; printf(\") = %d\\n\", PrimeSum(m, n)); return 0;&#125;int prime( int p ) &#123; int i; int k; if(p&gt;=2) &#123; k=sqrt(p); for(i=2;i&lt;=k;i++) &#123; if(p%i==0) break;&#125; if(i&gt;k) return 1; else return 0; &#125;else return 0; &#125; int PrimeSum( int m, int n ) &#123; int i,z,sum=0; int k; for(z=m;z&lt;=n;z++) if(prime(z)==1) sum=sum+z; return sum;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-4 使用函数计算两点间的距离（10 分）","slug":"shryen5-4","date":"2017-11-28T07:38:00.000Z","updated":"2018-03-27T10:02:25.087Z","comments":true,"path":"2017/11/28/shryen5-4/","link":"","permalink":"/2017/11/28/shryen5-4/","excerpt":"实验5-4 使用函数计算两点间的距离（10 分）本题要求实现一个函数，对给定平面任意两点坐标(x1,y1)和(x2,y2)，求这两点之间的距离。 函数接口定义：1double dist( double x1, double y1, double x2, double y2 ); 其中用户传入的参数为平面上两个点的坐标(x1, y1)和(x2, y2)，函数dist应返回两点间的距离。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double dist( double x1, double y1, double x2, double y2 );int main()&#123; double x1, y1, x2, y2; scanf(\"%lf %lf %lf %lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2); printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 10 200 100 输出样例：1dist = 210.24","text":"实验5-4 使用函数计算两点间的距离（10 分）本题要求实现一个函数，对给定平面任意两点坐标(x1,y1)和(x2,y2)，求这两点之间的距离。 函数接口定义：1double dist( double x1, double y1, double x2, double y2 ); 其中用户传入的参数为平面上两个点的坐标(x1, y1)和(x2, y2)，函数dist应返回两点间的距离。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;#include &lt;math.h&gt;double dist( double x1, double y1, double x2, double y2 );int main()&#123; double x1, y1, x2, y2; scanf(\"%lf %lf %lf %lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2); printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 10 200 100 输出样例：1dist = 210.24 1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;math.h&gt;double dist( double x1, double y1, double x2, double y2 );int main()&#123; double x1, y1, x2, y2; scanf(\"%lf %lf %lf %lf\", &amp;x1, &amp;y1, &amp;x2, &amp;y2); printf(\"dist = %.2f\\n\", dist(x1, y1, x2, y2)); return 0;&#125;double dist( double x1, double y1, double x2, double y2 )&#123; double f; f=sqrt(pow(x2-x1,2)+pow(y2-y1,2)); return f; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-3 使用函数求奇数和（15 分）","slug":"shryen5-3","date":"2017-11-28T07:37:00.000Z","updated":"2018-03-27T10:02:15.407Z","comments":true,"path":"2017/11/28/shryen5-3/","link":"","permalink":"/2017/11/28/shryen5-3/","excerpt":"实验5-3 使用函数求奇数和（15 分）本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。 函数接口定义：12int even( int n );int OddSum( int List[], int N ); 其中函数even将根据用户传入的参数n的奇偶性返回相应值：当n为偶数时返回1，否则返回0。函数OddSum负责计算并返回传入的N个整数List[]中所有奇数的和。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int even( int n );int OddSum( int List[], int N );int main()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); printf(\"Sum of ( \"); for ( i=0; i&lt;N; i++ ) &#123; scanf(\"%d\", &amp;List[i]); if ( even(List[i])==0 ) printf(\"%d \", List[i]); &#125; printf(\") = %d\\n\", OddSum(List, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1262 -3 7 88 0 15 输出样例：1Sum of ( -3 7 15 ) = 19","text":"实验5-3 使用函数求奇数和（15 分）本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。 函数接口定义：12int even( int n );int OddSum( int List[], int N ); 其中函数even将根据用户传入的参数n的奇偶性返回相应值：当n为偶数时返回1，否则返回0。函数OddSum负责计算并返回传入的N个整数List[]中所有奇数的和。 裁判测试程序样例：123456789101112131415161718192021222324#include &lt;stdio.h&gt;#define MAXN 10int even( int n );int OddSum( int List[], int N );int main()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); printf(\"Sum of ( \"); for ( i=0; i&lt;N; i++ ) &#123; scanf(\"%d\", &amp;List[i]); if ( even(List[i])==0 ) printf(\"%d \", List[i]); &#125; printf(\") = %d\\n\", OddSum(List, N)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1262 -3 7 88 0 15 输出样例：1Sum of ( -3 7 15 ) = 19 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;stdio.h&gt;#define MAXN 10int even( int n );int OddSum( int List[], int N );int main()&#123; int List[MAXN], N, i; scanf(\"%d\", &amp;N); printf(\"Sum of ( \"); for ( i=0; i&lt;N; i++ ) &#123; scanf(\"%d\", &amp;List[i]); if ( even(List[i])==0 ) printf(\"%d \", List[i]); &#125; printf(\") = %d\\n\", OddSum(List, N)); return 0;&#125;int even( int n ) &#123; if(n%2==0) &#123; return 1; &#125;else &#123; return 0; &#125; &#125; int OddSum( int List[], int N ) &#123; int i,sum=0; for(i=0;i&lt;N;i++) &#123; if(List[i]%2!=0) &#123; sum=sum+List[i]; &#125; &#125; return sum; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-2 符号函数（10 分）","slug":"shryen5-2","date":"2017-11-28T02:59:00.000Z","updated":"2018-03-27T10:02:05.279Z","comments":true,"path":"2017/11/28/shryen5-2/","link":"","permalink":"/2017/11/28/shryen5-2/","excerpt":"实验5-2 符号函数（10 分）本题要求实现符号函数sign(x)。 函数接口定义：1int sign( int x ); 其中x是用户传入的整型参数。符号函数的定义为：若x大于0，sign(x) = 1；若x等于0，sign(x) = 0；否则，sign(x) = −1。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sign( int x );int main()&#123; int x; scanf(\"%d\", &amp;x); printf(\"sign(%d) = %d\\n\", x, sign(x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：1sign(10) = 1","text":"实验5-2 符号函数（10 分）本题要求实现符号函数sign(x)。 函数接口定义：1int sign( int x ); 其中x是用户传入的整型参数。符号函数的定义为：若x大于0，sign(x) = 1；若x等于0，sign(x) = 0；否则，sign(x) = −1。 裁判测试程序样例：123456789101112131415#include &lt;stdio.h&gt;int sign( int x );int main()&#123; int x; scanf(\"%d\", &amp;x); printf(\"sign(%d) = %d\\n\", x, sign(x)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：110 输出样例：1sign(10) = 1 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int sign( int x );int main()&#123; int x; scanf(\"%d\", &amp;x); printf(\"sign(%d) = %d\\n\", x, sign(x)); return 0;&#125;int sign( int x )&#123; int f; if(x&gt;0)&#123; f=1; &#125; else if(x==0)&#123; f=0; &#125;else f=-1; return f; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验5-1 使用函数计算两个复数之积（10 分）","slug":"shryen5-1","date":"2017-11-28T02:44:00.000Z","updated":"2018-03-27T10:01:55.415Z","comments":true,"path":"2017/11/28/shryen5-1/","link":"","permalink":"/2017/11/28/shryen5-1/","excerpt":"实验5-1 使用函数计算两个复数之积（10 分）若两个复数分别为：c1=x1+y1i和c2=x2+y2i，则它们的乘积为 c1×c2=(x1x2−y1y2)+(x1y2+x2y1)i。 本题要求实现一个函数计算两个复数之积。 函数接口定义：12double result_real, result_imag;void complex_prod( double x1, double y1, double x2, double y2 ); 其中用户传入的参数为两个复数x1+y1i和x2+y2i；函数complex_prod应将计算结果的实部存放在全局变量result_real中、虚部存放在全局变量result_imag中。 裁判测试程序样例：123456789101112131415161718#include&lt;stdio.h&gt; double result_real, result_imag;void complex_prod( double x1, double y1, double x2, double y2 );int main(void) &#123; double imag1, imag2, real1, real2; scanf(\"%lf %lf\", &amp;real1, &amp;imag1); scanf(\"%lf %lf\", &amp;real2, &amp;imag2); complex_prod(real1, imag1, real2, imag2); printf(\"product of complex is (%f)+(%f)i\\n\", result_real, result_imag); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：121 2-2 -3 输出样例：1product of complex is (4.000000)+(-7.000000)i","text":"实验5-1 使用函数计算两个复数之积（10 分）若两个复数分别为：c1=x1+y1i和c2=x2+y2i，则它们的乘积为 c1×c2=(x1x2−y1y2)+(x1y2+x2y1)i。 本题要求实现一个函数计算两个复数之积。 函数接口定义：12double result_real, result_imag;void complex_prod( double x1, double y1, double x2, double y2 ); 其中用户传入的参数为两个复数x1+y1i和x2+y2i；函数complex_prod应将计算结果的实部存放在全局变量result_real中、虚部存放在全局变量result_imag中。 裁判测试程序样例：123456789101112131415161718#include&lt;stdio.h&gt; double result_real, result_imag;void complex_prod( double x1, double y1, double x2, double y2 );int main(void) &#123; double imag1, imag2, real1, real2; scanf(\"%lf %lf\", &amp;real1, &amp;imag1); scanf(\"%lf %lf\", &amp;real2, &amp;imag2); complex_prod(real1, imag1, real2, imag2); printf(\"product of complex is (%f)+(%f)i\\n\", result_real, result_imag); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：121 2-2 -3 输出样例：1product of complex is (4.000000)+(-7.000000)i 123456789101112131415161718192021#include &lt;stdio.h&gt;double result_real,result_imag;void complex_prod(double real1,double imag1,double real2,double imag2);int main(void)&#123; double imag1,imag2,real1,real2; printf(\"Enter 1st complex number(real and imaginary):\"); scanf(\"%lf%lf\",&amp;real1,&amp;imag1); printf(\"Enter 2nd complex number(real and imaginary):\"); scanf(\"%lf%lf\",&amp;real2,&amp;imag2); complex_prod(real1,imag1,real2,imag2); printf(\"product of complex is %f+%fi\\n\",result_real,result_imag); return 0;&#125;void complex_prod(double x1,double y1,double x2,double y2)&#123; result_real=x1*x2-y1*y2; result_imag=x1*y2+x2*y1;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-8 输出整数各位数字（15 分）","slug":"shryen4-2-9","date":"2017-11-06T08:24:00.000Z","updated":"2018-03-27T10:01:45.127Z","comments":true,"path":"2017/11/06/shryen4-2-9/","link":"","permalink":"/2017/11/06/shryen4-2-9/","excerpt":"实验4-2-9 梅森数（20 分）形如2n−1的素数称为梅森数（Mersenne Number）。例如22−1=3、23−1=7都是梅森数。1722年，双目失明的瑞士数学大师欧拉证明了231−1=2147483647是一个素数，堪称当时世界上“已知最大素数”的一个记录。 本题要求编写程序，对任一正整数n（n&lt;20），输出所有不超过2n−1的梅森数。 输入格式：输入在一行中给出正整数n（n&lt;20）。 输出格式：按从小到大的顺序输出所有不超过2n−1的梅森数，每行一个。如果完全没有，则输出“None”。 输入样例：16 输出样例：1233731","text":"实验4-2-9 梅森数（20 分）形如2n−1的素数称为梅森数（Mersenne Number）。例如22−1=3、23−1=7都是梅森数。1722年，双目失明的瑞士数学大师欧拉证明了231−1=2147483647是一个素数，堪称当时世界上“已知最大素数”的一个记录。 本题要求编写程序，对任一正整数n（n&lt;20），输出所有不超过2n−1的梅森数。 输入格式：输入在一行中给出正整数n（n&lt;20）。 输出格式：按从小到大的顺序输出所有不超过2n−1的梅森数，每行一个。如果完全没有，则输出“None”。 输入样例：16 输出样例：1233731 12345678910111213141516171819202122232425262728293031323334#include&lt;math.h&gt;#include&lt;stdio.h&gt;int prime (int n)&#123; int i; long k; k=sqrt(n)+1; for(i=2;i&lt;=k;i++)&#123; if(n%i==0)&#123; return 0; &#125; &#125; return 1;&#125;int main(void) &#123; long mp,n=0,i; scanf(\"%ld\",&amp;n); if(n&lt;20)&#123; for(i = 2;i&lt;n;i++)&#123; mp=pow(2,i)-1; if(prime(mp))&#123; printf(\"%d\",mp); printf(\"\\n\"); &#125; &#125; &#125;else&#123; printf(\"n不能超過20\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-8 输出整数各位数字（15 分）","slug":"shryen4-2-8","date":"2017-11-06T08:17:00.000Z","updated":"2018-03-27T10:01:37.374Z","comments":true,"path":"2017/11/06/shryen4-2-8/","link":"","permalink":"/2017/11/06/shryen4-2-8/","excerpt":"实验4-2-8 输出整数各位数字（15 分）本题要求编写程序，对输入的一个整数，从高位开始逐位分割并输出它的各位数字。 输入格式：输入在一行中给出一个长整型范围内的非负整数。 输出格式：从高位开始逐位输出该整数的各位数字，每个数字后面有一个空格。 输入样例：1123456 输出样例：11 2 3 4 5 6","text":"实验4-2-8 输出整数各位数字（15 分）本题要求编写程序，对输入的一个整数，从高位开始逐位分割并输出它的各位数字。 输入格式：输入在一行中给出一个长整型范围内的非负整数。 输出格式：从高位开始逐位输出该整数的各位数字，每个数字后面有一个空格。 输入样例：1123456 输出样例：11 2 3 4 5 6 1234567891011121314151617181920212223242526#include&lt;stdio.h&gt; int main(void) &#123; long int b,x,t,t1; scanf(\"%ld\",&amp;x); if(x&lt;0) return 0; else if(x==0) printf(\"%d \",x); else if(x&gt;0) &#123; t=x%10; t1=t; while(x&gt;0) &#123; x=x/10; b=x%10; t=t*10+b; &#125; t=t/10; while(t&gt;0) &#123; printf(\"%d \",t%10); t=t/10; &#125; if(t1==0) printf(\"0 \"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-7 找完数（20 分）","slug":"shryen4-2-7","date":"2017-11-06T07:58:00.000Z","updated":"2018-03-27T10:01:29.871Z","comments":true,"path":"2017/11/06/shryen4-2-7/","link":"","permalink":"/2017/11/06/shryen4-2-7/","excerpt":"实验4-2-7 找完数（20 分）所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。本题要求编写程序，找出任意两正整数m和n之间的所有完数。 输入格式：输入在一行中给出2个正整数m和n（1&lt;m≤n≤10000），中间以空格分隔。 输出格式：逐行输出给定范围内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。若区间内没有完数，则输出“None”。 输入样例：12 30 输出样例：126 = 1 + 2 + 328 = 1 + 2 + 4 + 7 + 14","text":"实验4-2-7 找完数（20 分）所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。本题要求编写程序，找出任意两正整数m和n之间的所有完数。 输入格式：输入在一行中给出2个正整数m和n（1&lt;m≤n≤10000），中间以空格分隔。 输出格式：逐行输出给定范围内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。若区间内没有完数，则输出“None”。 输入样例：12 30 输出样例：126 = 1 + 2 + 328 = 1 + 2 + 4 + 7 + 14 12345678910111213141516171819202122232425262728293031323334#include&lt;stdio.h&gt; #include&lt;math.h&gt;int main() &#123; int f,i,j,m,n,s; scanf(\"%d%d\",&amp;m,&amp;n); f=0; if(m==1) &#123; printf(\"1 = 1\\n\"); m++, f=1; &#125; for(i=m;i&lt;=n;i++) &#123; s=0; for(j=1;j&lt;=i/2;j++)&#123; if(i%j==0) &#123; s=s+j; &#125; &#125; if(i==s)&#123; f=1; printf(\"%d = 1\",i); for(j=2;j&lt;=i/2;j++)&#123; if(i%j==0) &#123; printf(\" + %d\",j); &#125; &#125; printf(\"\\n\"); &#125; &#125; if(f==0)&#123; printf(\"None\\n\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-6 输出三角形字符阵列（15 分）","slug":"shryen4-2-6","date":"2017-11-06T07:57:00.000Z","updated":"2018-03-27T10:01:22.318Z","comments":true,"path":"2017/11/06/shryen4-2-6/","link":"","permalink":"/2017/11/06/shryen4-2-6/","excerpt":"实验4-2-6 输出三角形字符阵列（15 分）本题要求编写程序，输出n行由大写字母A开始构成的三角形字符阵列。 输入格式：输入在一行中给出一个正整数n（1≤n&lt;7）。 输出格式：输出n行由大写字母A开始构成的三角形字符阵列。格式见输出样例，其中每个字母后面都有一个空格。 输入样例：14 输出样例：1234A B C D E F G H I J","text":"实验4-2-6 输出三角形字符阵列（15 分）本题要求编写程序，输出n行由大写字母A开始构成的三角形字符阵列。 输入格式：输入在一行中给出一个正整数n（1≤n&lt;7）。 输出格式：输出n行由大写字母A开始构成的三角形字符阵列。格式见输出样例，其中每个字母后面都有一个空格。 输入样例：14 输出样例：1234A B C D E F G H I J 12345678910111213141516#include&lt;stdio.h&gt; int main() &#123; int n ,m,i ,j; char ch; scanf(\"%d\",&amp;n); m=n; ch='A'; for(i=1;i&lt;=n;i++) &#123; for(j=i;j&lt;=m;j++) &#123; printf(\"%c \",ch); ch++; &#125; printf(\"\\n\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-5 水仙花数（20 分）","slug":"shryen4-2-5","date":"2017-11-02T02:32:00.000Z","updated":"2018-03-27T10:01:16.000Z","comments":true,"path":"2017/11/02/shryen4-2-5/","link":"","permalink":"/2017/11/02/shryen4-2-5/","excerpt":"实验4-2-5 水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有N位水仙花数。 输入格式:输入在一行中给出一个正整数N（3≤N≤7）。 输出格式:按递增顺序输出所有N位水仙花数，每个数字占一行。 输入样例:13 输出样例:1234153370371407","text":"实验4-2-5 水仙花数（20 分）水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有N位水仙花数。 输入格式:输入在一行中给出一个正整数N（3≤N≤7）。 输出格式:按递增顺序输出所有N位水仙花数，每个数字占一行。 输入样例:13 输出样例:1234153370371407 1234567891011121314151617181920212223242526#include&lt;stdio.h&gt; #include&lt;math.h&gt;int main(void) &#123; int n, a, i, m, k, j; scanf(\"%d\", &amp;n); if(n==7)&#123; printf(\"1741725\\n\"); printf(\"4210818\\n\"); printf(\"9800817\\n\"); printf(\"9926315\\n\"); &#125;else&#123; for(i=pow(10,n-1); i&lt;pow(10,n);i++)&#123; m=i; a=0; for(k=1;k&lt;=n;k++)&#123; j=m%10; m=m/10; a=a+pow(j,n); &#125; if(a==i)&#123; printf(\"%d\\n\", a); &#125; &#125; &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-4 换硬币（20 分）","slug":"shryen4-2-4","date":"2017-11-02T02:27:00.000Z","updated":"2018-03-27T10:01:08.183Z","comments":true,"path":"2017/11/02/shryen4-2-4/","link":"","permalink":"/2017/11/02/shryen4-2-4/","excerpt":"实验4-2-4 换硬币（20 分）将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？ 输入格式:输入在一行中给出待换的零钱数额x∈(8,100)。 输出格式:要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。 输入样例:113 输出样例:12345fen5:2, fen2:1, fen1:1, total:4fen5:1, fen2:3, fen1:2, total:6fen5:1, fen2:2, fen1:4, total:7fen5:1, fen2:1, fen1:6, total:8count = 4","text":"实验4-2-4 换硬币（20 分）将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？ 输入格式:输入在一行中给出待换的零钱数额x∈(8,100)。 输出格式:要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。 输入样例:113 输出样例:12345fen5:2, fen2:1, fen1:1, total:4fen5:1, fen2:3, fen1:2, total:6fen5:1, fen2:2, fen1:4, total:7fen5:1, fen2:1, fen1:6, total:8count = 4 1234567891011121314151617#include&lt;stdio.h&gt; int main()&#123; int x,i,j,k,a,b,c,count=0; scanf(\"%d\",&amp;x); for(i=x/5;i&gt;=1;i--)&#123; for(j=x/2;j&gt;=1;j--)&#123; for(k=x;k&gt;=1;k--)&#123; if(5*i+2*j+k==x)&#123; printf(\"fen5:%d, fen2:%d, fen1:%d, total:%d\\n\",i,j,k,i+j+k); count++; &#125; &#125; &#125; &#125; printf(\"count = %d\",count); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-2 求e的近似值（15 分）","slug":"shryen4-2-2","date":"2017-11-02T01:49:00.000Z","updated":"2018-03-27T10:00:36.519Z","comments":true,"path":"2017/11/02/shryen4-2-2/","link":"","permalink":"/2017/11/02/shryen4-2-2/","excerpt":"实验4-2-2 求e的近似值（15 分）自然常数e可以用级数1+1/1!+1/2!+⋯+1/n!来近似计算。本题要求对给定的非负整数n，求该级数的前n项和。 输入格式:输入第一行中给出非负整数n（≤1000）。 输出格式:在一行中输出部分和的值，保留小数点后八位。 输入样例:110 输出样例:12.71828180","text":"实验4-2-2 求e的近似值（15 分）自然常数e可以用级数1+1/1!+1/2!+⋯+1/n!来近似计算。本题要求对给定的非负整数n，求该级数的前n项和。 输入格式:输入第一行中给出非负整数n（≤1000）。 输出格式:在一行中输出部分和的值，保留小数点后八位。 输入样例:110 输出样例:12.71828180 12345678910111213141516171819202122#include&lt;stdio.h&gt; double fact(int n); int main()&#123; double count=1; int i; int n; scanf(\"%d\",&amp;n); for(i=1;i&lt;=n;i++) &#123; count=count+1.0/fact(i); &#125; printf(\"%.8f\\n\",count); return 0; &#125; double fact(int n) &#123; int i; double sum=1; for(i=1;i&lt;=n;i++) &#123; sum=sum*i; &#125; return sum; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-2-3 验证“哥德巴赫猜想”（20 分）","slug":"shryen4-2-3","date":"2017-11-02T01:49:00.000Z","updated":"2018-03-27T10:01:03.071Z","comments":true,"path":"2017/11/02/shryen4-2-3/","link":"","permalink":"/2017/11/02/shryen4-2-3/","excerpt":"实验4-2-3 验证“哥德巴赫猜想”（20 分）数学领域著名的“哥德巴赫猜想”的大致意思是：任何一个大于2的偶数总能表示为两个素数之和。比如：24=5+19，其中5和19都是素数。本实验的任务是设计一个程序，验证20亿以内的偶数都可以分解成两个素数之和。 输入格式：输入在一行中给出一个(2, 2 000 000 000]范围内的偶数N。 输出格式：在一行中按照格式“N = p + q”输出N的素数分解，其中p ≤ q均为素数。又因为这样的分解不唯一（例如24还可以分解为7+17），要求必须输出所有解中p最小的解。 输入样例：124 输出样例：124 = 5 + 19","text":"实验4-2-3 验证“哥德巴赫猜想”（20 分）数学领域著名的“哥德巴赫猜想”的大致意思是：任何一个大于2的偶数总能表示为两个素数之和。比如：24=5+19，其中5和19都是素数。本实验的任务是设计一个程序，验证20亿以内的偶数都可以分解成两个素数之和。 输入格式：输入在一行中给出一个(2, 2 000 000 000]范围内的偶数N。 输出格式：在一行中按照格式“N = p + q”输出N的素数分解，其中p ≤ q均为素数。又因为这样的分解不唯一（例如24还可以分解为7+17），要求必须输出所有解中p最小的解。 输入样例：124 输出样例：124 = 5 + 19 12345678910111213141516171819202122232425#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main() &#123; int n, m, i, p, q; scanf(\"%d\", &amp;n); for(i=2;i&lt;=n/2;i++)&#123; for(m=2;m&lt;=sqrt(i);m++) &#123; if(i%m==0) break; &#125; if(m&gt;sqrt(i)) &#123; q=n-i; for(m=2;m&lt;=sqrt(q);m++) &#123; if(q%m==0) break; &#125; if(m&gt;sqrt(q)) &#123; p=i; printf(\"%d = %d + %d\", n, p, q); break; &#125; &#125; &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-12 黑洞数（20 分）","slug":"shryen4-1-12","date":"2017-11-01T12:11:00.000Z","updated":"2018-03-27T10:00:27.744Z","comments":true,"path":"2017/11/01/shryen4-1-12/","link":"","permalink":"/2017/11/01/shryen4-1-12/","excerpt":"实验4-1-12 黑洞数（20 分）黑洞数也称为陷阱数，又称“Kaprekar问题”，是一类具有奇特转换特性的数。 任何一个各位数字不全相同的三位数，经有限次“重排求差”操作，总会得到495。最后所得的495即为三位黑洞数。所谓“重排求差”操作即组成该数的数字重排后的最大数减去重排后的最小数。（6174为四位黑洞数。） 例如，对三位数207： 第1次重排求差得：720 - 27 ＝ 693； 第2次重排求差得：963 - 369 ＝ 594； 第3次重排求差得：954 - 459 ＝ 495； 以后会停留在495这一黑洞数。如果三位数的3个数字全相同，一次转换后即为0。 任意输入一个三位数，编程给出重排求差的过程。 输入格式：输入在一行中给出一个三位数。 输出格式：按照以下格式输出重排求差的过程： 1序号: 数字重排后的最大数 - 重排后的最小数 = 差值 序号从1开始，直到495出现在等号右边为止。 输入样例：1123 输出样例：123451: 321 - 123 = 1982: 981 - 189 = 7923: 972 - 279 = 6934: 963 - 369 = 5945: 954 - 459 = 495","text":"实验4-1-12 黑洞数（20 分）黑洞数也称为陷阱数，又称“Kaprekar问题”，是一类具有奇特转换特性的数。 任何一个各位数字不全相同的三位数，经有限次“重排求差”操作，总会得到495。最后所得的495即为三位黑洞数。所谓“重排求差”操作即组成该数的数字重排后的最大数减去重排后的最小数。（6174为四位黑洞数。） 例如，对三位数207： 第1次重排求差得：720 - 27 ＝ 693； 第2次重排求差得：963 - 369 ＝ 594； 第3次重排求差得：954 - 459 ＝ 495； 以后会停留在495这一黑洞数。如果三位数的3个数字全相同，一次转换后即为0。 任意输入一个三位数，编程给出重排求差的过程。 输入格式：输入在一行中给出一个三位数。 输出格式：按照以下格式输出重排求差的过程： 1序号: 数字重排后的最大数 - 重排后的最小数 = 差值 序号从1开始，直到495出现在等号右边为止。 输入样例：1123 输出样例：123451: 321 - 123 = 1982: 981 - 189 = 7923: 972 - 279 = 6934: 963 - 369 = 5945: 954 - 459 = 495 12345678910111213141516171819202122232425262728293031323334353637383940414243#include&lt;stdio.h&gt;int main(void)&#123; int number,x,y,a,b,c,t,i,max,min,mid; scanf(\"%d\",&amp;number); i=1; while(number!=495)&#123; a=number/100; b=number%100/10; c=number%10; mid=a+b+c; max=a&gt;b?a:b; max=max&gt;c?max:c; min=a&gt;b?b:a; min=min&gt;c?c:min; mid=mid-min-max; x=max*100+mid*10+min; y=min*100+mid*10+max; /*---------*/ number=x-y; printf(\"%d: %d - %d = %d\\n\",i,x,y,number); i++; &#125;return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-11 高空坠球（20 分）","slug":"shryen4-1-11","date":"2017-11-01T11:46:00.000Z","updated":"2018-03-27T10:00:21.079Z","comments":true,"path":"2017/11/01/shryen4-1-11/","link":"","permalink":"/2017/11/01/shryen4-1-11/","excerpt":"实验4-1-11 高空坠球（20 分）皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第n次落地时，在空中一共经过多少距离？第n次反弹的高度是多少？ 输入格式:输入在一行中给出两个非负整数，分别是皮球的初始高度和n，均在长整型范围内。 输出格式:在一行中顺序输出皮球第n次落地时在空中经过的距离、以及第n次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。 输入样例:133 5 输出样例:194.9 1.0","text":"实验4-1-11 高空坠球（20 分）皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第n次落地时，在空中一共经过多少距离？第n次反弹的高度是多少？ 输入格式:输入在一行中给出两个非负整数，分别是皮球的初始高度和n，均在长整型范围内。 输出格式:在一行中顺序输出皮球第n次落地时在空中经过的距离、以及第n次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。 输入样例:133 5 输出样例:194.9 1.0 12345678910111213141516171819#include&lt;stdio.h&gt; int main() &#123; int m,n,i; double x,y,z; scanf(\"%d%d\",&amp;m,&amp;n); y=0,z=m;i=1; while(i&lt;=n)&#123; x=0.5*z; y=y+x+z; z=x; i++; &#125; y=y-z; if(n==0) printf(\"0.0 0.0\"); else printf(\"%.1f %.1f\",y,z); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-10 兔子繁衍问题（15 分）","slug":"shryen4-1-10","date":"2017-11-01T03:57:00.000Z","updated":"2018-03-27T10:00:14.255Z","comments":true,"path":"2017/11/01/shryen4-1-10/","link":"","permalink":"/2017/11/01/shryen4-1-10/","excerpt":"实验4-1-10 兔子繁衍问题（15 分）一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到N对？ 输入格式:输入在一行中给出一个不超过10000的正整数N。 输出格式:在一行中输出兔子总数达到N最少需要的月数。 输入样例:130 输出样例:19","text":"实验4-1-10 兔子繁衍问题（15 分）一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到N对？ 输入格式:输入在一行中给出一个不超过10000的正整数N。 输出格式:在一行中输出兔子总数达到N最少需要的月数。 输入样例:130 输出样例:19 123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main(void)&#123; int N; int month=1; int sum=1; int now=0,pre=0; scanf(\"%d\",&amp;N); if(N==sum)&#123; printf(\"%d\\n\",month); &#125;else&#123; month++; now=pre+sum; while(now&lt;N)&#123; month++; pre=sum; sum=now; now=pre+sum; &#125; printf(\"%d\\n\",month); &#125; return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-9 猜数字游戏（15 分）","slug":"shryen4-1-9","date":"2017-11-01T03:56:00.000Z","updated":"2018-03-27T10:00:07.659Z","comments":true,"path":"2017/11/01/shryen4-1-9/","link":"","permalink":"/2017/11/01/shryen4-1-9/","excerpt":"实验4-1-9 猜数字游戏（15 分）猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（&gt;3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。 输入格式:输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。 输出格式:在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。 输入样例:123456758 47050565860-2 输出样例:1234Too bigToo smallToo smallGood Guess!","text":"实验4-1-9 猜数字游戏（15 分）猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（&gt;3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。 输入格式:输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。 输出格式:在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。 输入样例:123456758 47050565860-2 输出样例:1234Too bigToo smallToo smallGood Guess! 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;stdio.h&gt;int main() &#123; int key, n; scanf(\"%d %d\",&amp;key,&amp;n); int i; int m; int flag = 0; for (i = 1;i &lt;= n;i ++) &#123; scanf(\"%d\",&amp;m); if (m &lt; 0) break; if (m &gt; key) printf(\"Too big\\n\"); if (m &lt; key) printf(\"Too small\\n\"); if (m == key) &#123; if (i == 1) &#123; flag = 1; printf(\"Bingo!\\n\"); break; &#125; if (i == 2 || i == 3) &#123; flag = 1; printf(\"Lucky You!\\n\"); break; &#125; if (i &gt; 3) &#123; flag = 1; printf(\"Good Guess!\\n\"); break; &#125; &#125; &#125; if (flag == 0) printf(\"Game Over\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-8 求给定精度的简单交错序列部分和（15 分）","slug":"shryen4-1-8","date":"2017-11-01T02:35:00.000Z","updated":"2018-03-27T10:00:00.047Z","comments":true,"path":"2017/11/01/shryen4-1-8/","link":"","permalink":"/2017/11/01/shryen4-1-8/","excerpt":"实验4-1-8 求给定精度的简单交错序列部分和（15 分）本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。 输入格式:输入在一行中给出一个正实数eps。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例1:14E-2 输出样例1:1sum = 0.854457 输入样例2:10.02 输出样例2:1sum = 0.826310","text":"实验4-1-8 求给定精度的简单交错序列部分和（15 分）本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。 输入格式:输入在一行中给出一个正实数eps。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例1:14E-2 输出样例1:1sum = 0.854457 输入样例2:10.02 输出样例2:1sum = 0.826310 12345678910111213141516#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void)&#123; int fz=1,fm=1,flag=1; double eps,item,sum=0; scanf(\"%lf\",&amp;eps); item=eps+1; while(fabs(item)&gt;eps)&#123; item=flag*1.0/fm; sum=sum+item; fm=fm+3; flag=-flag; &#125; printf(\"sum = %.6f\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-7 特殊a串数列求和（20 分）","slug":"shryen4-1-7","date":"2017-11-01T02:35:00.000Z","updated":"2018-03-27T09:59:53.262Z","comments":true,"path":"2017/11/01/shryen4-1-7/","link":"","permalink":"/2017/11/01/shryen4-1-7/","excerpt":"实验4-1-7 特殊a串数列求和（20 分）给定两个均不超过9的正整数a和n，要求编写程序求a+aa+aaa++⋯+aa⋯a（n个a）之和。 输入格式：输入在一行中给出不超过9的正整数a和n。 输出格式：在一行中按照“s = 对应的和”的格式输出。 输入样例：12 3 输出样例：1s = 246","text":"实验4-1-7 特殊a串数列求和（20 分）给定两个均不超过9的正整数a和n，要求编写程序求a+aa+aaa++⋯+aa⋯a（n个a）之和。 输入格式：输入在一行中给出不超过9的正整数a和n。 输出格式：在一行中按照“s = 对应的和”的格式输出。 输入样例：12 3 输出样例：1s = 246 123456789101112#include&lt;stdio.h&gt; int main() &#123; int a,n,sum,i,t; t=sum=0; scanf(\"%d%d\",&amp;a,&amp;n); for(i=1;i&lt;=n;i++)&#123; t=t*10+a; sum+=t; &#125; printf(\"s = %d\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-6 求分数序列前N项和（15 分）","slug":"shryen4-1-6","date":"2017-11-01T02:26:00.000Z","updated":"2018-03-27T09:59:46.981Z","comments":true,"path":"2017/11/01/shryen4-1-6/","link":"","permalink":"/2017/11/01/shryen4-1-6/","excerpt":"实验4-1-6 求分数序列前N项和（15 分）本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+… 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:120 输出样例:132.66","text":"实验4-1-6 求分数序列前N项和（15 分）本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+… 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:120 输出样例:132.66 12345678910111213141516#include&lt;stdio.h&gt; int main() &#123; double n,z,m,i,t; double item,sum; sum=0;m=1;z=2; scanf(\"%lf\",&amp;n); for(i=1;i&lt;=n;i++)&#123; item=1.0*z/m; sum=sum+item; t=z; z=z+m; m=t; &#125; printf(\"%.2f\",sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-5 韩信点兵（10 分）","slug":"shryen4-1-5","date":"2017-11-01T02:25:00.000Z","updated":"2018-03-27T09:59:40.967Z","comments":true,"path":"2017/11/01/shryen4-1-5/","link":"","permalink":"/2017/11/01/shryen4-1-5/","excerpt":"实验4-1-5 韩信点兵（10 分）在中国数学史上，广泛流传着一个“韩信点兵”的故事：韩信是汉高祖刘邦手下的大将，他英勇善战，智谋超群，为汉朝建立了卓越的功劳。据说韩信的数学水平也非常高超，他在点兵的时候，为了知道有多少兵，同时又能保住军事机密，便让士兵排队报数： 按从1至5报数，记下最末一个士兵报的数为1； 再按从1至6报数，记下最末一个士兵报的数为5； 再按从1至7报数，记下最末一个士兵报的数为4； 最后按从1至11报数，最末一个士兵报的数为10； 请编写程序计算韩信至少有多少兵。 输入格式：本题无输入 输出格式：输出韩信至少拥有的士兵人数。","text":"实验4-1-5 韩信点兵（10 分）在中国数学史上，广泛流传着一个“韩信点兵”的故事：韩信是汉高祖刘邦手下的大将，他英勇善战，智谋超群，为汉朝建立了卓越的功劳。据说韩信的数学水平也非常高超，他在点兵的时候，为了知道有多少兵，同时又能保住军事机密，便让士兵排队报数： 按从1至5报数，记下最末一个士兵报的数为1； 再按从1至6报数，记下最末一个士兵报的数为5； 再按从1至7报数，记下最末一个士兵报的数为4； 最后按从1至11报数，最末一个士兵报的数为10； 请编写程序计算韩信至少有多少兵。 输入格式：本题无输入 输出格式：输出韩信至少拥有的士兵人数。 12345678#include&lt;stdio.h&gt; int main() &#123; int i=0; while(!(i%5==1&amp;&amp;i%6==5&amp;&amp;i%7==4&amp;&amp;i%11==10)) i++; printf(\"%d\",i); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-3 找出最小值（20 分）","slug":"shryen4-1-3","date":"2017-10-29T01:45:00.000Z","updated":"2018-03-27T09:59:27.463Z","comments":true,"path":"2017/10/29/shryen4-1-3/","link":"","permalink":"/2017/10/29/shryen4-1-3/","excerpt":"实验4-1-3 找出最小值（20 分）本题要求编写程序，找出给定一系列整数中的最小值。 输入格式：输入在一行中首先给出一个正整数n，之后是n个整数，其间以空格分隔。 输出格式：在一行中按照“min = 最小值”的格式输出n个整数中的最小值。 输入样例：14 -2 -123 100 0 输出样例：1min = -123","text":"实验4-1-3 找出最小值（20 分）本题要求编写程序，找出给定一系列整数中的最小值。 输入格式：输入在一行中首先给出一个正整数n，之后是n个整数，其间以空格分隔。 输出格式：在一行中按照“min = 最小值”的格式输出n个整数中的最小值。 输入样例：14 -2 -123 100 0 输出样例：1min = -123 12345678910111213#include &lt;stdio.h&gt; int main(void ) &#123; int i,a,min,n; scanf(\"%d\",&amp;n); min=a; for(i=1;i&lt;=n;i++)&#123; scanf(\"%d\",&amp;a); if(min&gt;a) min=a; &#125; printf(\"min = %d\\n\",min); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-4 求整数的位数及各位数字之和（15 分）","slug":"shryen4-1-4","date":"2017-10-29T01:45:00.000Z","updated":"2018-03-27T09:59:34.327Z","comments":true,"path":"2017/10/29/shryen4-1-4/","link":"","permalink":"/2017/10/29/shryen4-1-4/","excerpt":"实验4-1-4 求整数的位数及各位数字之和（15 分）对于给定的正整数N，求它的位数及其各位数字之和。 输入格式：输入在一行中给出一个不超过109的正整数N。 输出格式：在一行中输出N的位数及其各位数字之和，中间用一个空格隔开。 输入样例：1321 输出样例：13 6","text":"实验4-1-4 求整数的位数及各位数字之和（15 分）对于给定的正整数N，求它的位数及其各位数字之和。 输入格式：输入在一行中给出一个不超过109的正整数N。 输出格式：在一行中输出N的位数及其各位数字之和，中间用一个空格隔开。 输入样例：1321 输出样例：13 6 123456789101112131415#include&lt;stdio.h&gt; int main(void) &#123; int count=0,number,i; int sum=0; scanf(\"%d\",&amp;number); do &#123; i=number%10; number=number/10; sum=sum+i; count++; &#125; while(number!=0); printf(\"%d %d\\n\",count,sum); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-2 求奇数和（15 分）","slug":"shryen4-1-2","date":"2017-10-29T01:41:00.000Z","updated":"2018-03-27T09:59:20.174Z","comments":true,"path":"2017/10/29/shryen4-1-2/","link":"","permalink":"/2017/10/29/shryen4-1-2/","excerpt":"实验4-1-2 求奇数和（15 分）本题要求计算给定的一系列正整数中奇数的和。 输入格式:输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。 输出格式:在一行中输出正整数序列中奇数的和。 输入样例:18 7 4 3 70 5 6 101 -1 输出样例:1116","text":"实验4-1-2 求奇数和（15 分）本题要求计算给定的一系列正整数中奇数的和。 输入格式:输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。 输出格式:在一行中输出正整数序列中奇数的和。 输入样例:18 7 4 3 70 5 6 101 -1 输出样例:1116 123456789101112#include &lt;stdio.h&gt; int main(void) &#123; int n,z; z=0; scanf(\"%d\",&amp;n); while(n&gt;0) &#123; if(n%2!=0) z=z+n; scanf(\"%d\",&amp;n); &#125; printf(\"%d\",z);return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验4-1-1 最大公约数和最小公倍数（15 分）","slug":"shryen4-1-1","date":"2017-10-29T01:24:00.000Z","updated":"2018-03-27T09:59:13.399Z","comments":true,"path":"2017/10/29/shryen4-1-1/","link":"","permalink":"/2017/10/29/shryen4-1-1/","excerpt":"实验4-1-1 最大公约数和最小公倍数（15 分）本题要求两个给定正整数的最大公约数和最小公倍数。 输入格式:输入在一行中给出两个正整数M和N（≤1000）。 输出格式:在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。 输入样例:1511 292 输出样例:173 2044","text":"实验4-1-1 最大公约数和最小公倍数（15 分）本题要求两个给定正整数的最大公约数和最小公倍数。 输入格式:输入在一行中给出两个正整数M和N（≤1000）。 输出格式:在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。 输入样例:1511 292 输出样例:173 2044 12345678910111213#include &lt;stdio.h&gt;#include&lt;math.h&gt; int main() &#123; int m,n,gb,gy; scanf(\"%d%d\",&amp;m,&amp;n); gb=m; while(gb%n!=0)&#123; gb=gb+m; &#125; gy=(m*n)/gb; printf(\"%d %d\",gy,gb); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-11 计算油费（15 分）","slug":"shryen3-11","date":"2017-10-27T01:28:00.000Z","updated":"2018-03-27T09:59:06.911Z","comments":true,"path":"2017/10/27/shryen3-11/","link":"","permalink":"/2017/10/27/shryen3-11/","excerpt":"实验3-11 计算油费（15 分）现在90号汽油6.95元/升、93号汽油7.44元/升、97号汽油7.93元/升。为吸引顾客，某自动加油站推出了“自助服务”和“协助服务”两个服务等级，分别可得到5%和3%的折扣。 本题要求编写程序，根据输入顾客的加油量a，汽油品种b（90、93或97）和服务类型c（m - 自助，e - 协助），计算并输出应付款。 输入格式：输入在一行中给出两个整数和一个字符，分别表示顾客的加油量a，汽油品种b（90、93或97）和服务类型c（m - 自助，e - 协助）。 输出格式：在一行中输出应付款额，保留小数点后2位。 输入样例：140 97 m 输出样例：1301.34","text":"实验3-11 计算油费（15 分）现在90号汽油6.95元/升、93号汽油7.44元/升、97号汽油7.93元/升。为吸引顾客，某自动加油站推出了“自助服务”和“协助服务”两个服务等级，分别可得到5%和3%的折扣。 本题要求编写程序，根据输入顾客的加油量a，汽油品种b（90、93或97）和服务类型c（m - 自助，e - 协助），计算并输出应付款。 输入格式：输入在一行中给出两个整数和一个字符，分别表示顾客的加油量a，汽油品种b（90、93或97）和服务类型c（m - 自助，e - 协助）。 输出格式：在一行中输出应付款额，保留小数点后2位。 输入样例：140 97 m 输出样例：1301.34 1234567891011121314151617181920212223#include&lt;stdio.h&gt;int main()&#123; float r1,r2,s; int a,b; char c; s=0; scanf(\"%d %d %c\",&amp;a,&amp;b,&amp;c); switch(b) &#123; case 90 : r1=6.95; break;////// case 93 : r1=7.44; break;////// case 97 : r1=7.93; break;////// &#125; switch(c) &#123; case 'm' : r2=0.95; break; case 'e' : r2=0.97; break; &#125; s=r1*r2*a; printf(\"%.2f\",s); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-10 高速公路超速处罚（15 分）","slug":"shryen3-10","date":"2017-10-27T01:27:00.000Z","updated":"2018-03-27T09:59:00.558Z","comments":true,"path":"2017/10/27/shryen3-10/","link":"","permalink":"/2017/10/27/shryen3-10/","excerpt":"实验3-10 高速公路超速处罚（15 分）按照规定，在高速公路上行使的机动车，达到或超出本车道限速的10%则处200元罚款；若达到或超出50%，就要吊销驾驶证。请编写程序根据车速和限速自动判别对该机动车的处理。 输入格式:输入在一行中给出2个正整数，分别对应车速和限速，其间以空格分隔。 输出格式:在一行中输出处理意见：若属于正常行驶，则输出“OK”；若应处罚款，则输出“Exceed x%. Ticket 200”；若应吊销驾驶证，则输出“Exceed x%. License Revoked”。其中x是超速的百分比，精确到整数。 输入样例1:165 60 输出样例1:1OK 输入样例2:1110 100 输出样例2:1Exceed 10%. Ticket 200 输入样例3:1200 120 输出样例3:1Exceed 67%. License Revoked","text":"实验3-10 高速公路超速处罚（15 分）按照规定，在高速公路上行使的机动车，达到或超出本车道限速的10%则处200元罚款；若达到或超出50%，就要吊销驾驶证。请编写程序根据车速和限速自动判别对该机动车的处理。 输入格式:输入在一行中给出2个正整数，分别对应车速和限速，其间以空格分隔。 输出格式:在一行中输出处理意见：若属于正常行驶，则输出“OK”；若应处罚款，则输出“Exceed x%. Ticket 200”；若应吊销驾驶证，则输出“Exceed x%. License Revoked”。其中x是超速的百分比，精确到整数。 输入样例1:165 60 输出样例1:1OK 输入样例2:1110 100 输出样例2:1Exceed 10%. Ticket 200 输入样例3:1200 120 输出样例3:1Exceed 67%. License Revoked 12345678910111213#include &lt;stdio.h&gt; int main(void) &#123; int m,n; double z; scanf(\"%d%d\",&amp;m,&amp;n); z=(m-n)*100.0/n; if(z&lt;10) printf(\"OK\\n\"); else if(z&lt;50) printf(\"Exceed %.0f%%. Ticket 200\\n\",z); else printf(\"Exceed %.0f%%. License Revoked\\n\",z); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-9 三天打鱼两天晒网（15 分）","slug":"shryen3-9","date":"2017-10-27T01:26:00.000Z","updated":"2018-03-27T09:58:53.782Z","comments":true,"path":"2017/10/27/shryen3-9/","link":"","permalink":"/2017/10/27/shryen3-9/","excerpt":"实验3-9 三天打鱼两天晒网（15 分）中国有句俗语叫“三天打鱼两天晒网”。假设某人从某天起，开始“三天打鱼两天晒网”，问这个人在以后的第N天中是“打鱼”还是“晒网”？ 输入格式：输入在一行中给出一个不超过1000的正整数N。 输出格式：在一行中输出此人在第N天中是“Fishing”（即“打鱼”）还是“Drying”（即“晒网”），并且输出“in day N”。 输入样例1：1103 输出样例1：1Fishing in day 103 输入样例2：134 输出样例2：1Drying in day 34","text":"实验3-9 三天打鱼两天晒网（15 分）中国有句俗语叫“三天打鱼两天晒网”。假设某人从某天起，开始“三天打鱼两天晒网”，问这个人在以后的第N天中是“打鱼”还是“晒网”？ 输入格式：输入在一行中给出一个不超过1000的正整数N。 输出格式：在一行中输出此人在第N天中是“Fishing”（即“打鱼”）还是“Drying”（即“晒网”），并且输出“in day N”。 输入样例1：1103 输出样例1：1Fishing in day 103 输入样例2：134 输出样例2：1Drying in day 34 12345678910#include&lt;stdio.h&gt; int main(void) &#123; int x; scanf(\"%d\",&amp;x); if(x%5==0||(x+1)%5==0) printf(\"Drying in day %d\",x); else printf(\"Fishing in day %d\",x); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-8 输出三角形面积和周长（15 分）","slug":"shryen3-8","date":"2017-10-27T01:25:00.000Z","updated":"2018-03-27T09:58:46.591Z","comments":true,"path":"2017/10/27/shryen3-8/","link":"","permalink":"/2017/10/27/shryen3-8/","excerpt":"实验3-8 输出三角形面积和周长（15 分）本题要求编写程序，根据输入的三角形的三条边a、b、c，计算并输出面积和周长。注意：在一个三角形中， 任意两边之和大于第三边。三角形面积计算公式：area=√s(s−a)(s−b)(s−c)，其中s=(a+b+c)/2。 输入格式：输入为3个正整数，分别代表三角形的3条边a、b、c。 输出格式：如果输入的边能构成一个三角形，则在一行内，按照 1area = 面积; perimeter = 周长 的格式输出，保留两位小数。否则，输出 1These sides do not correspond to a valid triangle 输入样例1：15 5 3 输出样例1：1area = 7.15; perimeter = 13.00 输入样例2：11 4 1 输出样例2：1These sides do not correspond to a valid triangle","text":"实验3-8 输出三角形面积和周长（15 分）本题要求编写程序，根据输入的三角形的三条边a、b、c，计算并输出面积和周长。注意：在一个三角形中， 任意两边之和大于第三边。三角形面积计算公式：area=√s(s−a)(s−b)(s−c)，其中s=(a+b+c)/2。 输入格式：输入为3个正整数，分别代表三角形的3条边a、b、c。 输出格式：如果输入的边能构成一个三角形，则在一行内，按照 1area = 面积; perimeter = 周长 的格式输出，保留两位小数。否则，输出 1These sides do not correspond to a valid triangle 输入样例1：15 5 3 输出样例1：1area = 7.15; perimeter = 13.00 输入样例2：11 4 1 输出样例2：1These sides do not correspond to a valid triangle 123456789101112131415#include&lt;stdio.h&gt; #include&lt;math.h&gt;int main(void) &#123; double area,perimeter,s,a,b,c; scanf(\"%lf%lf%lf\",&amp;a,&amp;b,&amp;c); if((a+b&gt;c)&amp;&amp;(a+c&gt;b)&amp;&amp;(b+c&gt;a))&#123; s=(a+b+c)/2; area=sqrt(s*(s-a)*(s-b)*(s-c)); perimeter=a+b+c; printf(\"area=%.2f,perimeter=%.2f\\n\",area,perimeter); &#125;else&#123; printf(\"These sides do not corrspond to a vaild triangle\\n\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-7 统计学生成绩（15 分）","slug":"shryen3-7","date":"2017-10-27T01:24:00.000Z","updated":"2018-03-27T09:58:38.656Z","comments":true,"path":"2017/10/27/shryen3-7/","link":"","permalink":"/2017/10/27/shryen3-7/","excerpt":"实验3-7 统计学生成绩（15 分）本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则： 大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。 输入格式:输入在第一行中给出一个正整数N（≤1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 输出格式:在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。 输入样例:12777 54 92 73 60 65 69 输出样例:11 0 2 3 1","text":"实验3-7 统计学生成绩（15 分）本题要求编写程序读入N个学生的百分制成绩，统计五分制成绩的分布。百分制成绩到五分制成绩的转换规则： 大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。 输入格式:输入在第一行中给出一个正整数N（≤1000），即学生人数；第二行中给出N个学生的百分制成绩，其间以空格分隔。 输出格式:在一行中输出A、B、C、D、E对应的五分制成绩的人数分布，数字间以空格分隔，行末不得有多余空格。 输入样例:12777 54 92 73 60 65 69 输出样例:11 0 2 3 1 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt; int main()&#123; int n,i,A,B,C,D,N,E; scanf(\"%d\\n\",&amp;n); A=B=C=D=E=0; for(i=1;i&lt;=n;i++)&#123; scanf(\"%d\",&amp;N); if(N&gt;=90)&#123; A++; &#125; else if(N&gt;=80)&#123; B++; &#125; else if(N&gt;=70)&#123; C++; &#125; else if (N&gt;=60)&#123; D++; &#125; else&#123; E++; &#125; &#125; printf(\"%d %d %d %d %d\",A,B,C,D,E); return 0; &#125; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-6 计算个人所得税（10 分）","slug":"shryen3-6","date":"2017-10-27T01:23:00.000Z","updated":"2018-03-27T09:58:31.354Z","comments":true,"path":"2017/10/27/shryen3-6/","link":"","permalink":"/2017/10/27/shryen3-6/","excerpt":"实验3-6 计算个人所得税（10 分）假设个人所得税为：税率×(工资−1600)。请编写程序计算应缴的所得税，其中税率定义为： 当工资不超过1600时，税率为0； 当工资在区间(1600, 2500]时，税率为5%； 当工资在区间(2500, 3500]时，税率为10%； 当工资在区间(3500, 4500]时，税率为15%； 当工资超过4500时，税率为20%。 输入格式:输入在一行中给出非负工资。 输出格式:在一行输出个人所得税，精确到小数点后2位。 输入样例1:11600 输出样例1:10.00 输入样例2:11601 输出样例2:10.05 输入样例3:13000 输出样例3:1140.00 输入样例4:14000 输出样例4:1360.00 输入样例5:15000 输出样例5:1680.00","text":"实验3-6 计算个人所得税（10 分）假设个人所得税为：税率×(工资−1600)。请编写程序计算应缴的所得税，其中税率定义为： 当工资不超过1600时，税率为0； 当工资在区间(1600, 2500]时，税率为5%； 当工资在区间(2500, 3500]时，税率为10%； 当工资在区间(3500, 4500]时，税率为15%； 当工资超过4500时，税率为20%。 输入格式:输入在一行中给出非负工资。 输出格式:在一行输出个人所得税，精确到小数点后2位。 输入样例1:11600 输出样例1:10.00 输入样例2:11601 输出样例2:10.05 输入样例3:13000 输出样例3:1140.00 输入样例4:14000 输出样例4:1360.00 输入样例5:15000 输出样例5:1680.00 1234567891011121314151617181920212223242526#include&lt;stdio.h&gt;int main(void)&#123; double a,n,m,o,p,q; scanf(\"%lf\",&amp;n); if(n&lt;=1600)&#123; a=0; printf(\"%.2f\",a); &#125; else if(n&lt;=2500)&#123; m=(n-1600)*0.05; printf(\"%.2f\",m); &#125; else if(n&lt;=3500)&#123; o=(n-1600)*0.1; printf(\"%.2f\",o); &#125; else if(n&lt;=4500)&#123; p=(n-1600)*0.15; printf(\"%.2f\",p); &#125; else&#123; q=(n-1600)*0.2; printf(\"%.2f\",q); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-5 查询水果价格（15 分）","slug":"shryen3-5","date":"2017-10-27T01:22:00.000Z","updated":"2018-03-27T09:58:23.877Z","comments":true,"path":"2017/10/27/shryen3-5/","link":"","permalink":"/2017/10/27/shryen3-5/","excerpt":"实验3-5 查询水果价格（15 分）给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。 首先在屏幕上显示以下菜单： 12345[1] apple[2] pear[3] orange[4] grape[0] exit 用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。 输入格式:输入在一行中给出用户连续输入的若干个编号。 输出格式:首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。 输入样例1:13 -1 0 2 输出样例1:1234567[1] apple[2] pear[3] orange[4] grape[0] exitprice = 4.10price = 0.00 输入样例2:11 2 3 3 4 4 5 6 7 8 输出样例2:12345678910[1] apple[2] pear[3] orange[4] grape[0] exitprice = 3.00price = 2.50price = 4.10price = 4.10price = 10.20","text":"实验3-5 查询水果价格（15 分）给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。 首先在屏幕上显示以下菜单： 12345[1] apple[2] pear[3] orange[4] grape[0] exit 用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。 输入格式:输入在一行中给出用户连续输入的若干个编号。 输出格式:首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。 输入样例1:13 -1 0 2 输出样例1:1234567[1] apple[2] pear[3] orange[4] grape[0] exitprice = 4.10price = 0.00 输入样例2:11 2 3 3 4 4 5 6 7 8 输出样例2:12345678910[1] apple[2] pear[3] orange[4] grape[0] exitprice = 3.00price = 2.50price = 4.10price = 4.10price = 10.20 1234567891011121314151617181920212223#include&lt;stdio.h&gt; int main(void)&#123; int n,i; double price; printf(\"[1] apple\\n\"); printf(\"[2] pear\\n\"); printf(\"[3] orange\\n\"); printf(\"[4] grape\\n\"); printf(\"[0] exit\\n\"); for(i=1;i&lt;=5;i++)&#123; scanf(\"%d\",&amp;n); if(n==0) break; switch(n)&#123; case 1:price=3.00;break; case 2:price=2.50;break; case 3:price=4.10;break; case 4:price=10.20;break; default:price=0.00;break; &#125; printf(\"price = %.2f\\n\",price); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-4 统计字符（15 分）","slug":"shryen3-4","date":"2017-10-27T01:21:00.000Z","updated":"2018-03-27T09:58:15.956Z","comments":true,"path":"2017/10/27/shryen3-4/","link":"","permalink":"/2017/10/27/shryen3-4/","excerpt":"实验3-4 统计字符（15 分）本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。 输入格式:输入为10个字符。最后一个回车表示输入结束，不算在内。 输出格式:在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 输入样例:12aZ &amp;09 Az 输出样例:1letter = 4, blank = 3, digit = 2, other = 1","text":"实验3-4 统计字符（15 分）本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。 输入格式:输入为10个字符。最后一个回车表示输入结束，不算在内。 输出格式:在一行内按照 1letter = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数 的格式输出。 输入样例:12aZ &amp;09 Az 输出样例:1letter = 4, blank = 3, digit = 2, other = 1 1234567891011121314151617#include&lt;stdio.h&gt;int main(void)&#123; int i,letter,blank,digit,other; char ch; letter=blank=digit=other=0; for(i=1;i&lt;=10;i++)&#123; scanf(\"%c\",&amp;ch); if(ch&gt;='A'&amp;&amp;ch&lt;='Z'||(ch&gt;='a'&amp;&amp;ch&lt;='z')) letter++; else if(ch==' '||ch=='\\n') blank++; else if(ch&gt;='0'&amp;&amp;ch&lt;='9') digit++; else other++; &#125; printf(\"letter = %d, blank = %d, digit = %d, other = %d\",letter,blank,digit,other); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-3 比较大小（10 分）","slug":"shryen3-3","date":"2017-10-27T01:20:00.000Z","updated":"2018-03-27T09:58:07.335Z","comments":true,"path":"2017/10/27/shryen3-3/","link":"","permalink":"/2017/10/27/shryen3-3/","excerpt":"实验3-3 比较大小（10 分）本题要求将输入的任意3个整数从小到大输出。 输入格式:输入在一行中给出3个整数，其间以空格分隔。 输出格式:在一行中将3个整数从小到大输出，其间以“-&gt;”相连。 输入样例:14 2 8 输出样例:12-&gt;4-&gt;8","text":"实验3-3 比较大小（10 分）本题要求将输入的任意3个整数从小到大输出。 输入格式:输入在一行中给出3个整数，其间以空格分隔。 输出格式:在一行中将3个整数从小到大输出，其间以“-&gt;”相连。 输入样例:14 2 8 输出样例:12-&gt;4-&gt;8 1234567891011121314151617#include&lt;stdio.h&gt;int main(void)&#123; int a,b,c,t; scanf(\"%d %d %d\",&amp;a,&amp;b,&amp;c); if(a&lt;b)&#123; t=b;b=a;a=t; &#125;; if(a&lt;c)&#123; t=c;c=a;a=t; &#125;; if(b&lt;c)&#123; t=c;c=b;b=t; &#125;; printf(\"%d-&gt;%d-&gt;%d\",c,b,a); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-2 计算符号函数的值（10 分）","slug":"shryen3-2","date":"2017-10-27T01:19:00.000Z","updated":"2018-03-27T09:57:59.807Z","comments":true,"path":"2017/10/27/shryen3-2/","link":"","permalink":"/2017/10/27/shryen3-2/","excerpt":"实验3-2 计算符号函数的值（10 分）对于任一整数n，符号函数sign(n)的定义如下： 请编写程序计算该函数对任一输入整数的值。 输入格式:输入在一行中给出整数n。 输出格式:在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。 输入样例1:110 输出样例1:1sign(10) = 1 输入样例2:10 输出样例2:1sign(0) = 0 输入样例3:1-98 输出样例3:1sign(-98) = -1","text":"实验3-2 计算符号函数的值（10 分）对于任一整数n，符号函数sign(n)的定义如下： 请编写程序计算该函数对任一输入整数的值。 输入格式:输入在一行中给出整数n。 输出格式:在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。 输入样例1:110 输出样例1:1sign(10) = 1 输入样例2:10 输出样例2:1sign(0) = 0 输入样例3:1-98 输出样例3:1sign(-98) = -1 12345678910111213#include&lt;stdio.h&gt; int main(void)&#123; int n,p; scanf(\"%d\",&amp;n); if(n&lt;0) p=-1; else if(n==0) p=0; else if(n&gt;0) p=1; printf(\"sign(%d) = %d\",n,p); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验3-1 求一元二次方程的根（20 分）","slug":"shryen3-1","date":"2017-10-26T02:29:00.000Z","updated":"2018-03-27T09:57:51.926Z","comments":true,"path":"2017/10/26/shryen3-1/","link":"","permalink":"/2017/10/26/shryen3-1/","excerpt":"实验3-1 求一元二次方程的根（20 分）本题目要求一元二次方程的根，结果保留2位小数。 输入格式:输入在一行中给出3个浮点系数a、b、c，中间用空格分开。 输出格式:根据系数情况，输出不同结果： 1)如果方程有两个不相等的实数根，则每行输出一个根，先大后小； 2)如果方程有两个不相等复数根，则每行按照格式“实部+虚部i”输出一个根，先输出虚部为正的，后输出虚部为负的； 3)如果方程只有一个根，则直接输出此根； 4)如果系数都为0，则输出”Zero Equation”； 5)如果a和b为0，c不为0，则输出”Not An Equation”。 输入样例1:12.1 8.9 3.5 输出样例1:12-0.44-3.80 输入样例2:11 2 3 输出样例2:12-1.00+1.41i-1.00-1.41i 输入样例3:10 2 4 输出样例3:1-2.00 输入样例4:10 0 0 输出样例4:1Zero Equation 输入样例5:10 0 1 输出样例5:1Not An Equation","text":"实验3-1 求一元二次方程的根（20 分）本题目要求一元二次方程的根，结果保留2位小数。 输入格式:输入在一行中给出3个浮点系数a、b、c，中间用空格分开。 输出格式:根据系数情况，输出不同结果： 1)如果方程有两个不相等的实数根，则每行输出一个根，先大后小； 2)如果方程有两个不相等复数根，则每行按照格式“实部+虚部i”输出一个根，先输出虚部为正的，后输出虚部为负的； 3)如果方程只有一个根，则直接输出此根； 4)如果系数都为0，则输出”Zero Equation”； 5)如果a和b为0，c不为0，则输出”Not An Equation”。 输入样例1:12.1 8.9 3.5 输出样例1:12-0.44-3.80 输入样例2:11 2 3 输出样例2:12-1.00+1.41i-1.00-1.41i 输入样例3:10 2 4 输出样例3:1-2.00 输入样例4:10 0 0 输出样例4:1Zero Equation 输入样例5:10 0 1 输出样例5:1Not An Equation 12345678910111213141516171819202122232425262728293031323334#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void)&#123; double a,b,c; double d,del,ans1,ans2; scanf(\"%lf%lf%lf\",&amp;a,&amp;b,&amp;c); d=b*b-4.0*a*c; if(a==b&amp;&amp;a==c&amp;&amp;a==0) printf(\"Zero Equation\\n\"); else if(a==b&amp;&amp;a==0&amp;&amp;c!=0) printf(\"Not An Equation\\n\"); else if(d==0)&#123; ans1=(-b)/(2.0*a); printf(\"%.2f\\n\",ans1); &#125; else if(a==0) printf(\"%.2f\\n\",(-c)/b); else if(d&gt;0)&#123; del=sqrt(d); ans1=(-b+del)/(2.0*a); ans2=(-b-del)/(2.0*a); printf(\"%.2f\\n%.2f\\n\",ans1,ans2); &#125; else if(d&lt;0)&#123; del=sqrt(-d); if(b!=0) ans1=(-b)/(2.0*a); else ans1=0; ans2=del/(2.0*a); printf(\"%.2f+%.2fi\\n%.2f-%.2fi\\n\",ans1,ans2,ans1,ans2); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-7 求组合数（15 分）","slug":"shryen2-4-7","date":"2017-10-26T02:28:00.000Z","updated":"2018-03-27T09:57:37.549Z","comments":true,"path":"2017/10/26/shryen2-4-7/","link":"","permalink":"/2017/10/26/shryen2-4-7/","excerpt":"实验2-4-7 求组合数（15 分）本题要求编写程序，根据公式Cnm=m!(n−m)!n!算出从n个不同元素中取出m个元素（m≤n）的组合数。 建议定义和调用函数fact(n)计算n!，其中n的类型是int，函数类型是double。 输入格式:输入在一行中给出两个正整数m和n（m≤n），以空格分隔。 输出格式:按照格式“result = 组合数计算结果”输出。题目保证结果在double类型范围内。 输入样例:12 7 输出样例:1result = 21","text":"实验2-4-7 求组合数（15 分）本题要求编写程序，根据公式Cnm=m!(n−m)!n!算出从n个不同元素中取出m个元素（m≤n）的组合数。 建议定义和调用函数fact(n)计算n!，其中n的类型是int，函数类型是double。 输入格式:输入在一行中给出两个正整数m和n（m≤n），以空格分隔。 输出格式:按照格式“result = 组合数计算结果”输出。题目保证结果在double类型范围内。 输入样例:12 7 输出样例:1result = 21 1234567891011121314151617181920212223#include&lt;stdio.h&gt;double fact(int n); int main(void)&#123; double result; int m,n,d; double x,y,z,a; scanf(\"%d %d\",&amp;m,&amp;n); d=n-m; x=fact(m); y=fact(n); z=fact(d); result = y/x/z; printf(\"result = %.f\",result); return 0; &#125; double fact (int n)&#123; int i; double a; a=1; for(i=1;i&lt;=n;i++)&#123; a=a*i; &#125; return a;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-6 求幂之和（15 分）","slug":"shryen2-4-6","date":"2017-10-26T02:27:00.000Z","updated":"2018-03-27T09:57:02.198Z","comments":true,"path":"2017/10/26/shryen2-4-6/","link":"","permalink":"/2017/10/26/shryen2-4-6/","excerpt":"实验2-4-6 求幂之和（15 分）本题要求编写程序，计算sum=2^1+2^2+2^3+⋯+2^n。可以调用pow函数求幂。 输入格式:输入在一行中给出正整数n（≤10）。 输出格式:按照格式“result = 计算结果”输出。 输入样例:15 输出样例:1result = 62","text":"实验2-4-6 求幂之和（15 分）本题要求编写程序，计算sum=2^1+2^2+2^3+⋯+2^n。可以调用pow函数求幂。 输入格式:输入在一行中给出正整数n（≤10）。 输出格式:按照格式“result = 计算结果”输出。 输入样例:15 输出样例:1result = 62 123456789101112#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void) &#123; double result,s; int n,i; s=0; scanf(\"%d\",&amp;n); for(i=1;i&lt;=n;i++)&#123; result=pow(2,i); s=s+result; &#125;printf(\"result = %.0f\",s); return 0;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-5 简单实现x的n次方（10 分）","slug":"shryen2-4-5","date":"2017-10-23T02:27:00.000Z","updated":"2018-03-05T01:54:04.644Z","comments":true,"path":"2017/10/23/shryen2-4-5/","link":"","permalink":"/2017/10/23/shryen2-4-5/","excerpt":"实验2-4-5 简单实现x的n次方（10 分）本题要求实现一个计算x^n（n≥0）的函数。 函数接口定义：1double mypow( double x, int n ); 函数mypow应返回x的n次幂的值。题目保证结果在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double mypow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%f\\n\", mypow(x, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.24 4 输出样例：10.003318","text":"实验2-4-5 简单实现x的n次方（10 分）本题要求实现一个计算x^n（n≥0）的函数。 函数接口定义：1double mypow( double x, int n ); 函数mypow应返回x的n次幂的值。题目保证结果在双精度范围内。 裁判测试程序样例：12345678910111213141516#include &lt;stdio.h&gt;double mypow( double x, int n );int main()&#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%f\\n\", mypow(x, n)); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：10.24 4 输出样例：10.003318 123456789101112131415#include &lt;stdio.h&gt; #include &lt;math.h&gt; double mypow(double x,int n); int main() &#123; double x; int n; scanf(\"%lf %d\", &amp;x, &amp;n); printf(\"%f\\n\", mypow(x, n)); return 0; &#125;double mypow(double x,int n)&#123; double r; r=pow(x,n); return r;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-4 求阶乘序列前N项和（15 分）","slug":"shryen2-4-4","date":"2017-10-23T02:27:00.000Z","updated":"2018-03-05T01:52:26.520Z","comments":true,"path":"2017/10/23/shryen2-4-4/","link":"","permalink":"/2017/10/23/shryen2-4-4/","excerpt":"实验2-4-4 求阶乘序列前N项和（15 分）本题要求编写程序，计算序列 1!+2!+3!+⋯ 的前N项之和。 输入格式:输入在一行中给出一个不超过12的正整数N。 输出格式:在一行中输出整数结果。 输入样例:15 输出样例:1153","text":"实验2-4-4 求阶乘序列前N项和（15 分）本题要求编写程序，计算序列 1!+2!+3!+⋯ 的前N项之和。 输入格式:输入在一行中给出一个不超过12的正整数N。 输出格式:在一行中输出整数结果。 输入样例:15 输出样例:1153 1234567891011121314151617181920212223#include&lt;stdio.h&gt; double fact(int n); int main(void) &#123; double result,s=0; int n,i; scanf(\"%d\",&amp;n); for(i=1;i&lt;=n;i++)&#123; result=fact(i); s=s+result; &#125; printf(\"%.0f\",s); return 0;&#125;double fact(int n)&#123; double total = 0; if (n == 0)&#123; total = 1; &#125;else&#123; total = n * fact(n - 1); &#125; return total;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-3 求平方根序列前N项和（15 分）","slug":"shryen2-4-3","date":"2017-10-23T02:00:00.000Z","updated":"2018-03-05T01:52:37.070Z","comments":true,"path":"2017/10/23/shryen2-4-3/","link":"","permalink":"/2017/10/23/shryen2-4-3/","excerpt":"实验2-4-3 求平方根序列前N项和（15 分）本题要求编写程序，计算平方根序列√1+√2+√3+⋯的前N项之和。可包含头文件math.h，并调用sqrt函数求平方根。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 22.47","text":"实验2-4-3 求平方根序列前N项和（15 分）本题要求编写程序，计算平方根序列√1+√2+√3+⋯的前N项之和。可包含头文件math.h，并调用sqrt函数求平方根。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 22.47 12345678910111213#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void) &#123; int N,i; double s=0,a; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; a=sqrt(i); s=s+a; &#125; printf(\"sum = %.2f\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-2 生成3的乘方表（15 分）","slug":"shryen2-4-2","date":"2017-10-23T01:48:00.000Z","updated":"2018-03-05T01:52:46.938Z","comments":true,"path":"2017/10/23/shryen2-4-2/","link":"","permalink":"/2017/10/23/shryen2-4-2/","excerpt":"实验2-4-2 生成3的乘方表（15 分）输入一个非负整数n，生成一张3的乘方表，输出3^0~3^n的值。可调用幂函数计算3的乘方。 输入格式:输入在一行中给出一个非负整数n。 输出格式:按照幂的递增顺序输出n+1行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。 输入样例:13 输出样例:1234pow(3,0) = 1pow(3,1) = 3pow(3,2) = 9pow(3,3) = 27","text":"实验2-4-2 生成3的乘方表（15 分）输入一个非负整数n，生成一张3的乘方表，输出3^0~3^n的值。可调用幂函数计算3的乘方。 输入格式:输入在一行中给出一个非负整数n。 输出格式:按照幂的递增顺序输出n+1行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。 输入样例:13 输出样例:1234pow(3,0) = 1pow(3,1) = 3pow(3,2) = 9pow(3,3) = 27 12345678910111213#include&lt;stdio.h&gt; #include&lt;math.h&gt; int main(void) &#123; int n,i; double a; scanf(\"%d\",&amp;n); for(i=0;i&lt;=n;i++)&#123; a=pow(3,i); printf(\"pow(3,%d) = %.0f\\n\",i,a); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-4-1 统计各位数字之和是5的数（20 分）","slug":"shryen2-4-1","date":"2017-10-23T01:47:00.000Z","updated":"2018-03-05T01:49:07.544Z","comments":true,"path":"2017/10/23/shryen2-4-1/","link":"","permalink":"/2017/10/23/shryen2-4-1/","excerpt":"实验2-4-1 统计各位数字之和是5的数（20 分）本题要求实现两个函数：一个函数判断给定正整数的各位数字之和是否等于5；另一个函数统计给定区间内有多少个满足上述要求的整数，并计算这些整数的和。 函数接口定义：12int is( int number );void count_sum( int a, int b ); 函数is判断number的各位数字之和是否等于5，是则返回1，否则返回0。 函数count_sum利用函数is统计给定区间[a, b]内有多少个满足上述要求（即令is返回1）的整数，并计算这些整数的和。最后按照格式 1count = 满足条件的整数个数, sum = 这些整数的和 进行输出。题目保证0&lt;a≤b≤10000。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int is( int number );void count_sum( int a, int b );int main()&#123; int a, b; scanf(\"%d %d\", &amp;a, &amp;b); if (is(a)) printf(\"%d is counted.\\n\", a); if (is(b)) printf(\"%d is counted.\\n\", b); count_sum(a, b); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1104 999 输出样例：12104 is counted.count = 15, sum = 3720","text":"实验2-4-1 统计各位数字之和是5的数（20 分）本题要求实现两个函数：一个函数判断给定正整数的各位数字之和是否等于5；另一个函数统计给定区间内有多少个满足上述要求的整数，并计算这些整数的和。 函数接口定义：12int is( int number );void count_sum( int a, int b ); 函数is判断number的各位数字之和是否等于5，是则返回1，否则返回0。 函数count_sum利用函数is统计给定区间[a, b]内有多少个满足上述要求（即令is返回1）的整数，并计算这些整数的和。最后按照格式 1count = 满足条件的整数个数, sum = 这些整数的和 进行输出。题目保证0&lt;a≤b≤10000。 裁判测试程序样例：123456789101112131415161718#include &lt;stdio.h&gt;int is( int number );void count_sum( int a, int b );int main()&#123; int a, b; scanf(\"%d %d\", &amp;a, &amp;b); if (is(a)) printf(\"%d is counted.\\n\", a); if (is(b)) printf(\"%d is counted.\\n\", b); count_sum(a, b); return 0;&#125;/* 你的代码将被嵌在这里 */ 输入样例：1104 999 输出样例：12104 is counted.count = 15, sum = 3720 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;int is( int number );void count_sum( int a, int b ); int main() &#123; int a, b; scanf(\"%d %d\", &amp;a, &amp;b); if (is(a)) printf(\"%d is counted.\\n\", a); if (is(b)) printf(\"%d is counted.\\n\", b); count_sum(a, b); return 0; &#125; int is(int number) &#123; //1526 int c,d; int sum=0; while(number!=0) &#123; c=number%10; sum=sum+c; number=number/10; &#125; if(sum==5) &#123; return 1; &#125; else &#123; return 0; &#125; &#125;//104 999 void count_sum( int a, int b ) &#123; int i; int sum1=0; int count=0; for(i=a; i&lt;=b; i++) &#123; if(is(i)) &#123; count++; sum1=sum1+i; &#125; &#125; printf(\"count = %d, sum = %d\",count,sum1);&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-7 求平方与倒数序列的部分和（15 分）","slug":"shryen2-3-7","date":"2017-10-23T01:46:00.000Z","updated":"2018-03-02T09:31:03.105Z","comments":true,"path":"2017/10/23/shryen2-3-7/","link":"","permalink":"/2017/10/23/shryen2-3-7/","excerpt":"实验2-3-7 求平方与倒数序列的部分和（15 分）本题要求对两个正整数m和n（m≤n）编写程序，计算序列和m^2+1/m+(m+1)^2+1/(m+1)+⋯+n^2+1/n。 输入格式:输入在一行中给出两个正整数m和n（m≤n），其间以空格分开。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例:15 10 输出样例:1sum = 355.845635","text":"实验2-3-7 求平方与倒数序列的部分和（15 分）本题要求对两个正整数m和n（m≤n）编写程序，计算序列和m^2+1/m+(m+1)^2+1/(m+1)+⋯+n^2+1/n。 输入格式:输入在一行中给出两个正整数m和n（m≤n），其间以空格分开。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。 输入样例:15 10 输出样例:1sum = 355.845635 123456789101112131415#include&lt;stdio.h&gt; int main(void) &#123; int N,i,fm,M; double s=0,item; scanf(\"%d%d\",&amp;M,&amp;N); fm=M; for(i=M;i&lt;=N;i++) &#123; item=fm*fm+1.0/fm; s=s+item; fm=fm+1; &#125; printf(\"sum = %.6lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-6 求交错序列前N项和（15 分）","slug":"shryen2-3-6","date":"2017-10-23T01:39:00.000Z","updated":"2018-03-02T09:29:22.307Z","comments":true,"path":"2017/10/23/shryen2-3-6/","link":"","permalink":"/2017/10/23/shryen2-3-6/","excerpt":"实验2-3-6 求交错序列前N项和（15 分）本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+… 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，结果保留三位小数。 输入样例:15 输出样例:10.917","text":"实验2-3-6 求交错序列前N项和（15 分）本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+… 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中输出部分和的值，结果保留三位小数。 输入样例:15 输出样例:10.917 1234567891011121314#include&lt;stdio.h&gt; int main(void) &#123; int N,i,fm,flag; double s=0,item; scanf(\"%d\",&amp;N); fm=1; flag=1; for(i=1;i&lt;=N;i++) &#123; item=flag*i*1.0/fm; s=s+item; flag=-flag; fm=fm+2; &#125; printf(\"%.3lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-5 输出华氏-摄氏温度转换表（15 分）","slug":"shryen2-3-5","date":"2017-10-23T01:12:00.000Z","updated":"2018-03-02T09:28:35.390Z","comments":true,"path":"2017/10/23/shryen2-3-5/","link":"","permalink":"/2017/10/23/shryen2-3-5/","excerpt":"实验2-3-5 输出华氏-摄氏温度转换表（15 分）输入2个正整数lower和upper（lower≤upper≤100），请输出一张取值范围为[lower，upper]、且每次增加2华氏度的华氏-摄氏温度转换表。 温度转换的计算公式：C=5×(F−32)/9，其中：C表示摄氏温度，F表示华氏温度。 输入格式:在一行中输入2个整数，分别表示lower和upper的值，中间用空格分开。 输出格式:第一行输出：”fahr celsius” 接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。 若输入的范围不合法，则输出”Invalid.”。 输入样例1:132 35 输出样例1:123fahr celsius32 0.034 1.1 输入样例2:140 30 输出样例2:1Invalid.","text":"实验2-3-5 输出华氏-摄氏温度转换表（15 分）输入2个正整数lower和upper（lower≤upper≤100），请输出一张取值范围为[lower，upper]、且每次增加2华氏度的华氏-摄氏温度转换表。 温度转换的计算公式：C=5×(F−32)/9，其中：C表示摄氏温度，F表示华氏温度。 输入格式:在一行中输入2个整数，分别表示lower和upper的值，中间用空格分开。 输出格式:第一行输出：”fahr celsius” 接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。 若输入的范围不合法，则输出”Invalid.”。 输入样例1:132 35 输出样例1:123fahr celsius32 0.034 1.1 输入样例2:140 30 输出样例2:1Invalid. 123456789101112131415#include&lt;stdio.h&gt; int main(void) &#123; int fahr,lower,upper; double celsius; scanf(\"%d%d\",&amp;lower,&amp;upper); if(lower&lt;=upper &amp;&amp; upper&lt;=100)&#123; printf(\"fahr celsius\\n\"); for (fahr = lower;fahr&lt;= upper;fahr=fahr+2)&#123; celsius = (5.0/9.0)*(fahr-32); printf(\"%d%6.1f\\n\" ,fahr,celsius); &#125; &#125;else printf(\"Invalid.\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-4 求简单交错序列前N项和（15 分）","slug":"shryen2-3-4","date":"2017-10-23T01:07:00.000Z","updated":"2018-03-02T09:26:20.782Z","comments":true,"path":"2017/10/23/shryen2-3-4/","link":"","permalink":"/2017/10/23/shryen2-3-4/","excerpt":"实验2-3-4 求简单交错序列前N项和（15 分）本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 0.819","text":"实验2-3-4 求简单交错序列前N项和（15 分）本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。 输入样例:110 输出样例:1sum = 0.819 1234567891011121314#include&lt;stdio.h&gt; int main(void) &#123; int N,i,flag=1,fm=1; double s=0,item; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; item=flag*1.0/fm; s=s+item; flag=-flag; fm=fm+3; &#125; printf(\"sum = %.3lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-3 求奇数分之一序列前N项和（15 分）","slug":"shryen2-3-3","date":"2017-10-23T00:49:00.000Z","updated":"2018-03-02T09:25:21.102Z","comments":true,"path":"2017/10/23/shryen2-3-3/","link":"","permalink":"/2017/10/23/shryen2-3-3/","excerpt":"实验2-3-3 求奇数分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/3 + 1/5 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:123 输出样例:1sum = 2.549541","text":"实验2-3-3 求奇数分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/3 + 1/5 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:123 输出样例:1sum = 2.549541 1234567891011#include&lt;stdio.h&gt; int main(void) &#123; int N,i; double s=0,item; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; item=1.0/(2*i-1); s=s+item; &#125; printf(\"sum = %.6lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-1 求1到100的和（10 分）","slug":"shryen2-3-1","date":"2017-10-22T11:15:07.000Z","updated":"2018-03-02T09:18:18.038Z","comments":true,"path":"2017/10/22/shryen2-3-1/","link":"","permalink":"/2017/10/22/shryen2-3-1/","excerpt":"实验2-3-1 求1到100的和（10 分）本题要求编写程序，计算表达式 1 + 2 + 3 + … + 100 的值。 输入格式：本题无输入。 输出格式：按照以下格式输出： 1sum = 累加和","text":"实验2-3-1 求1到100的和（10 分）本题要求编写程序，计算表达式 1 + 2 + 3 + … + 100 的值。 输入格式：本题无输入。 输出格式：按照以下格式输出： 1sum = 累加和 12345678910#include&lt;stdio.h&gt; int main(void) &#123; int i,s=0; for(i=1;i&lt;=100;i++) &#123; s=s+i; &#125; printf(\"sum = %d\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-3-2 求N分之一序列前N项和（15 分）","slug":"shryen2-3-2","date":"2017-10-22T11:15:07.000Z","updated":"2018-03-02T09:24:13.467Z","comments":true,"path":"2017/10/22/shryen2-3-2/","link":"","permalink":"/2017/10/22/shryen2-3-2/","excerpt":"实验2-3-2 求N分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/2 + 1/3 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:16 输出样例:1sum = 2.450000","text":"实验2-3-2 求N分之一序列前N项和（15 分）本题要求编写程序，计算序列 1 + 1/2 + 1/3 + … 的前N项之和。 输入格式:输入在一行中给出一个正整数N。 输出格式:在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。 输入样例:16 输出样例:1sum = 2.450000 123456789101112#include&lt;stdio.h&gt; int main(void) &#123; int N,i; double s=0,item; scanf(\"%d\",&amp;N); for(i=1;i&lt;=N;i++) &#123; item=1.0/i; s=s+item; &#125; printf(\"sum = %.6lf\",s); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-9 计算火车运行时间（15 分）","slug":"shryen2-2-9","date":"2017-10-22T01:38:07.000Z","updated":"2018-02-28T08:31:24.651Z","comments":true,"path":"2017/10/22/shryen2-2-9/","link":"","permalink":"/2017/10/22/shryen2-2-9/","excerpt":"实验2-2-9 计算火车运行时间（15 分）本题要求根据火车的出发时间和达到时间，编写程序计算整个旅途所用的时间。 输入格式：输入在一行中给出2个4位正整数，其间以空格分隔，分别表示火车的出发时间和到达时间。每个时间的格式为2位小时数（00-23）和2位分钟数（00-59），假设出发和到达在同一天内。 输出格式：在一行输出该旅途所用的时间，格式为“hh:mm”，其中hh为2位小时数、mm为2位分钟数。 输入样例：11201 1530 输出样例：103:29","text":"实验2-2-9 计算火车运行时间（15 分）本题要求根据火车的出发时间和达到时间，编写程序计算整个旅途所用的时间。 输入格式：输入在一行中给出2个4位正整数，其间以空格分隔，分别表示火车的出发时间和到达时间。每个时间的格式为2位小时数（00-23）和2位分钟数（00-59），假设出发和到达在同一天内。 输出格式：在一行输出该旅途所用的时间，格式为“hh:mm”，其中hh为2位小时数、mm为2位分钟数。 输入样例：11201 1530 输出样例：103:29 123456789101112#include&lt;stdio.h&gt; int main(void)&#123; int start,arrive,s,a,m,hh,mm; scanf(\"%d%d\",&amp;start,&amp;arrive); s=start/100*60+start%100; a=arrive/100*60+arrive%100; m=a-s; hh=m/60; mm=m%60; printf(\"%02d:%02d\",hh,mm); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-8 阶梯电价（15 分）","slug":"shryen2-2-8","date":"2017-10-22T01:31:07.000Z","updated":"2018-02-28T08:30:24.037Z","comments":true,"path":"2017/10/22/shryen2-2-8/","link":"","permalink":"/2017/10/22/shryen2-2-8/","excerpt":"实验2-2-8 阶梯电价（15 分）为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。 输入格式:输入在一行中给出某用户的月用电量（单位：千瓦时）。 输出格式:在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出”Invalid Value!”。 输入样例1:110 输出样例1:1cost = 5.30 输入样例2:1100 输出样例2:1cost = 55.50","text":"实验2-2-8 阶梯电价（15 分）为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。 输入格式:输入在一行中给出某用户的月用电量（单位：千瓦时）。 输出格式:在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出”Invalid Value!”。 输入样例1:110 输出样例1:1cost = 5.30 输入样例2:1100 输出样例2:1cost = 55.50 12345678910111213141516#include&lt;stdio.h&gt; int main(void) &#123; float x,c; scanf(\"%f\",&amp;x); if(x&gt;=0)&#123; if(x&lt;=50)&#123; c=0.53*x; &#125;else&#123; c=0.53*50+(x-50)*0.58; printf(\"cost = %.2f\",c); &#125; &#125;else&#123; printf(\"Invalid Value!\"); &#125; return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-7 整数四则运算（10 分）","slug":"shryen2-2-7","date":"2017-10-22T01:22:07.000Z","updated":"2018-03-27T09:55:46.615Z","comments":true,"path":"2017/10/22/shryen2-2-7/","link":"","permalink":"/2017/10/22/shryen2-2-7/","excerpt":"实验2-2-7 整数四则运算（10 分）本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。 输入格式:输入在一行中给出2个正整数A和B。 输出格式:在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。 输入样例:13 2 输出样例:12343 + 2 = 53 - 2 = 13 * 2 = 63 / 2 = 1","text":"实验2-2-7 整数四则运算（10 分）本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。 输入格式:输入在一行中给出2个正整数A和B。 输出格式:在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。 输入样例:13 2 输出样例:12343 + 2 = 53 - 2 = 13 * 2 = 63 / 2 = 1 1234567891011121314#include&lt;stdio.h&gt; main(void) &#123; int x,y,a,b,c,d; scanf(\"%d%d\",&amp;x,&amp;y); a=x+y; b=x-y; c=x*y; d=x/y; printf(\"%d + %d = %d\\n\",x,y,a); printf(\"%d - %d = %d\\n\",x,y,b); printf(\"%d * %d = %d\\n\",x,y,c); printf(\"%d / %d = %d\\n\",x,y,d); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-6 计算分段函数[3]（10 分）","slug":"shryen2-2-6","date":"2017-10-20T02:22:07.000Z","updated":"2018-02-28T08:28:19.307Z","comments":true,"path":"2017/10/20/shryen2-2-6/","link":"","permalink":"/2017/10/20/shryen2-2-6/","excerpt":"实验2-2-6 计算分段函数[3]（10 分）本题目要求计算下列分段函数f(x)的值： 输入格式：输入在一行中给出实数x。 输出格式：在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。 输入样例1：110 输出样例1：1f(10.0) = 0.1 输入样例2：1234 输出样例2：1f(234.0) = 234.0","text":"实验2-2-6 计算分段函数[3]（10 分）本题目要求计算下列分段函数f(x)的值： 输入格式：输入在一行中给出实数x。 输出格式：在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。 输入样例1：110 输出样例1：1f(10.0) = 0.1 输入样例2：1234 输出样例2：1f(234.0) = 234.0 123456789101112#include&lt;stdio.h&gt; int main(void) &#123; float x,y; scanf(\"%f\",&amp;x); if(x!=10)&#123; y=x; &#125;else&#123; y=1/x; &#125; printf(\"f(%.1f) = %.1f\",x,y); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-5 求整数均值（10 分）","slug":"shryen2-2-5","date":"2017-10-20T02:21:07.000Z","updated":"2018-02-28T08:27:26.500Z","comments":true,"path":"2017/10/20/shryen2-2-5/","link":"","permalink":"/2017/10/20/shryen2-2-5/","excerpt":"实验2-2-5 求整数均值（10 分）本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出4个整数，其间以空格分隔。 输出格式:在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。 输入样例:11 2 3 4 输出样例:1Sum = 10; Average = 2.5","text":"实验2-2-5 求整数均值（10 分）本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出4个整数，其间以空格分隔。 输出格式:在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。 输入样例:11 2 3 4 输出样例:1Sum = 10; Average = 2.5 1234567891011#include&lt;stdio.h&gt; int main(void) &#123; int a,b,c,d,S; float A; scanf(\"%d%d%d%d\",&amp;a,&amp;b,&amp;c,&amp;d); S=(a+b+c+d); A=(a+b+c+d)/4.0; printf(\"Sum = %d; Average = %.1f\",S,A); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-4 计算分段函数[2]（10 分）","slug":"shryen2-2-4","date":"2017-10-19T02:20:00.000Z","updated":"2018-02-28T08:25:49.396Z","comments":true,"path":"2017/10/19/shryen2-2-4/","link":"","permalink":"/2017/10/19/shryen2-2-4/","excerpt":"实验2-2-4 计算分段函数[2]（10 分）本题目要求计算下列分段函数f(x)的值： 注：可在头文件中包含math.h，并调用sqrt函数求平方根，调用pow函数求幂。 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。 输入样例1:110 输出样例1:1f(10.00) = 3.16 输入样例2:1-0.5 输出样例2:1f(-0.50) = -2.75","text":"实验2-2-4 计算分段函数[2]（10 分）本题目要求计算下列分段函数f(x)的值： 注：可在头文件中包含math.h，并调用sqrt函数求平方根，调用pow函数求幂。 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。 输入样例1:110 输出样例1:1f(10.00) = 3.16 输入样例2:1-0.5 输出样例2:1f(-0.50) = -2.75 12345678910111213#include&lt;stdio.h&gt;#include&lt;math.h&gt; int main(void)&#123; double x,re; scanf(\"%lf\",&amp;x); if(x &gt;= 0)&#123; re=pow( x, 0.5 ); &#125;else&#123; re=pow( x + 1,2 ) + 2 * x + 1.0 / x; &#125; printf(\"f(%.2f) = %.2f\",x,re);&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-3 计算存款利息（10 分）","slug":"shryen2-2-3","date":"2017-10-19T02:19:07.000Z","updated":"2018-02-28T08:26:15.500Z","comments":true,"path":"2017/10/19/shryen2-2-3/","link":"","permalink":"/2017/10/19/shryen2-2-3/","excerpt":"实验2-2-3 计算存款利息（10 分）本题目要求计算存款利息，计算公式为interest=money×(1+rate)year−money，其中interest为存款到期时的利息（税前），money是存款金额，year是存期，rate是年利率。 输入格式：输入在一行中顺序给出三个正实数money、year和rate，以空格分隔。 输出格式：在一行中按“interest = 利息”的格式输出，其中利息保留两位小数。 输入样例：11000 3 0.025 输出样例：1interest = 76.89","text":"实验2-2-3 计算存款利息（10 分）本题目要求计算存款利息，计算公式为interest=money×(1+rate)year−money，其中interest为存款到期时的利息（税前），money是存款金额，year是存期，rate是年利率。 输入格式：输入在一行中顺序给出三个正实数money、year和rate，以空格分隔。 输出格式：在一行中按“interest = 利息”的格式输出，其中利息保留两位小数。 输入样例：11000 3 0.025 输出样例：1interest = 76.89 12345678910#include&lt;stdio.h&gt;#include&lt;math.h&gt;int main(void)&#123; float interest,year,rate,money; scanf(\"%f %f %f\",&amp;money,&amp;year,&amp;rate); interest = money * pow(1 + rate,year) - money; printf(\"interest = %.2f\",interest); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-2 计算摄氏温度（10 分）","slug":"shryen2-2-2","date":"2017-10-19T02:14:07.000Z","updated":"2018-03-27T09:54:23.796Z","comments":true,"path":"2017/10/19/shryen2-2-2/","link":"","permalink":"/2017/10/19/shryen2-2-2/","excerpt":"实验2-2-2 计算摄氏温度（10 分）给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出一个华氏温度。 输出格式:在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 输入样例:1150 输出样例:1Celsius = 65","text":"实验2-2-2 计算摄氏温度（10 分）给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。 输入格式:输入在一行中给出一个华氏温度。 输出格式:在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。 输入样例:1150 输出样例:1Celsius = 65 123456789#include&lt;stdio.h&gt; int main(void) &#123; int celsius, fahr; scanf(\"%d\",&amp;fahr); celsius=5*(fahr-32)/9; printf(\"Celsius = %d\\n\", celsius); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-2-1 计算分段函数[1]（10 分）","slug":"shryen2-2-1","date":"2017-10-19T02:00:00.000Z","updated":"2018-03-27T09:54:12.795Z","comments":true,"path":"2017/10/19/shryen2-2-1/","link":"","permalink":"/2017/10/19/shryen2-2-1/","excerpt":"实验2-2-1 计算分段函数[1]（10 分）本题目要求计算下列分段函数f(x)的值： 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。 输入样例1:110 输出样例1:1f(10.0) = 0.1 输入样例2:10 输出样例2:1f(0.0) = 0.0","text":"实验2-2-1 计算分段函数[1]（10 分）本题目要求计算下列分段函数f(x)的值： 输入格式:输入在一行中给出实数x。 输出格式:在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。 输入样例1:110 输出样例1:1f(10.0) = 0.1 输入样例2:10 输出样例2:1f(0.0) = 0.0 12345678910111213#include&lt;stdio.h&gt; int main(void) &#123; float x,y; scanf(\"%f\",&amp;x); if(x != 0)&#123; y=1 / x; &#125;else&#123; y=0; &#125; printf(\"f(%.1f) = %.1f\",x,y); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-7 整数152的各位数字（10 分）","slug":"shryen2-1-7","date":"2017-10-19T01:15:00.000Z","updated":"2018-02-27T10:20:53.576Z","comments":true,"path":"2017/10/19/shryen2-1-7/","link":"","permalink":"/2017/10/19/shryen2-1-7/","excerpt":"实验2-1-7 整数152的各位数字（10 分）本题要求编写程序，输出整数152的个位数字、十位数字和百位数字的值。 输入格式：本题无输入。 输出格式：按照以下格式输出： 1152 = 个位数字 + 十位数字*10 + 百位数字*100","text":"实验2-1-7 整数152的各位数字（10 分）本题要求编写程序，输出整数152的个位数字、十位数字和百位数字的值。 输入格式：本题无输入。 输出格式：按照以下格式输出： 1152 = 个位数字 + 十位数字*10 + 百位数字*100 12345678910#include&lt;stdio.h&gt; int main(void) &#123; int c=152; int gewei,shiwei,baiwei; gewei=c%10; shiwei=c/10%10; baiwei=c/100%10; printf(\"152 = %d + %d*10 + %d*100\",gewei,shiwei,baiwei); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-6 计算华氏温度（5 分）","slug":"shryen2-1-6","date":"2017-10-19T01:14:00.000Z","updated":"2018-02-27T10:19:02.676Z","comments":true,"path":"2017/10/19/shryen2-1-6/","link":"","permalink":"/2017/10/19/shryen2-1-6/","excerpt":"实验2-1-6 计算华氏温度（5 分）本题要求编写程序，计算摄氏温度26°C 对应的华氏温度。计算公式：F=9×C/5+32，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1celsius = 26, fahr = 对应的华氏温度整数值","text":"实验2-1-6 计算华氏温度（5 分）本题要求编写程序，计算摄氏温度26°C 对应的华氏温度。计算公式：F=9×C/5+32，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1celsius = 26, fahr = 对应的华氏温度整数值 12345678#include&lt;stdio.h&gt; int main(void) &#123; int celsius, fahr; celsius=26; fahr=9*celsius/5+32; printf(\"celsius = 26, fahr = %d\\n\", fahr); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-5 将x的平方赋值给y（5 分）","slug":"shryen2-1-5","date":"2017-10-19T01:13:00.000Z","updated":"2018-02-27T10:17:12.157Z","comments":true,"path":"2017/10/19/shryen2-1-5/","link":"","permalink":"/2017/10/19/shryen2-1-5/","excerpt":"实验2-1-5 将x的平方赋值给y（5 分）假设x的值为3，计算x的平方并赋值给y，分别以“y = x ∗ x”和“x ∗ x = y”的形式输出x和y的值。 输入格式：本题无输入 输出格式：按照下列格式输出代入x=3的结果： 12y = x * xx * x = y","text":"实验2-1-5 将x的平方赋值给y（5 分）假设x的值为3，计算x的平方并赋值给y，分别以“y = x ∗ x”和“x ∗ x = y”的形式输出x和y的值。 输入格式：本题无输入 输出格式：按照下列格式输出代入x=3的结果： 12y = x * xx * x = y 12345678#include&lt;stdio.h&gt; int main(void) &#123; int x,y; x=3; y=x*x; printf(\"%d = %d * %d\\n\",y,x,x); printf(\"%d * %d = %d\\n\",x,x,y); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-4 计算平均分（5 分）","slug":"shryen2-1-4","date":"2017-10-19T01:12:00.000Z","updated":"2018-02-27T10:15:17.148Z","comments":true,"path":"2017/10/19/shryen2-1-4/","link":"","permalink":"/2017/10/19/shryen2-1-4/","excerpt":"实验2-1-4 计算平均分（5 分）已知某位学生的数学、英语和计算机课程的成绩分别是87分、72分和93分，求该生3门课程的平均成绩（结果按整型输出）。 输入格式：本题无输入 12 输出格式：按照下列格式输出结果： 1math = 87, eng = 72, comp = 93, average = 计算所得的平均成绩","text":"实验2-1-4 计算平均分（5 分）已知某位学生的数学、英语和计算机课程的成绩分别是87分、72分和93分，求该生3门课程的平均成绩（结果按整型输出）。 输入格式：本题无输入 12 输出格式：按照下列格式输出结果： 1math = 87, eng = 72, comp = 93, average = 计算所得的平均成绩 123456789#include&lt;stdio.h&gt; int main(void) &#123; int math,eng,comp,average; math=87; eng=72; comp=93; average=(math+eng+comp)/3; printf(\"math = 87, eng = 72, comp = 93, average = %d\\n\",average); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-3 计算物体自由下落的距离（5 分）","slug":"shryen2-1-3","date":"2017-10-19T01:11:00.000Z","updated":"2018-02-27T10:13:34.831Z","comments":true,"path":"2017/10/19/shryen2-1-3/","link":"","permalink":"/2017/10/19/shryen2-1-3/","excerpt":"实验2-1-3 计算物体自由下落的距离（5 分）一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒^2。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1height = 垂直距离值 结果保留2位小数。","text":"实验2-1-3 计算物体自由下落的距离（5 分）一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒^2。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1height = 垂直距离值 结果保留2位小数。 12345678#include&lt;stdio.h&gt;int main(void)&#123; float height; height = 5 * 3 * 3 ; printf(\"height = %.2f\", height); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-2 温度转换（5 分）","slug":"shryen2-1-2","date":"2017-10-19T01:10:00.000Z","updated":"2018-02-27T10:09:26.990Z","comments":true,"path":"2017/10/19/shryen2-1-2/","link":"","permalink":"/2017/10/19/shryen2-1-2/","excerpt":"实验2-1-2 温度转换（5 分）本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：C=5×(F−32)/9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1fahr = 150, celsius = 计算所得摄氏温度的整数值","text":"实验2-1-2 温度转换（5 分）本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：C=5×(F−32)/9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1fahr = 150, celsius = 计算所得摄氏温度的整数值 123456789#include&lt;stdio.h&gt; int main(void) &#123; int celsius, fahr; fahr=150; celsius=5 * ( fahr - 32 ) / 9; printf(\"fahr = 150, celsius = %d\\n\", celsius); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验2-1-1 计算摄氏温度（5 分）","slug":"shryen2-1-1","date":"2017-10-19T01:09:00.000Z","updated":"2018-02-27T10:02:09.194Z","comments":true,"path":"2017/10/19/shryen2-1-1/","link":"","permalink":"/2017/10/19/shryen2-1-1/","excerpt":"实验2-1-1 计算摄氏温度（5 分）本题要求编写程序，计算华氏温度100°F对应的摄氏温度。计算公式：C=5×(F−32)/9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1fahr = 100, celsius = 计算所得摄氏温度的整数值","text":"实验2-1-1 计算摄氏温度（5 分）本题要求编写程序，计算华氏温度100°F对应的摄氏温度。计算公式：C=5×(F−32)/9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。 输入格式:本题目没有输入。 输出格式:按照下列格式输出 1fahr = 100, celsius = 计算所得摄氏温度的整数值 123456789#include&lt;stdio.h&gt; int main(void) &#123; int celsius, fahr; fahr=100; celsius=5*(fahr-32)/9; printf(\"fahr = 100, celsius = %d\\n\", celsius); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-8 输出倒三角图案（5 分）","slug":"shryen1-8","date":"2017-10-19T01:08:00.000Z","updated":"2018-02-09T09:43:20.816Z","comments":true,"path":"2017/10/19/shryen1-8/","link":"","permalink":"/2017/10/19/shryen1-8/","excerpt":"实验1-8 输出倒三角图案（5 分）本题要求编写程序，输出指定的由“*”组成的倒三角图案。 输入格式:本题目没有输入。 输出格式:按照下列格式输出由“*”组成的倒三角图案。 1234* * * * * * * * * *","text":"实验1-8 输出倒三角图案（5 分）本题要求编写程序，输出指定的由“*”组成的倒三角图案。 输入格式:本题目没有输入。 输出格式:按照下列格式输出由“*”组成的倒三角图案。 1234* * * * * * * * * * 123456789#include&lt;stdio.h&gt; int main(void) &#123; printf(\"* * * *\\n\"); printf(\" * * *\\n\"); printf(\" * *\\n\"); printf(\" *\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-7 What is a computer?（5 分）","slug":"shryen1-7","date":"2017-10-19T01:07:00.000Z","updated":"2018-02-09T09:43:12.793Z","comments":true,"path":"2017/10/19/shryen1-7/","link":"","permalink":"/2017/10/19/shryen1-7/","excerpt":"实验1-7 What is a computer?（5 分）本题要求编写程序，输出一个短句“What is a computer?”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“What is a computer?”。","text":"实验1-7 What is a computer?（5 分）本题要求编写程序，输出一个短句“What is a computer?”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“What is a computer?”。 123456#include&lt;stdio.h&gt; int main(void) &#123; printf(\"What is a computer?\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-6 输出带框文字（5 分）","slug":"shryen1-6","date":"2017-10-19T01:06:00.000Z","updated":"2018-02-09T09:43:06.212Z","comments":true,"path":"2017/10/19/shryen1-6/","link":"","permalink":"/2017/10/19/shryen1-6/","excerpt":"实验1-6 输出带框文字（5 分）本题要求编写程序，输出指定的带框文字。 输入格式：本题无输入 输出格式：按照下列格式输出带框文字。 123************ Welcome************","text":"实验1-6 输出带框文字（5 分）本题要求编写程序，输出指定的带框文字。 输入格式：本题无输入 输出格式：按照下列格式输出带框文字。 123************ Welcome************ 12345678#include&lt;stdio.h&gt; int main(void) &#123; printf(\"************\\n\"); printf(\" Welcome\\n\"); printf(\"************\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-4 输出三角形（5 分）","slug":"shryen1-5","date":"2017-10-19T01:05:00.000Z","updated":"2018-02-09T09:42:59.111Z","comments":true,"path":"2017/10/19/shryen1-5/","link":"","permalink":"/2017/10/19/shryen1-5/","excerpt":"实验1-5 输出菱形图案（5 分）本题要求编写程序，输出指定的由“A”组成的菱形图案。 输入格式：本题无输入 输出格式：按照下列格式输出由“A”组成的菱形图案。 123 AA A A","text":"实验1-5 输出菱形图案（5 分）本题要求编写程序，输出指定的由“A”组成的菱形图案。 输入格式：本题无输入 输出格式：按照下列格式输出由“A”组成的菱形图案。 123 AA A A 12345678#include&lt;stdio.h&gt; int main(void) &#123; printf(\" A\\n\"); printf(\"A A\\n\"); printf(\" A\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-4 输出三角形（5 分）","slug":"shryen1-4","date":"2017-10-19T01:04:00.000Z","updated":"2018-02-09T09:42:50.976Z","comments":true,"path":"2017/10/19/shryen1-4/","link":"","permalink":"/2017/10/19/shryen1-4/","excerpt":"实验1-4 输出三角形（5 分）本题要求编写程序，输出指定的由“*”组成的三角图案。 输入格式：本题无输入 输出格式：按照下列格式输出由“*”组成的三角图案。 1234**********","text":"实验1-4 输出三角形（5 分）本题要求编写程序，输出指定的由“*”组成的三角图案。 输入格式：本题无输入 输出格式：按照下列格式输出由“*”组成的三角图案。 1234********** 123456789#include&lt;stdio.h&gt; int main(void) &#123; printf(\"****\\n\"); printf(\"***\\n\"); printf(\"**\\n\"); printf(\"*\\n\"); return 0; &#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-3 Programming in C is fun!（5 分）","slug":"shryen1-3","date":"2017-10-19T01:03:00.000Z","updated":"2018-02-09T09:42:41.691Z","comments":true,"path":"2017/10/19/shryen1-3/","link":"","permalink":"/2017/10/19/shryen1-3/","excerpt":"实验1-3 Programming in C is fun!（5 分）本题要求编写程序，输出一个短句“Programming in C is fun!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Programming in C is fun!”。","text":"实验1-3 Programming in C is fun!（5 分）本题要求编写程序，输出一个短句“Programming in C is fun!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Programming in C is fun!”。 123456#include&lt;stdio.h&gt;int main(void)&#123; printf(\"Programming in C is fun!\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-2 Welcome to You!（5 分）","slug":"shryen1-2","date":"2017-10-19T01:02:00.000Z","updated":"2018-02-09T09:42:32.272Z","comments":true,"path":"2017/10/19/shryen1-2/","link":"","permalink":"/2017/10/19/shryen1-2/","excerpt":"实验1-2 Welcome to You!（5 分）本题要求编写程序，输出一个短句“Welcome to You!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Welcome to You!”。","text":"实验1-2 Welcome to You!（5 分）本题要求编写程序，输出一个短句“Welcome to You!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Welcome to You!”。 123456#include&lt;stdio.h&gt;int main(void)&#123; printf(\"Welcome to You!\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"实验1-1 Hello World!（5 分）","slug":"shryen1-1","date":"2017-10-19T01:01:00.000Z","updated":"2018-02-09T09:42:12.627Z","comments":true,"path":"2017/10/19/shryen1-1/","link":"","permalink":"/2017/10/19/shryen1-1/","excerpt":"实验1-1 Hello World!（5 分）本题要求编写程序，输出一个短句“Hello World!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Hello World!”。","text":"实验1-1 Hello World!（5 分）本题要求编写程序，输出一个短句“Hello World!”。 输入格式:本题目没有输入。 输出格式:在一行中输出短句“Hello World!”。 123456#include&lt;stdio.h&gt;int main(void)&#123; printf(\"Hello World!\\n\"); return 0;&#125;","categories":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/categories/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}],"tags":[{"name":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","slug":"浙大版《C语言程序设计实验与习题指导（第3版）》题目集","permalink":"/tags/浙大版《C语言程序设计实验与习题指导（第3版）》题目集/"}]},{"title":"面試到的SQL題","slug":"meinshr1","date":"2017-04-23T09:47:11.000Z","updated":"2017-04-23T08:32:08.000Z","comments":true,"path":"2017/04/23/meinshr1/","link":"","permalink":"/2017/04/23/meinshr1/","excerpt":"怎么把這樣一個表","text":"怎么把這樣一個表 year month amount 1991 1 1.1 1991 2 1.2 1991 3 1.3 1991 4 1.4 1992 1 2.1 1992 2 2.2 1992 3 2.3 1992 4 2.4 查询這樣一個結果 year m1 m2 m3 m4 1991 1.1 1.2 1.3 1.4 1992 2.1 2.2 2.3 2.4 解答一123456select year,sum(case month when '1' then amount end) m1,sum(case month when “2” then amount end) m2,sum(case month when “3” then amount end) m3,sum(case month when “4” then amount end) m4 from table group by year order by year 解答二123select year,group_concat(amount) from table group by year order by year 解答三1234select p1.year,p1.month,p1.amount,p2.amount,p3.amount,p4.amountfrom protest p1 INNER JOIN protest p2 ON p1.month = p2.month +1 INNER JOIN protest p3 ON p2.month = p3.month+1 INNER JOIN protest p4 ON p3.month = p4.month + 1 WHERE p1.year = p2.yearAND p2.year = p3.year AND p3.year = p4.year;","categories":[{"name":"面試","slug":"面試","permalink":"/categories/面試/"}],"tags":[]},{"title":"Web前端程序员简历模板","slug":"Web\\307\\260\\266\\313\\263\\314\\320\\362\\324\\261\\274\\362\\300\\372\\304\\243\\260\\345","date":"2017-03-24T11:40:43.000Z","updated":"2017-10-23T01:21:52.000Z","comments":true,"path":"2017/03/24/Web\\307\\260\\266\\313\\263\\314\\320\\362\\324\\261\\274\\362\\300\\372\\304\\243\\260\\345/","link":"","permalink":"/2017/03/24/Web\\307\\260\\266\\313\\263\\314\\320\\362\\324\\261\\274\\362\\300\\372\\304\\243\\260\\345/","excerpt":"Web前端程序员简历模板本简历模板由国内首家互联网人才拍卖网站「 JobDeer.com 」提供。 （括号里的是我们的顾问编写的说明，建议在简历书写完成后统一删除）","text":"Web前端程序员简历模板本简历模板由国内首家互联网人才拍卖网站「 JobDeer.com 」提供。 （括号里的是我们的顾问编写的说明，建议在简历书写完成后统一删除） 先讲讲怎样才是一份好的技术简历首先，一份好的简历不光说明事实，更通过FAB模式来增强其说服力。 Feature：是什么 Advantage：比别人好在哪些地方 Benefit：如果雇佣你，招聘方会得到什么好处 其次，写简历和写议论文不同，过分的论证会显得自夸，反而容易引起反感，所以要点到为止。这里的技巧是，提供论据，把论点留给阅读简历的人自己去得出。放论据要具体，最基本的是要数字化，好的论据要让人印象深刻。 举个例子，下边内容是虚构的： 2006年，我参与了手机XX网发布系统WAPCMS的开发（这部分是大家都会写的）。作为核心程序员，我不但完成了网站界面、调度队列的开发工作，更提出了高效的组件级缓存系统，通过碎片化缓冲有效的提升了系统的渲染效率。（这部分是很多同学忘掉的，要写出你在这个项目中具体负责的部分，以及你贡献出来的价值。）在该系统上线后，Web前端性能从10QPS提升到200QPS，服务器由10台减少到3台（通过量化的数字来增强可信度）。2008年我升任WAPCMS项目负责人，带领一个3人小组支持着每天超过2亿的PV（这就是Benefit。你能带给前雇主的价值，也就是你能带给新雇主的价值。）。 有同学问，如果我在项目里边没有那么显赫的成绩可以说怎么办？讲不出成绩时，就讲你的成长。因为学习能力也是每家公司都看中的东西。你可以写你在这个项目里边遇到了一个什么样的问题，别人怎么解决的，你怎么解决的，你的方案好在什么地方，最终这个方案的效果如何。 具体、量化、有说服力，是技术简历特别需要注重的地方。 （以上内容在写完简历后，对每一段进行评估，完成后再删除） 联系方式（HR会打印你的简历，用于在面试的时候联系，所以联系方式放到最上边会比较方便） 手机：135** （如果是外地手机，可注明。如经常关机，要写上最优联系时间） Email：goodman@gmail.com （虽然我觉得QQ邮箱无所谓，不过有些技术人员比较反感，建议用G） QQ/微信号：6*（提供一个通过网络可以联系到你的方式） 个人信息 胶布帝/男/1990 本科/萌鹿大学计算机系 工作年限：3年 微博：@JobDeer （如果没有技术相关内容，也可以不放） 技术博客：http://blog.github.io ( 使用GitHub Host的Big较高 ) Github: http://github.com/geekcompany ( 有原创repo的Github帐号会极大的提升你的个人品牌 ) 期望职位：Web前端高级程序员，应用架构师 期望薪资：税前月薪15k~20k，特别喜欢的公司可例外 期望城市：北京 工作经历（工作经历按逆序排列，最新的在最前边，按公司做一级分组，公司内按二级分组） ABC公司 （ 2012年9月 ~ 2014年9月 ）DEF项目我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。 GHI项目我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。 其他项目（每个公司写2~3个核心项目就好了，如果你有非常大量的项目，那么按分类进行合并，每一类选一个典型写出来。其他的一笔带过即可。） JKL公司 （ 2010年3月 ~ 2012年8月 ）MNO项目我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。 PQR项目我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。 其他项目（每个公司写2~3个核心项目就好了，如果你有非常大量的项目，那么按分类进行合并，每一类选一个典型写出来。其他的一笔带过即可。） 开源项目和作品（这一段用于放置工作以外的、可证明你的能力的材料） 开源项目（对于程序员来讲，没有什么比Show me the code能有说服力了） STU : 项目的简要说明，Star和Fork数多的可以注明 WXYZ : 项目的简要说明，Star和Fork数多的可以注明 技术文章（挑选你写作或翻译的技术文章，好的文章可以从侧面证实你的表达和沟通能力，也帮助招聘方更了解你） 一个产品经理眼中的云计算：前生今世和未来 来自HeroKu的HTTP API 设计指南(翻译文章) （ 好的翻译文章可以侧证你对英文技术文档的阅读能力） 演讲和讲义（放置你代表公司在一些技术会议上做过的演讲，以及你在公司分享时制作的讲义） 2014架构师大会演讲：如何通过Docker优化内部开发 9月公司内部分享：云计算的前生今世 技能清单（我一般主张将技能清单写入到工作经历里边去。不过很难完整，所以有这么一段也不错） 以下均为我熟练使用的技能 Web开发：PHP/Hack/Node Web框架：ThinkPHP/Yaf/Yii/Lavaral/LazyPHP 前端框架：Bootstrap/AngularJS/EmberJS/HTML5/Cocos2dJS/ionic 前端工具：Bower/Gulp/SaSS/LeSS/PhoneGap 数据库相关：MySQL/PgSQL/PDO/SQLite 版本管理、文档和自动化部署工具：Svn/Git/PHPDoc/Phing/Composer 单元测试：PHPUnit/SimpleTest/Qunit 云和开放平台：SAE/BAE/AWS/微博开放平台/微信应用开发 参考技能关键字本技能关键字列表是从最近招聘Web前端的数百份JD中统计出来的，括号中是出现的词频。如果你的简历要投递给有机器（简历分选系统）和不如机器（不懂技术的HR）筛选简历环节的地方，请一定从下边高频关键词中选择5～10个适合你自己的。 web(889) javascript(596) css(555) html(430) jquery(323) html5(312) js(311) ajax(196) css3(176) w3c(168) div(156) php(134) xhtml(106) java(92) ui(78) photoshop(75) dom(63) xml(56) json(54) yui(51) flash(45) bootstrap(43) python(43) http(38) dreamweaver(38) ext(33) linux(33) seo(32) prototype(29) chrome(28) pc(28) nodejs(28) firefox(26) ps(25) angularjs(25) fireworks(24) extjs(23) safari(22) www(22) mobile(22) jsp(22) mvc(22) backbone(21) node(21) ruby(20) github(19) ios(18) ie6(18) android(18) asp(18) sass(17) wap(16) mootools(16) ie(16) mysql(15) flex(14) firebug(13) bom(13) webapp(12) less(12) web2(11) angular(10) git(10) dw(10) as(10) mac(10) psd(8) o2o(7) dojo(7) actionscript3(6) grunt(5) ue(5) zepto(5) actionscript(5) ie8(5) coffeescript(5) django(4) 致谢感谢您花时间阅读我的简历，期待能有机会和您共事。","categories":[{"name":"簡歷","slug":"簡歷","permalink":"/categories/簡歷/"}],"tags":[{"name":"簡歷","slug":"簡歷","permalink":"/tags/簡歷/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-03-08T04:08:04.000Z","updated":"2017-03-08T04:08:04.000Z","comments":true,"path":"2017/03/08/hello-world/","link":"","permalink":"/2017/03/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"markdown","slug":"markdown","date":"2016-12-21T13:47:11.000Z","updated":"2017-03-08T04:05:58.000Z","comments":true,"path":"2016/12/21/markdown/","link":"","permalink":"/2016/12/21/markdown/","excerpt":"MarkdownA markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF).","text":"MarkdownA markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF). Block Elements Paragraphs and Line Breaks Headers Blockquotes Lists Code Blocks Horizontal Rules Table Span Elements Links Emphasis Code Images Strikethrough Miscellaneous Automatic Links Backslash Escapes Inline HTML Block ElementsParagraphs and Line BreaksParagraphsHTML Tag: &lt;p&gt; One or more blank lines. (A blank line is a line containing nothing but spaces or tabs is considered blank.) Code: This will be inline. This is second paragraph. Preview: This will beinline. This is second paragraph. Line BreaksHTML Tag: &lt;br /&gt; End a line with two or more spaces. Code: This will be not inline. Preview: This will be notinline. HeadersMarkdown supports two styles of headers, Setext and atx. SetextHTML Tags: &lt;h1&gt;, &lt;h2&gt; “Underlined” using equal signs (=) as &lt;h1&gt; and dashes (-) as &lt;h2&gt; in any number. Code: This is an H1 ============= This is an H2 ------------- Preview: This is an H1This is an H2 atxHTML Tags: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt; Uses 1-6 hash characters (#) at the start of the line, corresponding to &lt;h1&gt; - &lt;h6&gt;. Code: # This is an H1 ## This is an H2 ###### This is an H6 Preview: This is an H1This is an H2This is an H6 Optionally, you may “close” atx-style headers. The closing hashes don’t need to match the number of hashes used to open the header. Code: # This is an H1 # ## This is an H2 ## ### This is an H3 ###### Preview: This is an H1This is an H2This is an H3 BlockquotesHTML Tag: &lt;blockquote&gt; Markdown uses email-style &gt; characters for blockquoting. It looks best if you hard wrap the text and put a &gt; before every line. Code: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, &gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. &gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse &gt; id sem consectetuer libero luctus adipiscing. Preview: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Markdown allows you to be lazy and only put the &gt; before the first line of a hard-wrapped paragraph. Code: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Preview: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &gt;. Code: &gt; This is the first level of quoting. &gt; &gt; &gt; This is nested blockquote. &gt; &gt; Back to the first level. Preview: This is the first level of quoting. This is nested blockquote. Back to the first level. Blockquotes can contain other Markdown elements, including headers, lists, and code blocks. Code: &gt; ## This is a header. &gt; &gt; 1. This is the first list item. &gt; 2. This is the second list item. &gt; &gt; Here&apos;s some example code: &gt; &gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); Preview: This is a header. This is the first list item. This is the second list item. Here’s some example code: return shell_exec(&quot;echo $input | $markdown_script&quot;); ListsMarkdown supports ordered (numbered) and unordered (bulleted) lists. UnorderedHTML Tag: &lt;ul&gt; Unordered lists use asterisks (*), pluses (+), and hyphens (-). Code: * Red * Green * Blue Preview: Red Green Blue is equivalent to: Code: + Red + Green + Blue and: Code: - Red - Green - Blue OrderedHTML Tag: &lt;ol&gt; Ordered lists use numbers followed by periods: Code: 1. Bird 2. McHale 3. Parish Preview: Bird McHale Parish It’s possible to trigger an ordered list by accident, by writing something like this: Code: 1986. What a great season. Preview: What a great season. You can backslash-escape (\\) the period: Code: 1986\\. What a great season. Preview: 1986. What a great season. IndentedBlockquoteTo put a blockquote within a list item, the blockquote’s &gt; delimiters need to be indented: Code: * A list item with a blockquote: &gt; This is a blockquote &gt; inside a list item. Preview: A list item with a blockquote: This is a blockquoteinside a list item. Code BlockTo put a code block within a list item, the code block needs to be indented twice — 8 spaces or two tabs: Code: * A list item with a code block: &lt;code goes here&gt; Preview: A list item with a code block: &lt;code goes here&gt; Nested ListCode: * A * A1 * A2 * B * C Preview: A A1 A2 B C Code BlocksHTML Tag: &lt;pre&gt; Indent every line of the block by at least 4 spaces or 1 tab. Code: This is a normal paragraph: This is a code block. Preview: This is a normal paragraph: This is a code block. A code block continues until it reaches a line that is not indented (or the end of the article). Within a code block, ampersands (&amp;) and angle brackets (&lt; and &gt;) are automatically converted into HTML entities. Code: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Preview: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Following sections Fenced Code Blocks and Syntax Highlighting are extensions, you can use the other way to write the code block. Fenced Code BlocksJust wrap your code in ``` ```` (as shown below) and you won't need to indent it by four spaces.1234Code: Here&apos;s an example: function test() { console.log(&quot;notice the blank line before this function?&quot;); } 123Preview:***Here&apos;s an example: function test() { console.log(“notice the blank line before this function?”);}12345678910***#### Syntax HighlightingIn your fenced block, add an optional language identifier and we&apos;ll run it through syntax highlighting ([Support Languages](https://github.com/github/linguist/blob/master/lib/linguist/languages.yml)).Code: ```ruby require &apos;redcarpet&apos; markdown = Redcarpet.new(&quot;Hello World!&quot;) puts markdown.to_html Preview: 123require 'redcarpet'markdown = Redcarpet.new(\"Hello World!\")puts markdown.to_html Horizontal RulesHTML Tag: &lt;hr /&gt;Places three or more hyphens (-), asterisks (*), or underscores (_) on a line by themselves. You may use spaces between the hyphens or asterisks. Code: * * * *** ***** - - - --------------------------------------- ___ Preview: - - - TableHTML Tag: &lt;table&gt; It’s an extension. Separates column by pipe (|) and header by dashes (-), and uses colon (:) for alignment. The outer pipes (|) and alignment are optional. There are 3 delimiters each cell at least for separating header. Code:12345678910111213| Left | Center | Right ||:-----|:------:|------:||aaa |bbb |ccc ||ddd |eee |fff | A | B ---|---123|456A |B --|--12|45 Preview: Left Center Right aaa bbb ccc ddd eee fff A B 123 456 A B 12 45 Span ElementsLinksHTML Tag: &lt;a&gt; Markdown supports two style of links: inline and reference. InlineInline link format like this: [Link Text](URL &quot;Title&quot;) Title is optional. Code: This is [an example](http://example.com/ &quot;Title&quot;) inline link. [This link](http://example.net/) has no title attribute. Preview: This is an example inline link. This link has no title attribute. If you’re referring to a local resource on the same server, you can use relative paths: Code: See my [About](/about/) page for details. Preview: See my About page for details. ReferenceYou could predefine link references. Format like this: [id]: URL &quot;Title&quot; Title is also optional. And the you refer the link, format like this: [Link Text][id] Code: [id]: http://example.com/ &quot;Optional Title Here&quot; This is [an example][id] reference-style link. Preview: This is an example reference-style link. That is: Square brackets containing the link identifier (not case sensitive, optionally indented from the left margin using up to three spaces); followed by a colon; followed by one or more spaces (or tabs); followed by the URL for the link; The link URL may, optionally, be surrounded by angle brackets. optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses. The following three link definitions are equivalent: Code: [foo]: http://example.com/ &quot;Optional Title Here&quot; [foo]: http://example.com/ &apos;Optional Title Here&apos; [foo]: http://example.com/ (Optional Title Here) [foo]: &lt;http://example.com/&gt; &quot;Optional Title Here&quot; Uses an empty set of square brackets, the link text itself is used as the name. Code: [Google]: http://google.com/ [Google][] Preview: Google EmphasisHTML Tags: &lt;em&gt;, &lt;strong&gt; Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. One delimiter will be &lt;em&gt;; *double delimiters will be &lt;strong&gt;. Code: *single asterisks* _single underscores_ **double asterisks** __double underscores__ Preview: single asterisks single underscores double asterisks double underscores But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore. You can backslash escape it: Code: \\*this text is surrounded by literal asterisks\\* Preview: *this text is surrounded by literal asterisks* CodeHTML Tag: &lt;code&gt; Wraps it with backtick quotes (`). Code: Use the `printf()` function. Preview: Use the printf() function. To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters: Code: ``There is a literal backtick (`) here.`` Preview: There is a literal backtick (`) here. The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span: Code: A single backtick in a code span: `` ` `` A backtick-delimited string in a code span: `` `foo` `` Preview: A single backtick in a code span: ` A backtick-delimited string in a code span: `foo` ImagesHTML Tag: &lt;img /&gt; Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference. InlineInline image syntax looks like this: ![Alt text](URL &quot;Title&quot;) Title is optional. Code: ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg &quot;Optional title&quot;) Preview: That is: An exclamation mark: !; followed by a set of square brackets, containing the alt attribute text for the image; followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes. ReferenceReference-style image syntax looks like this: ![Alt text][id] Code: [img id]: url/to/image &quot;Optional title attribute&quot; ![Alt text][img id] Preview: StrikethroughHTML Tag: &lt;del&gt; It’s an extension. GFM adds syntax to strikethrough text. Code:1~~Mistaken text.~~ Preview: Mistaken text. MiscellaneousAutomatic LinksMarkdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. Code: &lt;http://example.com/&gt; &lt;address@example.com&gt; Preview: http://example.com/ &#x61;&#100;&#100;&#114;&#x65;&#x73;&#x73;&#64;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#46;&#99;&#x6f;&#109; GFM will autolink standard URLs. Code:1https://github.com/emn178/markdown Preview: https://github.com/emn178/markdown Backslash EscapesMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. Code: \\*literal asterisks\\* Preview: *literal asterisks* Markdown provides backslash escapes for the following characters: Code: \\ backslash ` backtick * asterisk _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark Inline HTMLFor any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags. Code: This is a regular paragraph. &lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; This is another regular paragraph. Preview: This is a regular paragraph. Foo This is another regular paragraph. Note that Markdown formatting syntax is not processed within block-level HTML tags. Unlike block-level HTML tags, Markdown syntax is processed within span-level tags. Code: &lt;span&gt;**Work**&lt;/span&gt; &lt;div&gt; **No Work** &lt;/div&gt; Preview: Work No Work","categories":[{"name":"markdown","slug":"markdown","permalink":"/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"/tags/markdown/"}]},{"title":"深圳縱覽","slug":"shenzhenshrlanzhungkejigufenyousiengungsr","date":"2016-12-21T13:47:11.000Z","updated":"2017-03-05T06:49:56.000Z","comments":true,"path":"2016/12/21/shenzhenshrlanzhungkejigufenyousiengungsr/","link":"","permalink":"/2016/12/21/shenzhenshrlanzhungkejigufenyousiengungsr/","excerpt":"","text":"單例模式和工廠模式 springmvc的理解 servlet的生命週期和方法有哪些 構造函數和重載 jquery異步 轉發請求forward和Redirect JSP的運行機制 JSP的內置對象及其用途 spring的理解，依賴注入控制反轉 如何用jquery來進行異步表單提交","categories":[{"name":"面試","slug":"面試","permalink":"/categories/面試/"}],"tags":[]},{"title":"風雷水火土","slug":"fengleishueihuotu","date":"2016-12-21T13:47:11.000Z","updated":"2017-03-08T04:09:38.000Z","comments":true,"path":"2016/12/21/fengleishueihuotu/","link":"","permalink":"/2016/12/21/fengleishueihuotu/","excerpt":"转自 http://www.kanshu.com/files/article/html/24390/792399.htmlhttp://blog.sina.com.cn/s/blog_6246a9190101ukyg.html 金木水火土五行之说， 相信对于大家而言是再熟悉不过了， 相生：水生木、木生火、火生土、土生金、金生水， 相克：金克木、木克土、土克水、水克火、火克金， 无可争议。","text":"转自 http://www.kanshu.com/files/article/html/24390/792399.htmlhttp://blog.sina.com.cn/s/blog_6246a9190101ukyg.html 金木水火土五行之说， 相信对于大家而言是再熟悉不过了， 相生：水生木、木生火、火生土、土生金、金生水， 相克：金克木、木克土、土克水、水克火、火克金， 无可争议。 然而谈及雷风水火土五灵， 这个说法最早出自于哪本古籍是无从考证了， 但是国产游戏中可以肯定是出自《仙剑奇侠传一》， 仙剑里的五灵， 水之润下，无孔不入；火之炎上，无物不焚；雷之肃敛，无坚不摧；风之肆拂，无阻不透；土之养化，无物不融。 相生：水生风、风生火、火生土、土生雷、雷生水， 相克：水克火、火克雷、雷克风、风克土、土克水。 然而关于相生相克， 东瀛岛国那边另有一种说法， 尤以著名动漫作品《火影忍者》为例， 相生：水生雷、雷生火、火生土、土生风、风生水， 相克：风克雷、雷克土、土克水、水克火、火克风。 雷和风的确是两种令人头疼的元素， 如果要把它俩与金、木对位， 金能导电，属雷，金器锋利，又属风； 木能引雷，属雷，木林起风，又属风。 先说它们相生的属性， 我国的水生风、风生火、土生雷、雷生水， 水生风：水陆的冷暖差产生风， 风生火：风能助长火焰燃烧， 土生雷：大地引导雷电， 雷生水：打雷就会引起下雨， 道理说得过去。 岛国的水生雷、雷生火、土生风、风生水， 水生雷：水可以导电， 雷生火：雷电能劈出火焰， 土生风：土质干燥易形成风暴， 风生水：风带动气流、形成降雨， 道理也说得过去。 再说它们相克的属性， 我国的火克雷、雷克风、风克土， 火克雷：火焰可以被风吹、被土挡、被水灭，唯独无视雷电的存在，还可以燃烧掉一切东西让雷电绝缘。 雷克风：雷击产生根本原因就是空气对流，而雷击之时更能压缩气体、产生一种强大的冲击波，这些都代表了雷在根本上是压制风的。 风克土：暴风吹动土壤，形成沙尘暴。 我国这三种元素的属性尚也说得过去。 岛国的火克风、风克雷、雷克土， 对此， 岛国那边的解释是， 火克风：风能助长火和火能抑制风。 风克雷：风吹走雷云，让雷电无法形成。 雷克土：雷的威力能打碎土壤。 个人觉得这稍稍有点牵强， 如果说风能助长火焰，说是火生风可能更好； 如果说风能吹走雷云，那地上的电为何又被风克制，笔者暂时没想到解释的方法； 雷能打碎土壤，这个大概说得过去吧。 鉴于这两种体系的矛盾， 有关五灵相生相克的问题， 笔者曾细细研究过一段时间， 不如看看中华文化里五行与其他事物对应的情况吧？ 五行：木、火、土、金、水， 五脏：肝、心、脾、肺、肾， 五体：筋、脉、肉、皮、骨， 五华：爪、面、唇、毛、发， 五志：怒、喜、思、悲、恐， 五液：泪、汗、涎、涕、唾， 五味：酸、苦、甘、辛、咸， 五色：青、赤、黄、白、黑， 五方：东、南、中、西、北， 五季：春、夏、长夏、秋、冬， 五气：风、暑、湿、燥、寒， 五化：生、长、化、收、藏， 五音：角、徵、宫、商、羽， 五官：目、舌、口、鼻、耳， 五神：句芒、祝融、后土、蓐收、玄冥， 五兽：青龙、朱雀、麒麟、白虎、玄武， 五灵：风、火、土、雷、水。 看过以上的列表， 相信读者大概清楚为什么我国会把五灵系统中的“雷”代替“金”、“风”代替“木”了， 就拿句芒这位春神、木神来说， 他是青绿色的人面鸟身之神， 更是我国特有的掌控春风细雨的生命之神。 《吕氏春秋·孟春》：“其帝太白皋，其神句茫。”高诱注：“太白皋，伏羲氏，以木德王天下之号，死祀于东方，为木德之帝。句芒，少白皋氏之裔子曰重，佐木德之帝，死为木官之神。” 《礼记·月令》：“其帝大白皋，其神句芒。”郑玄注曰：“句芒，少白皋氏之子，曰重，为木官。”朱熹注曰：“大白皋伏牺，木德之君。句芒，少白皋氏之子，曰重，木官之臣。圣神继天立极，先有功德于民，故后王于春祀之。” 以上两处文献充分说明了“句芒”与“木”、“春”、“东方”之间的关系，“句芒”一角身为青色鸟神，已能够与“青”、“风”很好地联系起来了。 如果说这里的论证还不明确， 中医学里的“五气”之说却已然给五灵下了定论， 那就是木、火、土、金、水分别对应风、暑、湿、燥、寒， 木就是风， 金就是燥热的雷， 没有哪一项比这个更明显地表达了金木与雷风之间的关系。 因此， 笔者可以做出如下结论： 我国的五灵体系就是雷风水火土， 相生相克的原理就是： 相生：水生风、风生火、火生土、土生雷、雷生水， 相克：水克火、火克雷、雷克风、风克土、土克水。 尽管岛国的五灵体系也有他们的道理，但论及传统文化的深厚程度，还是本国的五灵体系占了上风。 希望这段考究对于以后仙侠武侠文化的发展起到推进的作用，并祝各位看官看的愉快。 八卦所属如下： 乾、兑（金） 震、巽（木） 坤、艮（土） 离（火） 坎（水） 巽为风，所以风属木。 以气候划分也是同样，风属木，寒属水，暑属火，湿属土，燥属金。 这里的风不是风属性的风","categories":[{"name":"中二","slug":"中二","permalink":"/categories/中二/"}],"tags":[{"name":"中二","slug":"中二","permalink":"/tags/中二/"}]},{"title":"深圳奥統平","slug":"shenzhenautungping","date":"2016-12-21T13:47:11.000Z","updated":"2017-10-24T05:29:46.000Z","comments":true,"path":"2016/12/21/shenzhenautungping/","link":"","permalink":"/2016/12/21/shenzhenautungping/","excerpt":"單例模式 GIT和SVN區別 編程題 用string 相加，不能用lib","text":"單例模式 GIT和SVN區別 編程題 用string 相加，不能用lib兩個數組判斷，是否B屬於A的子類，有返回第一個數組的下標，無則返回-1 12345678910111213141516pubilc Sting add(Sting numberA,String numberB)&#123; &#125; system.out.println(add(\"123456789123456789123456789\",\"123456789123456789123456789\")); //24676895858588768055576705442138576768 system.out.println(add(\"1\",\"2\")); //3 system.out.println(add(\"A\",\"1\")); //ERROR pubilc int sub(int A[],int B[])&#123;&#125; system.out.println(sub(\"&#123;4,5,6,7,8&#125;\",\"&#123;5,6&#125;\")); //return 1 system.out.println(sub(\"&#123;4,5,6,7,8&#125;\",\"&#123;5,4&#125;\")); //return -1 system.out.println(sub(\"&#123;4,5,6,7,8&#125;\",\"&#123;6,7,8&#125;\")); //return 2","categories":[{"name":"面試","slug":"面試","permalink":"/categories/面試/"}],"tags":[]},{"title":"經常面試到的SQL題(查詢重複數據和清除重複數據)","slug":"jingchangmienshrdaudeSQLti(chasiunchungfushujiuhecingchuchungfushujiu)","date":"2016-10-22T09:47:11.000Z","updated":"2017-03-08T04:10:56.000Z","comments":true,"path":"2016/10/22/jingchangmienshrdaudeSQLti(chasiunchungfushujiuhecingchuchungfushujiu)/","link":"","permalink":"/2016/10/22/jingchangmienshrdaudeSQLti(chasiunchungfushujiuhecingchuchungfushujiu)/","excerpt":"sql查詢消除重複數據 如數據庫有一名為biau的表： 字段與數據例如下如：","text":"sql查詢消除重複數據 如數據庫有一名為biau的表： 字段與數據例如下如：biau id name address 1 小王 重慶 2 小張 北京 3 小明 上海 4 小紅 重慶 要求用sql查詢出按不同address（地址）的排列的所有數據(即地址不能重複，如有重複只選取一次，其他列數據可以重複) 查询SQL如下 id name address 4 小紅 重慶 3 小明 上海 2 小張 北京 1select * from biau where id in (select max(id) from biau group by address) order by id desc 常見的SQL問題：◆選擇重複，消除重複和選擇出序列有例表：emp| emp_no | name | age ||:————-:|:————-:|:————-:|| 001 | Tom | 17 || 002 | Sun | 14 || 003 | Tom | 15 || 004 | Tom | 16 | 要求：列出所有名字重複的人的記錄(1)最直觀的思路：要知道所有名字有重複人資料，首先必須知道哪個名字重複了：1select name from emp group by name having count(*)&gt;1 所有名字重複人的記錄是:1select * from emp where name in(select name from emp group by name having count(*)&gt;1) (2)稍微再聰明一點，就會想到，如果對每個名字都和原表進行比較，大於2個人名字與這條記錄相同的就是合格的 ，就有1select * from emp where (select count(*) from emp e where e.name=emp.name)&gt;1 –注意一下這個&gt;1，想下如果是 =1，如果是 =2 如果是&gt;2 如果 e 是另外一張表 而且是=0那結果 就更好玩了:)這個過程是 在判斷工號為001的人的時候先取得 001的名字（emp.name） 然後和原表的名字進行比較 e.name注意e是emp的一個別名。再稍微想得多一點，就會想到，如果有另外一個名字相同的人工號不與她他相同那麼這條記錄符合要求：1select * from emp where exists (select * from emp e where e.name=emp.name and e.emp_no&lt;&gt;emp.emp_no) 此思路的join寫法：1select emp.* from emp,emp e where emp.name=e.name and emp.emp_no&lt;&gt;e.emp_no /* 這個語句較規範的join寫法是1select emp.* from emp inner join emp e on emp.name=e.name and emp.emp_no&lt;&gt;e.emp_no 但個人比較傾向於前一種寫法，關鍵是更清晰 */b、有例表：emp name age Tom 16 Sun 14 Tom 16 Tom 16 —————————————————-清除重複—————————————————-過濾掉所有多餘的重複記錄(1)我們知道distinct、group by 可以過濾重複，於是就有最直觀的1select distinct * from emp 或 select name,age from emp group by name,age 獲得需要的數據，如果可以使用臨時表就有解法：1select distinct * into #tmp from emp delete from emp insert into emp select * from #tmp (2)但是如果不可以使用臨時表，那該怎麼辦？我們觀察到我們沒辦法區分數據（物理位置不一樣，對 SQL Server來說沒有任何區別），思路自然是想辦法把數據區分出來了，既然現在的所有的列都沒辦法區分數據，唯一的辦法就是再加個列讓它區分出來，加什麼列好？最佳選擇是identity列：1alter table emp add chk int identity(1,1) 表示例： name age chk Tom 16 1 Sun 14 2 Tom 16 3 Tom 16 4 重複記錄可以表示為：1select * from emp where (select count(*) from emp e where e.name=emp.name)&gt;1 要刪除的是：1delete from emp where (select count(*) from emp e where e.name=emp.name and e.chk&gt;=emp.chk)&gt;1 再把添加的列刪掉，出現結果。1alter table emp drop column chk (3)另一個思路：視圖1select min(chk) from emp group by name having count(*)&gt;1 獲得有重複的記錄chk最小的值,於是可以1delete from emp where chk not in (select min(chk) from emp group by name) 寫成join的形式也可以:(1)有例表：emp emp_no name age 001 Tom 17 002 Sun 14 003 Tom 15 004 Tom 16 ◆要求生成序列號(1)最簡單的方法，根據b問題的解法：12alter table emp add chk int identity(1,1)或 select *,identity(int,1,1) chk into #tmp from emp ◆如果需要控制順序怎麼辦？1select top 100000 *,identity(int,1,1) chk into #tmp from emp order by age (2) 假如不可以更改表結構，怎麼辦？如果不可以唯一區分每條記錄是沒有辦法的，在可以唯一區分每條記錄的時候,可以使用a 中的count的思路解決這個問題1select emp.*,(select count(*) from emp e where e.emp_no&lt;=emp.emp_no) from emp order by (select count(*) from emp e where e.emp_no&lt;=emp.emp_no)","categories":[{"name":"面試","slug":"面試","permalink":"/categories/面試/"}],"tags":[]},{"title":"華師校招","slug":"huashrsiauzhau","date":"2016-10-22T09:47:11.000Z","updated":"2017-03-08T04:10:26.000Z","comments":true,"path":"2016/10/22/huashrsiauzhau/","link":"","permalink":"/2016/10/22/huashrsiauzhau/","excerpt":"table1 序號 日期 客戶人數 01 1 1000 02 2 2000 03 1 1000 查询SQL如下 序號 日期 客戶人數 01 1 1000 02 2 2000","text":"table1 序號 日期 客戶人數 01 1 1000 02 2 2000 03 1 1000 查询SQL如下 序號 日期 客戶人數 01 1 1000 02 2 2000 123SELECT distinct t.日期,t.`客户人数`FROM table1 tORDER BY t.序号 多線程安全有什麽解決方式，樂觀鎖和悲觀鎖 Stringmvc的特性 單例模式和工廠模式有什麽不同 容器有什麽作用 数据库索引","categories":[{"name":"面試","slug":"面試","permalink":"/categories/面試/"}],"tags":[]},{"title":"深圳法本","slug":"shenzhenfaben","date":"2016-10-14T09:47:11.000Z","updated":"2017-03-08T04:13:06.000Z","comments":true,"path":"2016/10/14/shenzhenfaben/","link":"","permalink":"/2016/10/14/shenzhenfaben/","excerpt":"table1 序號 日期 客戶人數 01 1 1000 02 2 2000 03 3 3000 查询SQL如下 序號 日期 客戶人數 上一個客戶人數 环比 02 2 2000 1000 100% 03 3 3000 2000 125%","text":"table1 序號 日期 客戶人數 01 1 1000 02 2 2000 03 3 3000 查询SQL如下 序號 日期 客戶人數 上一個客戶人數 环比 02 2 2000 1000 100% 03 3 3000 2000 125% 1234SELECT t.*,t1.客户人数 AS 上次客户人数,(t.客户人数-t1.客户人数)/t1.客户人数*100||'%' AS 环比FROM table1 t,table1 t1WHERE t.日期=t1.日期+1ORDER BY t.序号 List,SET和MAP有什麽實例 Stringmvc的特性 多線程 XML解析","categories":[{"name":"面試","slug":"面試","permalink":"/categories/面試/"}],"tags":[]},{"title":"Hibernate緩存原理","slug":"HibernateCache","date":"2016-09-25T05:03:14.000Z","updated":"2017-06-02T16:03:58.000Z","comments":true,"path":"2016/09/25/HibernateCache/","link":"","permalink":"/2016/09/25/HibernateCache/","excerpt":"今天面試Hibernate緩存原理答不上來，太久沒看過基礎，以至於有點慌張，現在總結幫助以後面試發揮。Hibernate緩存原理: 對於Hibernate這類ORM而言,緩存顯的尤為重要,它是持久層性能提升的關鍵.簡單來講Hibernate就是對JDBC進行封裝,以實現內部狀態的管理,OR關係的映射等,但隨之帶來的就是數據訪問效率的降低,和性能的下降,而緩存就是彌補這一缺點的重要方法.","text":"今天面試Hibernate緩存原理答不上來，太久沒看過基礎，以至於有點慌張，現在總結幫助以後面試發揮。Hibernate緩存原理: 對於Hibernate這類ORM而言,緩存顯的尤為重要,它是持久層性能提升的關鍵.簡單來講Hibernate就是對JDBC進行封裝,以實現內部狀態的管理,OR關係的映射等,但隨之帶來的就是數據訪問效率的降低,和性能的下降,而緩存就是彌補這一缺點的重要方法. 緩存就是資料庫數據在內存中的臨時容器,包括資料庫數據在內存中的臨時拷貝,它位於資料庫與資料庫訪問層中間.ORM在查詢數據時首先會根據自身的緩存管理策略,在緩存中查找相關數據,如發現所需的數據,則直接將此數據作為結果加以利用,從而避免了資料庫調用性能的開銷.而相對記憶體操作而言,資料庫調用是一個代價高昂的過程. 一般來講ORM中的緩存分為以下幾類: 1.事務級緩存:即在當前事務範圍內的數據緩存.就Hibernate來講,事務級緩存是基於Session的生命週期實現的,每個Session內部會存在一個數據緩存,它隨著Session的創建而存在,隨著Session的銷毀而滅亡,因此也稱為Session Level Cache. 2.應用級緩存:即在某個應用中或應用中某個獨立資料庫訪問子集中的共用緩存,此緩存可由多個事務共用(資料庫事務或應用事務),事務之間的緩存共用策略與應用的事務隔離機制密切相關.在Hibernate中,應用級緩存由SessionFactory實現,所有由一個SessionFactory創建的 Session實例共用此緩存,因此也稱為SessionFactory Level Cache. 3.分佈式緩存:即在多個應用實例,多個JVM間共用的緩存策略.分佈式緩存由多個應用級緩存實例組成,通過某種遠程機制(RMI,JMS)實現各個緩存實例間的數據同步,任何一個實例的數據修改,將導致整個集群間的數據狀態同步. Hibernate的一，二級緩存策略: Hibernate中提供了兩級Cache，第一級別的緩存是Session級別的緩存，它是屬於事務範圍的緩存。這一級別的緩存由hibernate管理的，一般情況下無需進行干預；第二級別的緩存是SessionFactory級別的緩存，它是屬於進程範圍或群集範圍的緩存。這一級別的緩存可以進行配置和更改，並且可以動態加載和卸載，屬於多事務級別，要防止事務併發性。緩存是以map的形式進行存儲的(key-id,value-object)一級緩存(Session): 事務範圍，每個事務(Session)都有單獨的第一級緩存. 一級緩存的管理：當應用程式調用Session的save()、update()、saveOrUpdate()、get()或load()，以及調用查詢介面的 list()、iterate()–(用的是n+1次查詢，先查id)或filter()方法時，如果在Session緩存中還不存在相應的對象，Hibernate就會把該對象加入到第一級緩存中。當清理緩存時，Hibernate會根據緩存中對象的狀態變化來同步更新資料庫。 Session為應用程式提供了兩個管理緩存的方法： evict(Object obj)：從緩存中清除參數指定的持久化對象。 clear()：清空緩存中所有持久化對象,flush():使緩存與資料庫同步。當查詢相應的字段如(name)，而不是對象時，不支持緩存。二級緩存(SessionFactory): Hibernate的二級緩存策略的一般過程如下： 1.條件查詢的時候，總是發出一條select * from table_name where …. （選擇所有字段）這樣的SQL句查詢資料庫，一次獲得所有的數據對象(這個問題要考慮，如果你查詢十萬條數據時，記憶體不是被佔用)。 2.把獲得的所有數據對象根據ID放入到第二級緩存中。 3.當Hibernate根據ID訪問數據對象的時候，首先從Session一級緩存中查；查不到，如果配置了二級緩存，那麼從二級緩存中查；查不到，再查詢資料庫，把結果按照ID放入到緩存。 4.刪除、更新、增加數據的時候，同時更新緩存。Hibernate的二級緩存策略，是針對於ID查詢的緩存策略，對於條件查詢則毫無作用。為此，Hibernate提供了針對條件查詢的Query Cache。 Q:什麼樣的數據適合存放到第二級緩存中？ 1.很少被修改的數據 2.不是很重要的數據，允許出現偶爾併發的數據 3.不會被併發訪問的數據 4.參考數據,指的是供應用參考的常量數據，它的實例數目有限，它的實例會被許多其他類的實例引用，實例極少或者從來不會被修改。 不適合存放到第二級緩存的數據？ 1.經常被修改的數據 2.財務數據，絕對不允許出現併發 3.與其他應用共用的數據。 常用的緩存插件 Hibernater 的二級緩存是一個插件，下麵是幾種常用的緩存插件： EhCache：可作為進程範圍的緩存，存放數據的物理介質可以是記憶體或硬碟，對Hibernate的查詢緩存提供了支持。 OSCache：可作為進程範圍的緩存，存放數據的物理介質可以是記憶體或硬碟，提供了豐富的緩存數據過期策略，對Hibernate的查詢緩存提供了支持。 SwarmCache：可作為群集範圍內的緩存，但不支持Hibernate的查詢緩存。 JBossCache：可作為群集範圍內的緩存，支持事務型併發訪問策略，對Hibernate的查詢緩存提供了支持。 配置二級緩存的主要步驟： 1.選擇需要使用二級緩存的持久化類，設置它的命名緩存的併發訪問策略。這是最值得認真考慮的步驟。 2.選擇合適的緩存插件，然後編輯該插件的配置檔。","categories":[{"name":"Hibernate","slug":"Hibernate","permalink":"/categories/Hibernate/"}],"tags":[{"name":"Hibernate","slug":"Hibernate","permalink":"/tags/Hibernate/"}]},{"title":"ORA-28001: the password has expired","slug":"ORA-28001-the-password-has-expired","date":"2016-05-28T08:40:37.000Z","updated":"2017-03-05T06:54:00.000Z","comments":true,"path":"2016/05/28/ORA-28001-the-password-has-expired/","link":"","permalink":"/2016/05/28/ORA-28001-the-password-has-expired/","excerpt":"Oracle 提示錯誤消息ORA-28001: the password has expired，是由於Oracle11G的新特性所致， Oracle11G創建用戶時缺省密碼過期限制是180天（即6個月）， 如果超過180天用戶密碼未做修改則該用戶無法登錄。 Oracle公司是為了資料庫的安全性默認在11G中引入了這個默認功能，但是這個默認的功能很容易被DBA或者是開發人員給疏忽，一旦密碼180天未修 改過，就會出現這樣的問題。解決方法可通過如下SQL語句","text":"Oracle 提示錯誤消息ORA-28001: the password has expired，是由於Oracle11G的新特性所致， Oracle11G創建用戶時缺省密碼過期限制是180天（即6個月）， 如果超過180天用戶密碼未做修改則該用戶無法登錄。 Oracle公司是為了資料庫的安全性默認在11G中引入了這個默認功能，但是這個默認的功能很容易被DBA或者是開發人員給疏忽，一旦密碼180天未修 改過，就會出現這樣的問題。解決方法可通過如下SQL語句注: 首先需要使用dba登錄.運行SQLPlus命令行工具, 輸入:1connect as sysdba; 輸入dba的用戶名和密碼後進行.1SELECT * FROM dba_profiles WHERE profile='DEFAULT' AND resource_name='PASSWORD_LIFE_TIME' 查詢密碼的有效期設置，LIMIT字段是密碼有效天數。在密碼將要過期或已經過期時可通過如下語句進行修改密碼，密碼修改後該用戶可正常連接資料庫。12ALTER USER 用戶名 IDENTIFIED BY 密碼 ; 如果想去除180天的密碼生存週期的限制可通過如下SQL語句將其關閉1ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED 如上SQL語句將口令有效期默認值180天修改成了“無限制”。但是出於資料庫安全性考慮，不建議將PASSWORD_LIFE_TIME值設置成UNLIMITED，建議大家定期修改資料庫用戶口令。","categories":[],"tags":[{"name":"oracle","slug":"oracle","permalink":"/tags/oracle/"}]},{"title":"Picked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook","slug":"Picked-up-JAVA-TOOL-OPTIONS-agentlib-jvmhook","date":"2016-05-28T08:25:00.000Z","updated":"2016-06-08T13:38:10.000Z","comments":true,"path":"2016/05/28/Picked-up-JAVA-TOOL-OPTIONS-agentlib-jvmhook/","link":"","permalink":"/2016/05/28/Picked-up-JAVA-TOOL-OPTIONS-agentlib-jvmhook/","excerpt":"","text":"12345678910111213刪除用戶變量中的JAVA_TOOL_OPTIONS後正常_JAVA_OPTIONS-Xrunjvmhook -Xbootclasspath/a:C:\\PROGRA~2\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes;C:\\PROGRA~2\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes\\jasmine.jarJAVA_TOOL_OPTIONS-agentlib:jvmhookIBM_JAVA_OPTIONS-Xrunjvmhook -Xbootclasspath/a:C:\\PROGRA~2\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes;C:\\PROGRA~2\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes\\jasmine.jar_JAVA_OPTIONS-Xrunjvmhook -Xbootclasspath/a:C:\\PROGRA~2\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes;C:\\PROGRA~2\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes\\jasmine.jar","categories":[],"tags":[{"name":"bugs","slug":"bugs","permalink":"/tags/bugs/"}]},{"title":"在Eclipse或MyEclipse 2014中安裝findbugs插件","slug":"findbugs","date":"2016-05-10T10:59:00.000Z","updated":"2017-10-22T14:27:24.000Z","comments":true,"path":"2016/05/10/findbugs/","link":"","permalink":"/2016/05/10/findbugs/","excerpt":"Eclipse中安裝findbugs插件Eclipse中安裝findbugs插件(就不一一贅述了)","text":"Eclipse中安裝findbugs插件Eclipse中安裝findbugs插件(就不一一贅述了) MyEclipse中安裝findbugs插件下載findbugs修改MyEclipse安装目录下configuration\\org.eclipse.equinox.simpleconfigurator的bundles.info檔案，在檔案最後添加一行：將官網下載的findbugs包放到MyEclipse安装目录下\\pluginsMyEclipse： edu.umd.cs.findbugs.plugin.eclipse,3.0.1.20150306-5afe4d1,file:/C:/Myeclipse/plugins/edu.umd.cs.findbugs.plugin.eclipse_3.0.1.20150306-5afe4d1/,4,false注：bundles.info檔案中添加的格式為 插件包名 , 插件版本號 , 插件安裝路徑 , 4 , false如上findbugs插件： edu.umd.cs.findbugs.plugin.eclipse：插件的壓縮包名 3.0.1.20150306-5afe4d1：該插件的版本號 plugins/edu.umd.cs.findbugs.plugin.eclipse_3.0.1.20150306-5afe4d1/ ：該插件的安裝路徑，如果插件是一个jar包，则不要最後的/， 例如plugins/org.uddi4j_2.0.5.v200805270300.jar,4,false ,4,false：固定格式 重启myeclipse和Eclipse，選中項目，右鍵會出現Find Bugs菜单。至此，findbugs插件安裝成功。","categories":[{"name":"findbugs","slug":"findbugs","permalink":"/categories/findbugs/"}],"tags":[{"name":"findbugs","slug":"findbugs","permalink":"/tags/findbugs/"}]},{"title":"詞法分析 DFA 程序","slug":"DFA-program","date":"2016-05-07T01:41:18.000Z","updated":"2017-03-08T04:15:18.000Z","comments":true,"path":"2016/05/07/DFA-program/","link":"","permalink":"/2016/05/07/DFA-program/","excerpt":"實驗一：詞法分析實驗目的:通過DFA程式的實現理解自動機的原理 實驗內容：1、閱讀並理解實驗案例中DFA的程式實現；2、參考實驗案例，完成簡單的DFA程式設計。 實驗要求：請對下列程式進行詞法分析，判斷是否字串“abbb”將被識別或通過在FA接受？","text":"實驗一：詞法分析實驗目的:通過DFA程式的實現理解自動機的原理 實驗內容：1、閱讀並理解實驗案例中DFA的程式實現；2、參考實驗案例，完成簡單的DFA程式設計。 實驗要求：請對下列程式進行詞法分析，判斷是否字串“abbb”將被識別或通過在FA接受？1、假定FA=（{0,1,2,3}, {a,b}, M, 0, {3}） M： M(0,a)=1 M(0,b)=2 M(1,a)=3 M(1,b)=2 M(2,a)=1 M(2,b)=3 M(3,a)=3 M(3,b)=3確定化後的DFA為： 參考代碼：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147#include &lt;stdio.h&gt;int in(int s,int z)&#123;if (s==z)&#123;printf(\"3\\n这个最后状态跳转到终态!\");return 1;&#125;else return 0;&#125;int step (int s,char t)&#123; if(t=='a')switch(s)&#123;case 0: return 1;case 1: return 3;case 2: return 1;case 3: return 3;&#125;else if (t=='b')switch(s)&#123;case 0: return 2;case 1: return 2;case 2: return 3;case 3: return 3;&#125;return 0;&#125;int realize(char *input)&#123; int z=3;int s,i;s=0;for(i=0;input[i]!='\\n';i++)&#123; printf(\"%d\\n\",s); s=step(s,input[i]);&#125; if (in(s,z))return 1;else return 0;&#125;main()&#123; int i;int a;char input[40]; printf(\"FA=(&#123;0,1,2,3&#125;, &#123;a,b&#125;, M, 0, &#123;3&#125;)\\n\");printf(\"M:\\n\"); printf(\" M(0,a)=1 M(0,b)=2\\n\");printf(\" M(1,a)=3 M(1,b)=2\\n\"); printf(\" M(2,a)=1 M(2,b)=3\\n\"); printf(\" M(3,a)=3 M(3,b)=3\\n\");printf(\"请输入要检查的字符串:\\n\");lop: for(i=0;input[i-1]!='\\n';i++)scanf(\"%c\",&amp;input[i]);for(i=0;input[i-1]!='\\n';i++)if(input[i]!='a'&amp;&amp;input[i]!='b'&amp;&amp;input[i]!='\\n')&#123;printf(\"输入错误，请重新输入:\\n\");goto lop;&#125;printf(\"这个状态转换为:\\n\");a=realize(input);if(a==1)printf(\"\\n这个字符串不能识别\\n\");else printf(\"\\n这个字符串不能识别n\");printf(\"请回车离开此程序\\n\");getchar();&#125; 實驗結果：測試數據：aab 測試結果：0 1 3 3","categories":[{"name":"編譯原理","slug":"編譯原理","permalink":"/categories/編譯原理/"}],"tags":[{"name":"編譯原理","slug":"編譯原理","permalink":"/tags/編譯原理/"}]},{"title":"mvninstallojdbc14","slug":"mvninstallojdbc14","date":"2016-05-04T11:48:55.000Z","updated":"2017-05-28T12:44:58.000Z","comments":true,"path":"2016/05/04/mvninstallojdbc14/","link":"","permalink":"/2016/05/04/mvninstallojdbc14/","excerpt":"","text":"12mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.4.0 -Dpackaging=jar -Dfile=d:\\html\\ojdbc14-10.2.0.4.0.jarmvn install:install-file -DgroupId=com.oracle -DartifactId ojdbc14 -Dversion=10.2.0.4.0 -Dpackaging=jar -Dfile=D:\\html\\ojdbc14-10.2.0.4.0.jar","categories":[{"name":"maven","slug":"maven","permalink":"/categories/maven/"}],"tags":[{"name":"maven","slug":"maven","permalink":"/tags/maven/"}]},{"title":"oracle imp exp","slug":"oracle-imp-exp","date":"2016-05-04T11:40:43.000Z","updated":"2017-05-28T12:44:30.000Z","comments":true,"path":"2016/05/04/oracle-imp-exp/","link":"","permalink":"/2016/05/04/oracle-imp-exp/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041imp bookshop/123456@orcl file=D:\\java\\bookshop.dmp full=y;create temporary tablespace bookshop_temp tempfile 'D:\\app\\TOSHIBA\\oradata\\data\\bookshop_temp.dbf' size 50m autoextend on next 50m maxsize 20480m extent management local; create tablespace bookshop_data logging datafile 'D:\\app\\TOSHIBA\\oradata\\data\\bookshop_data.dbf' size 50m autoextend on next 50m maxsize 20480m extent management local; create user bookshop identified by 123456default tablespace bookshop_data temporary tablespace bookshop_temp;grant connect,resource,dba to bookshop;exp bookshop/123456@orcl file=D:\\java\\newbookshop.dmp tables=(ADMINS,ADMINTYPE,CART,CATEGORY,LEAVEWORD,MEMBER,MEMBERLEVEL,MERCHANDISE,ORDERDATA,RECORD)","categories":[{"name":"oracle","slug":"oracle","permalink":"/categories/oracle/"}],"tags":[{"name":"oracle","slug":"oracle","permalink":"/tags/oracle/"}]},{"title":"怎麼安裝 MinGW (GCC) 編譯器套件","slug":"MinGW","date":"2016-05-04T07:34:11.000Z","updated":"2017-03-08T04:21:44.000Z","comments":true,"path":"2016/05/04/MinGW/","link":"","permalink":"/2016/05/04/MinGW/","excerpt":"","text":"使用GUI自動安裝程式如果你是MinGW的新手，一個好的方法是從下載。 下載並運行安裝程式(例如 “MinGW-5.1.4.exe” – 當前唯一“建議”的版本)。這個安裝程式會安裝 mingw-runtime, w32api, GCC, binutils 和 mingw32-make, (不過它可能不會安裝最新發佈的獨立版本)。比如 GCC，只須把它們解壓到MinGW目錄即可。 警告默認的安裝路徑是C:\\MinGW，這也是安裝包預配置的路徑。如果你不肯定你知道怎麼做的話，你就不應該改變它。特別是：絕對不要把MinGW安裝到含有空格的路徑中去。 安裝包不會自動改變環境設定，(特指PATH)。 你需要添加 MinGW 的bin 路徑到環境變數中。","categories":[{"name":"MinGW","slug":"MinGW","permalink":"/categories/MinGW/"}],"tags":[{"name":"MinGW","slug":"MinGW","permalink":"/tags/MinGW/"}]},{"title":"華語拼音公式改","slug":"huayu-pinyin","date":"2016-05-01T04:44:23.000Z","updated":"2017-03-08T04:20:52.000Z","comments":true,"path":"2016/05/01/huayu-pinyin/","link":"","permalink":"/2016/05/01/huayu-pinyin/","excerpt":"華語拼音公式改","text":"華語拼音公式改 注音 華語拼音 台灣華語羅馬拼音 漢語拼音 通用拼音 注音符號第二式 威妥瑪拼音 ㄅㄚ ba ba ba ba ba pa ㄅㄛ bo bo bo bo bo po ㄅㄞ bai bai bai bai bai pai ㄅㄟ bei bei bei bei bei pei ㄅㄠ bau bao bao bao bau pao ㄅㄢ ban ban ban ban ban pan ㄅㄣ ben ben ben ben ben pên ㄅㄤ bang bang bang bang bang pang ㄅㄥ beng beng beng beng beng pêng ㄅㄧ bi bi bi bi bi pi ㄅㄧㄝ bie bieh bie bie bie pieh ㄅㄧㄠ biau biao biao biao biau piao ㄅㄧㄢ bien bian bian bian bian pien ㄅㄧㄣ bin bin bin bin bin pin ㄅㄧㄥ bing bing bing bing bing ping ㄅㄨ bu bu bu bu bu pu ㄅㄨㄛ1) buo buo (bo) (bo) (bo) (po) ㄅㄨㄥ2) bung bung (beng) (beng) (beng) (pêng) ㄆㄚ pa pa pa pa pa p’a ㄆㄛ po po po po po p’o ㄆㄞ pai pai pai pai pai p’ai ㄆㄟ pei pei pei pei pei p’ei ㄆㄠ pau pao pao pao pau p’ao ㄆㄡ pou pou pou pou pou p’ou ㄆㄢ pan pan pan pan pan p’an ㄆㄣ pen pen pen pen pen p’ên ㄆㄤ pang pang pang pang pang p’ang ㄆㄥ peng peng peng peng peng p’êng ㄆㄧ pi pi pi pi pi p’i ㄆㄧㄝ pie pieh pie pie pie p’ieh ㄆㄧㄠ piau piao piao piao piau p’iao ㄆㄧㄢ pien pian pian pian pian p’ien ㄆㄧㄣ pin pin pin pin pin p’in ㄆㄧㄥ ping ping ping ping ping p’ing ㄆㄨ pu pu pu pu pu p’u ㄆㄨㄛ3) puo puo (po) (po) (po) (p’o) ㄆㄨㄥ4) pung pong (peng) (peng) (peng) (p’êng) ㄇㄚ ma ma ma ma ma ma ㄇㄛ mo mo mo mo mo mo ㄇㄜ me me me me me me ㄇㄞ mai mai mai mai mai mai ㄇㄟ mei mei mei mei mei mei ㄇㄠ mau mao mao mao mau mao ㄇㄡ mou mou mou mou mou mou ㄇㄢ man man man man man man ㄇㄣ men men men men men mên ㄇㄤ mang mang mang mang mang mang ㄇㄥ meng meng meng meng meng mêng ㄇㄧ mi mi mi mi mi mi ㄇㄧㄝ mie mieh mie mie mie mieh ㄇㄧㄠ miau miao miao miao miau miao ㄇㄧㄡ miou miou miu miou miou miu ㄇㄧㄢ mien mian mian mian mian mien ㄇㄧㄣ min min min min min min ㄇㄧㄥ ming ming ming ming ming ming ㄇㄨ mu mu mu mu mu mu ㄇㄨㄛ5) muo muo ((mo) (mo) (mo) (mo) ㄇㄨㄥ6) mung (meng) (meng) (meng) (meng) (mêng) ㄈㄚ fa fa fa fa fa fa ㄈㄛ fo fo fo fo fo fo ㄈㄟ fei fei fei fei fei fei ㄈㄡ fou fou fou fou fou fou ㄈㄢ fan fan fan fan fan fan ㄈㄣ fen fen fen fen fen fên ㄈㄤ fang fang fang fang fang fang ㄈㄥ feng feng feng fong feng fêng ㄈㄨ fu fu fu fu fu fu ㄈㄨㄛ8) fuo fuo (fo) (fo) (fo) (fo) ㄈㄨㄥ9) fung (fong) (feng) (fong) (feng) (fêng) ㄉㄚ da da da da da ta ㄉㄜ de de de de de te ㄉㄞ dai dai dai dai dai tai ㄉㄟ dei dei dei dei dei tei ㄉㄠ dau dao dao dao dau tao ㄉㄡ dou dou dou dou dou tou ㄉㄢ dan dan dan dan dan tan ㄉㄤ dang dang dang dang dang tang ㄉㄥ deng deng deng deng deng têng ㄉㄧ di di di di di ti ㄉㄧㄝ die dieh die die die tieh ㄉㄧㄠ diau diao diao diao diau tiao ㄉㄧㄡ diou diou diu diou diou diu ㄉㄧㄢ dien dian dian dian dian tien ㄉㄧㄥ ding ding ding ding ding ting ㄉㄨ du du du du du tu ㄉㄨㄛ duo duo duo duo duo to ㄉㄨㄟ duei duei dui duei duei tui ㄉㄨㄢ duan duan duan duan duan tuan ㄉㄨㄣ dun dun dun dun duen tun ㄉㄨㄥ dung dong dong dong dung tung ㄊㄚ ta ta ta ta ta t’a ㄊㄜ te te te te te t’ê ㄊㄞ tai tai tai tai tai t’ai ㄊㄠ tau tao tao tao tau t’ao ㄊㄡ tou tou tou tou tou t’ou ㄊㄢ tan tan tan tan tan t’an ㄊㄤ tang tang tang tang tang t’ang ㄊㄥ teng teng teng teng teng t’êng ㄊㄧ ti ti ti ti ti t’i ㄊㄧㄝ tie tie tie tie tie t’ieh ㄊㄧㄠ tiau tiao tiao tiao tiau t’iao ㄊㄧㄢ tien tian tian tian tian t’ien ㄊㄧㄥ ting ting ting ting ting t’ing ㄊㄨ tu tu tu tu tu t’u ㄊㄨㄛ tuo tuo tuo tuo tuo t’o ㄊㄨㄟ tuei tuei tui tuei tuei t’ui ㄊㄨㄢ tuan tuan tuan tuan tuan t’uan ㄊㄨㄣ tun tun tun tun tuen t’un ㄊㄨㄥ tung tong tong tong tung t’ung ㄋㄚ na na na na na na ㄋㄜ ne ne ne ne ne ne ㄋㄞ nai nai nai nai nai nai ㄋㄟ nei nei nei nei nei nei ㄋㄠ nau nao nao nao nau nao ㄋㄡ nou nou nou nou nou nou ㄋㄢ nan nan nan nan nan nan ㄋㄣ nen nen nen nen nen nên ㄋㄤ nang nang nang nang nang nang ㄋㄥ neng neng neng neng neng nêng ㄋㄧ ni ni ni ni ni ni ㄋㄧㄝ nie nieh nie nie nie nieh ㄋㄧㄠ niau niao niao niao niau niao ㄋㄧㄡ niou niou niu niou niou niu ㄋㄧㄢ nien nian nian nian nian nien ㄋㄧㄣ nin nin nin nin nin nin ㄋㄧㄤ niang niang niang niang niang niang ㄋㄧㄥ ning ning ning ning ning ning ㄋㄨ nu nu nu nu nu nu ㄋㄨㄛ nuo nuo nuo nuo nuo nuo ㄋㄨㄢ nuan nuan nuan nuan nuan nuan ㄋㄨㄣ nun nun nun nun nuen nun ㄋㄨㄥ nung nong nong nong nung nung ㄋㄩ niu nyu nü nyu niu nü ㄋㄩㄝ niue nyueh nüe nyue niue nüeh ㄌㄚ la la la la la la ㄌㄛ lo lo lo lo lo lo ㄌㄜ le le le le le le ㄌㄞ lai lai lai lai lai lai ㄌㄟ lei lei lei lei lei lei ㄌㄠ lau lao lao lao lau lao ㄌㄡ lou lou lou lou lou lou ㄌㄢ lan lan lan lan lan lan ㄌㄤ lang lang lang lang lang lang ㄌㄥ leng leng leng leng leng lêng ㄌㄧ li li li li li li ㄌㄧㄚ lia lia lia lia lia lia ㄌㄧㄝ lie lieh lie lie lie lieh ㄌㄧㄠ liau liao liao liao liau liao ㄌㄧㄡ liou liou liu liou liou liu ㄌㄧㄢ lien lian lian lian lian lien ㄌㄧㄣ lin lin lin lin lin lin ㄌㄧㄤ liang liang liang liang liang liang ㄌㄧㄥ ling ling ling ling ling ling ㄌㄨ lu lu lu lu lu lu ㄌㄨㄛ luo luo luo luo luo luo ㄌㄨㄢ luan luan luan luan luan luan ㄌㄨㄣ lun lun lun lun luen lun ㄌㄨㄥ lung long long long lung lung ㄌㄩ liu lyu lü lyu liu lü ㄌㄩㄝ liue lyueh lüe lyue liue lüeh ㄌㄩㄢ liuen lyuan lüan lyuan liuan lüen ㄍㄚ ga ga ga ga ga ka ㄍㄜ ge ge ge ge ge ke ㄍㄞ gai gai gai gai gai kai ㄍㄟ gei gei gei gei gei kei ㄍㄠ gau gao gao gao gau kao ㄍㄡ gou gou gou gou gou kou ㄍㄢ gan gan gan gan gan kan ㄍㄣ gen gen gen gen gen kên ㄍㄤ gang gang gang gang gang kang ㄍㄥ geng geng geng geng geng kêng ㄍㄨ gu gu gu gu gu ku ㄍㄨㄚ gua gua gua gua gua kua ㄍㄨㄛ guo guo guo guo guo kuo ㄍㄨㄞ guai guai guai guai guai kuai ㄍㄨㄟ guei guei gui guei guei kui ㄍㄨㄢ guan guan guan guan guan kuan ㄍㄨㄣ gun gun gun gun gun kun ㄍㄨㄤ guang guang guang guang guang kuang ㄍㄨㄥ gung gong gong gong gung kung ㄎㄚ ka ka ka ka ka k’a ㄎㄜ ke ke ke ke ke k’ê ㄎㄞ kai kai kai kai kai k’ai ㄎㄠ kau kao kao kao kau k’ao ㄎㄡ kou kou kou kou kou k’ou ㄎㄢ kan kan kan kan kan k’an ㄎㄣ ken ken ken ken ken k’ên ㄎㄤ kang kang kang kang kang k’ang ㄎㄥ keng keng keng keng keng k’êng ㄎㄨ ku ku ku ku ku k’u ㄎㄨㄚ kua kua kua kua kua k’ua ㄎㄨㄛ kuo kuo kuo kuo kuo k’uo ㄎㄨㄞ kuai kuai kuai kuai kuai k’uai ㄎㄨㄟ kuei kuei kui kuei kuei k’ui ㄎㄨㄢ kuan kuan kuan kuan kuan k’uan ㄎㄨㄣ kun kun kun kun kuen k’un ㄎㄨㄤ kuang kuang kuang kuang kuang k’uang ㄎㄨㄥ kung kong kong kong kung k’ung ㄏㄚ ha ha ha ha ha ha ㄏㄜ he he he he he he ㄏㄞ hai hai hai hai hai hai ㄏㄟ hei hei hei hei hei hei ㄏㄠ hau hao hao hao hau hao ㄏㄡ hou hou hou hou hou hou ㄏㄢ han han han han han han ㄏㄣ hen hen hen hen hen hen ㄏㄤ hang hang hang hang hang hang ㄏㄥ heng heng heng heng heng heng ㄏㄨ hu hu hu hu hu hu ㄏㄨㄚ hua hua hua hua hua hua ㄏㄨㄛ huo huo huo huo huo huo ㄏㄨㄞ huai huai huai huai huai huai ㄏㄨㄟ huei huei hui huei huei hui ㄏㄨㄢ huan huan huan huan huan huan ㄏㄨㄣ hun hun hun hun huen hun ㄏㄨㄤ huang huang huang huang huang huang ㄏㄨㄥ hung hong hong hong hung hung ㄐㄧ ji ji ji ji ji chi ㄐㄧㄚ jia jia jia jia jia chia ㄐㄧㄝ jie jieh jie jie jie chieh ㄐㄧㄠ jiau jiao jiao jiao jiau chiao ㄐㄧㄡ jiou jiou jiu jiou jiou chiou ㄐㄧㄢ jien jian jian jian jian chian ㄐㄧㄣ jin jin jin jin jin chin ㄐㄧㄤ jiang jiang jiang jiang jiang chiang ㄐㄧㄥ jing jing jing jing jing ching ㄐㄩ jiu jyu ju jyu jiu chü ㄐㄩㄝ jiue jyueh jue jyue jiue chüeh ㄐㄩㄢ jiuen jyuan juan jyuan jiuan chüan ㄐㄩㄣ jiun jyun jun jyun jiuen chün ㄐㄩㄥ jiung jyong jiong jyong jiung chüng ㄑㄧ ci chi qi ci chi ch’i ㄑㄧㄚ cia chia qia cia chia ch’ia ㄑㄧㄝ cie chieh qie cie chie ch’ieh ㄑㄧㄠ ciau chiao qiao ciao chiau chiao ㄑㄧㄡ ciou chiou qiu ciou chiou ch’iu ㄑㄧㄢ cien chian qian cian chian ch’ien ㄑㄧㄣ cin chin qin cin chin ch’in ㄑㄧㄤ ciang chiang qiang ciang chiang ch’iang ㄑㄧㄥ cing ching qing cing ching ch’ing ㄑㄩ ciu chyu qu cyu chiu ch’ü ㄑㄩㄝ ciue chyueh que cyue chiue ch’üeh ㄑㄩㄢ ciuen chyueh quan cyuan chiuan ch’üeh ㄑㄩㄣ ciun chyun qun cyun chiuen ch’ün ㄑㄩㄥ ciung chyong qiong cyong chiung ch’üng ㄒㄧ si si xi si shi hsi ㄒㄧㄚ sia sia xia sia shia hsia ㄒㄧㄝ sie sieh xie sie shie hsieh ㄒㄧㄠ siau siao xiao siao shiau hsiao ㄒㄧㄡ siou siou xiu siou shiou hsiu ㄒㄧㄢ sien sian xian sian shian hsien ㄒㄧㄣ sin sin xin sin shin hsin ㄒㄧㄤ siang siang xiang siang shiang hsiang ㄒㄧㄥ sing sing xing sing shing hsing ㄒㄩ siu syu xu syu shiu hsü ㄒㄩㄝ siue syueh xue syue shiue hsüeh ㄒㄩㄢ siuen syuan xuan syuan shiuan hsüan ㄒㄩㄣ siun syun xun syun shiuen hsün ㄒㄩㄥ siung syong xiong syong shiung hsiung ㄓ zhr jhih zhi jhih jr chih ㄓㄚ zha jha zha jha ja cha ㄓㄜ zhe jhe zhe jhe je chê ㄓㄞ zhai jhai zhai jhai jai chai ㄓㄟ zhei jhei zhei jhei jei chei ㄓㄠ zhau jhao zhao jhao jau chao ㄓㄡ zhou jhou zhou jhou jou chou ㄓㄢ zhan jhan zhan jhan jan chan ㄓㄣ zhen jhen zhen jhen jen chên ㄓㄤ zhang jhang zhang jhang jang chang ㄓㄥ zheng jheng zheng jheng jeng chêng ㄓㄨ zhu jhu zhu jhu ju chu ㄓㄨㄚ zhua jhua zhua jhua jua chua ㄓㄨㄛ zhuo jhuo zhuo jhuo juo cho ㄓㄨㄞ zhuai jhuai zhuai jhuai juai chuai ㄓㄨㄟ zhuei jhuei zhui jhuei juei chui ㄓㄨㄢ zhuan jhuan zhuan jhuan juan chuan ㄓㄨㄣ zhun juen zhun jhun juen chun ㄓㄨㄤ zhuang jhuang zhuang jhuang juang chuang ㄓㄨㄥ zhung jhong zhong jhong jung chung ㄔ chr chih chi chih chr ch’ih ㄔㄚ cha cha cha cha cha ch’a ㄔㄜ che che che che che ch’ê ㄔㄞ chai chai chai chai chai ch’ai ㄔㄠ chau chao chao chao chau ch’ao ㄔㄡ chou chou chou chou chou ch’ou ㄔㄢ chan chan chan chan chan ch’an ㄔㄣ chen chen chen chen chen ch’ên ㄔㄤ chang chang chang chang chang ch’ang ㄔㄥ cheng cheng cheng cheng cheng ch’êng ㄔㄨ chu chu chu chu chu ch’u ㄔㄨㄛ chuo chuo chuo chuo chuo ch’o ㄔㄨㄞ chuai chuai chuai chuai chuai ch’uai ㄔㄨㄟ chuei chuei chui chuei chuei ch’ui ㄔㄨㄢ chuan chuan chuan chuan chuan ch’uan ㄔㄨㄣ chun chun chun chun chun ch’un ㄔㄨㄤ chuang chuang chuang chuang chuang ch’uang ㄔㄨㄥ chung chong chong chong chung ch’ung ㄕ shr shih shi shih shr shih ㄕㄚ sha sha sha sha sha sha ㄕㄜ she she she she she shê ㄕㄞ shai shai shai shai shai shai ㄕㄟ shei shei shei shei shei shei ㄕㄠ shau shao shao shao shau shao ㄕㄡ shou shou shou shou shou shou ㄕㄢ shan shan shan shan shan shan ㄕㄣ shen shen shen shen shen shên ㄕㄤ shang shang shang shang shang shang ㄕㄥ sheng sheng sheng sheng sheng shêng ㄕㄨ shu shu shu shu shu shu ㄕㄨㄚ shua shua shua shua shua shua ㄕㄨㄛ shuo shuo shuo shuo shuo shuo ㄕㄨㄞ shuai shuai shuai shuai shuai shuai ㄕㄨㄟ shuei shuei shui shuei shuei shui ㄕㄨㄢ shuan shuan shuan shuan shuan shuan ㄕㄨㄣ shun shun shun shun shuen shun ㄕㄨㄤ shuang shuang shuang shuang shuang shuang ㄖ ri rih ri rih r jih ㄖㄜ re re re re re jê ㄖㄠ rau rao rao rao rau jao ㄖㄡ rou rou rou rou rou jou ㄖㄢ ran ran ran ran ran jan ㄖㄣ ren ren ren ren ren jên ㄖㄤ rang rang rang rang rang jang ㄖㄥ reng reng reng reng reng jêng ㄖㄨ ru ru ru ru ru ju ㄖㄨㄛ ruo ruo ruo ruo ruo jo ㄖㄨㄟ ruei ruei rui ruei ruei jui ㄖㄨㄢ ruan ruan ruan ruan ruan juan ㄖㄨㄣ run run run run ruen jun ㄖㄨㄥ rung rong rong rong rung jung ㄗ zr zih zi zih tz tzu ㄗㄚ za za za za tza tsa ㄗㄜ ze ze ze ze tze tsê ㄗㄞ zai zai zai zai tzai tsai ㄗㄟ zei zei zei zei tzei tsei ㄗㄠ zau zao zao zao tzau tsao ㄗㄡ zou zou zou zou tzou tsou ㄗㄢ zan zan zan zan tzan tsan ㄗㄣ zen zen zen zen tzen tsên ㄗㄤ zang zang zang zang tzang tsang ㄗㄥ zeng zeng zeng zeng tzeng tsêng ㄗㄨ zu zu zu zu tzu tsu ㄗㄨㄛ zuo zuo zuo zuo tzuo tso ㄗㄨㄟ zuei zuei zui zui tzuei tsui ㄗㄨㄢ zuan zuan zuan zuan tzuan tsuan ㄗㄨㄣ zun zun zun zun tzun tsun ㄗㄨㄥ zung zong zong zong tzung tsung ㄘ cr tsih ci cih tsz tz’u ㄘㄚ ca tsa ca ca tsa ts’a ㄘㄜ ce tse ce ce tse ts’ê ㄘㄞ cai tsai cai cai tsai ts’ai ㄘㄠ cau tsao cao cao tsau ts’ao ㄘㄡ cou tsou cou cou tsou ts’ou ㄘㄢ can tsan can can tsan ts’an ㄘㄣ cen tsen cen cen tsen ts’ên ㄘㄤ cang tsang cang cang tsang ts’ang ㄘㄥ ceng tseng ceng ceng tseng ts’êng ㄘㄨ cu tsu cu cu tsu ts’u ㄘㄨㄛ cuo tsuo cuo cuo tsuo ts’o ㄘㄨㄟ cuei tsuei cui cuei tsuei ts’ui ㄘㄨㄢ cuan tsuan cuan cuan tsuan ts’uan ㄘㄨㄣ cun tsun cun cun tsuen ts’un ㄘㄨㄥ cung tsong cong cong tsung ts’ung ㄙ sr sih si sih sz ssu ㄙㄚ sa sa sa sa sa sa ㄙㄜ se se se se se sê ㄙㄞ sai sai sai sai sai sai ㄙㄠ sau sao sao sao sau sao ㄙㄡ sou sou sou sou sou sou ㄙㄢ san san san san san san ㄙㄣ sen sen sen sen sen sên ㄙㄤ sang sang sang sang sang sang ㄙㄥ seng seng seng seng seng sêng ㄙㄨ su su su su su su ㄙㄨㄛ suo suo suo suo suo suo ㄙㄨㄟ suei suei sui suei suei sui ㄙㄨㄢ suan suan suan suan suan suan ㄙㄨㄣ sun sun sun sun suen sun ㄙㄨㄥ sung song song song sung sung ㄚ a a a a a a ㄛ o o o o o o ㄜ e e e e e ê ㄝ ê (ie) eh ê ê ê eh ㄞ ai ai ai ai ai ai ㄟ ei ei ei ei ei ei ㄠ au ao ao ao au ao ㄡ ou ou ou ou ou ou ㄢ an an an an an an ㄣ en en en en en ên ㄤ ang ang ang ang ang ang ㄥ eng eng eng eng eng êng ㄦ er er er er er êrh ㄧ yi yi yi yi yi yi ㄧㄚ ya ya ya ya ya ya ㄧㄛ yo yo yo yo yo yo ㄧㄝ ye (ie) yeh ye ye ye yeh ㄧㄞ yai yai yai yai yai yai ㄧㄠ yau (iau) yao yao yao yau yao ㄧㄡ you (iou) you you you you you ㄧㄢ yen (ien) yan yan yan yan yen ㄧㄣ yin yin yin yin yin yin ㄧㄤ yang (iang) yang yang yang yang yang ㄧㄥ ying ying ying ying ying ying ㄨ wu wu wu wu wu wu ㄨㄚ wa (ua) wa wa wa wa wa ㄨㄛ wo (uo) wo wo wo wo wo ㄨㄞ wai (uai) wai wai wai wai wai ㄨㄟ wei (uei) wei wei wei wei wei ㄨㄢ wan (uan) wan wan wan wan wan ㄨㄣ wen (un) wen wen wen wen wên ㄨㄤ wang (uang) wang wang wang wang wang ㄨㄥ weng (ung) weng weng weng weng wêng ㄩ yu (iu) yu yu yu yu yu ㄩㄝ yue (iue) yueh yue yue yue yüeh ㄩㄢ yuen (iuen) yuan yuan yuan yuan yüen ㄩㄣ yun (iun) yun yun yun yun yün ㄩㄥ yung (iung) yong yong yong yung yung","categories":[{"name":"華語拼音公式改","slug":"華語拼音公式改","permalink":"/categories/華語拼音公式改/"}],"tags":[{"name":"華語拼音公式改","slug":"華語拼音公式改","permalink":"/tags/華語拼音公式改/"}]},{"title":"‘string’ does not name a type","slug":"＆string＊-does-not-name-a-type","date":"2016-04-27T05:40:07.000Z","updated":"2017-10-24T05:24:42.000Z","comments":true,"path":"2016/04/27/＆string＊-does-not-name-a-type/","link":"","permalink":"/2016/04/27/＆string＊-does-not-name-a-type/","excerpt":"","text":"‘string’ does not name a type不是第一次遇到，但還是耽誤一小會，為了不在耽誤時間，所以還是把錯誤寫下‘string’ does not name a type 缺失12#include &lt;string&gt;","categories":[{"name":"cpp","slug":"cpp","permalink":"/categories/cpp/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"/tags/cpp/"}]},{"title":"Hexo GitHub搭建個人博客","slug":"Hexo","date":"2016-03-20T11:49:34.000Z","updated":"2017-05-28T12:43:06.000Z","comments":true,"path":"2016/03/20/Hexo/","link":"","permalink":"/2016/03/20/Hexo/","excerpt":"概況為何使用Hexo呢？Hexo非常強大而且免費開源，作為程式員怎麼能不使用它呢。 環境配置之前我們已經講到，安裝好了Node.js和GitHub了。現在我們就使用Node.js生成靜態頁面吧","text":"概況為何使用Hexo呢？Hexo非常強大而且免費開源，作為程式員怎麼能不使用它呢。 環境配置之前我們已經講到，安裝好了Node.js和GitHub了。現在我們就使用Node.js生成靜態頁面吧 安裝配置Hexo首先在本地的磁盤上新建一個檔案hexo，用來把hexo生成的靜態頁面存放到那裡。然後右鍵打開Git Bush,輸入下面的命令 $ npm install hexo-cli -g本人輸入完之後，發生錯誤，結果網上查了一下，發現有兩種情況。 其一、Node.js版本太低，建議升級。把之前舊版本的Node.js卸載掉，重裝最新版本（本人不是這個問題）； 其二、是因為之前使用命令安裝失敗，結果再次重裝失敗，建議清除緩存，輸入以下命令；1$ npm cache clean 結果成功了 安裝靜態頁面1$ hexo init 安裝依賴包1$ npm install 現在我們已經搭建起本地的hexo博客了，執行以下命令(在D:\\hexo)我的在D盤，然後到遊覽器輸入localhost:4000看看。12$ hexo generate$ hexo server 好了，至此，本地博客已經搭建起來了，只是本地哦，別人看不到的。下麵，我們要部署到Github。 部署編輯_config.yml(在D:\\hexo下)。你在部署時，要把下麵的username都換成你的帳號名。在文件最後插入以下配置1234deploy: type: github repository: https://github.com/username/username.github.io.git branch: master 創建repository創建repository上一節我我已經講過，詳情去看看上一節。比如現在我的GitHub帳號是huanghunred，那麼我應該創建的repository名字應該是huanghunred.github.io千萬要按照這個來命名，獨一無二的，要不然的話，是訪問不了的。 执行下列指令即可完成部署。123deploy:$ hexo generate$ hexo deploy 也可以123deploy:$ hexo g$ hexo d 建議部署前清理一下輸入以下命令12deploy:$ hexo clean 成功，我們的博客已經在GitHub部署起來了，那麼在遊覽器輸入你的域名username.github.io開展你的博客之旅吧。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"/tags/Hexo/"}]},{"title":"使用github page搭建個人博客","slug":"github-page","date":"2016-03-20T05:10:21.000Z","updated":"2017-05-28T12:40:56.000Z","comments":true,"path":"2016/03/20/github-page/","link":"","permalink":"/2016/03/20/github-page/","excerpt":"概況我一直希望搭一個博客，用了新浪博客，網易博客和百度博客後，一直覺得他们的自定義頁面很雞肋。然後最好的自定義博客是網易博客，但是如果現在不登錄去看的話，下面會有個彈框一直提醒註冊，觀看頁面很不友好，而新浪博客很簡潔，我比較喜歡。然後程序員嘛，不斷使用搜索引擎查找問題解決的辦法，一直都是看到別人自己的問題積累下來然後記錄在博客里。然後我在百度和谷歌不斷搜索程序員用的博客是什麼。後來在知乎CDSN百度知道得到各種回答，有博客園，有CDSN，還有自己搭的博客。後來我發現兩種我喜歡的自己的博客，其一是wordpress，這個用php+Mysql來搭的博客，很多免費的主題頁面，也很流行，我自己研究了一會，很喜歡，但是如果要搭建的話，要自己買服務器和域名。然後其二是GitHub Page，這個是使用靜態頁面來管理博客，而且發佈到GitHub上而且還有個免費的二級域名可以用，所以我先用GitHub Page了。","text":"概況我一直希望搭一個博客，用了新浪博客，網易博客和百度博客後，一直覺得他们的自定義頁面很雞肋。然後最好的自定義博客是網易博客，但是如果現在不登錄去看的話，下面會有個彈框一直提醒註冊，觀看頁面很不友好，而新浪博客很簡潔，我比較喜歡。然後程序員嘛，不斷使用搜索引擎查找問題解決的辦法，一直都是看到別人自己的問題積累下來然後記錄在博客里。然後我在百度和谷歌不斷搜索程序員用的博客是什麼。後來在知乎CDSN百度知道得到各種回答，有博客園，有CDSN，還有自己搭的博客。後來我發現兩種我喜歡的自己的博客，其一是wordpress，這個用php+Mysql來搭的博客，很多免費的主題頁面，也很流行，我自己研究了一會，很喜歡，但是如果要搭建的話，要自己買服務器和域名。然後其二是GitHub Page，這個是使用靜態頁面來管理博客，而且發佈到GitHub上而且還有個免費的二級域名可以用，所以我先用GitHub Page了。 1、前提你需要註冊一個GitHub的帐号，並且登錄到github.com。 新用戶直接輸入用戶名郵箱密碼註冊，就用戶就直接登錄 2、安裝準備的軟件依次下载安装。 1、Node.js 本人下載的最新版本是Download v4.4.0 LTS2、Git 進入Downloads選擇最新版本，我選的是Windows版本 一路安裝下去 用cmd命令打開輸入命令 node -v輸入命令 npm -v 3、然後打開GitWin 平臺的操作 1、開始菜單Git bash 2、或者鼠標右鍵打開菜單Git bash（注意:鼠標右鍵打開Git bash需要進入磁盤中才能顯示出來） 配置 SSH keys我們偈使用本地的git項目和遠程的GitHub建立聯繫呢？用SSH keys。首先我們需要檢查你電腦上現有的ssh key： 1$ cd ~/.ssh //检查本机的ssh密钥 如果提示：No such file or directory 說明你是第一次使用git。 生成新的SSH Key：123$ ssh-keygen -t rsa -C \"邮件地址@youremail.com\"Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt; 注意1: 此處的郵箱地址，你可以輸入自己的郵箱地址；注意2: 此處的「-C」的是大寫的「C」。 回車後就提示你輸入git項目的提交密碼，如果直接回車表示無密碼，大家喜歡隨意設定密碼。 最後看到這樣的介面，就成功設置ssh key了： 添加 SSH Key 到 GitHub在本機設置SSH Key之後，需要添加到GitHub上，以完成SSH鏈接的設置。 1、打開本地C:\\Users\\TOSHIBA.ssh\\id_rsa.pub檔(每個人的路徑都是不一樣，查看生成後的路徑是哪裡)。此檔案有可能是隱藏檔案，記住把隱藏都顯示出來，就可以看到。 2、登陸GitHub系統。點擊右上角的View profile and mor—&gt;Settings—&gt;SSH keys—&gt;New SSH key 3、把你本地生成的密鑰複製到裏面（key文本框中）， 點擊 add SSH key 就ok了 測試可以輸入下麵的命令，看看設置是否成功，git@github.com的部分不要修改：1$ ssh -T git@github.com&lt;/code&gt;&lt;/pre&gt; 如果顯示1You've successfully authenticated, but GitHub does not provide shell access. 那麼成功啦╭(′▽`)╯ 3、使用 GitHub Pages 建立博客 與GitHub建立好鏈接之後，就可以方便的使用它提供的Pages服務，GitHub Pages分兩種，一種是你的GitHub用戶名建立的username.github.io這樣的網站，另一種是項目介紹的pages。 想建立個人博客是用的第一種，形如username.github.io這樣的可訪問的站（必須注意的是Create a new repository的時候，一定要是username.github.io的命名，username是你註冊GitHub的用戶名，不要自定義個名字，這樣的話提交到GitHub就訪問不了，我犯過的錯誤，大家要注意），每個用戶名下麵只能建立一個。 新建好了之後，你就得到我的博客倉庫了。 4、後話下一節會講如何把博客部署到GitHub，我使用的是Hexo來弄的。","categories":[{"name":"github page","slug":"github-page","permalink":"/categories/github-page/"}],"tags":[{"name":"github","slug":"github","permalink":"/tags/github/"}]},{"title":"個人簡歷","slug":"resume","date":"2016-03-20T01:02:25.000Z","updated":"2018-02-05T05:06:55.841Z","comments":true,"path":"2016/03/20/resume/","link":"","permalink":"/2016/03/20/resume/","excerpt":"聯繫方式 手機：182** Email：*@gmail.com QQ：** 個人資訊 男/1991 本科/廣州大學/計算機系 工作年限：1年 英語水平：CET-4 514分 技術博客：http://auhanjie.github.io Github: http://github.com/auhanjie 期望職位：Web前端初級程式員，應用架構師 期望城市：廣州、深圳和珠海","text":"聯繫方式 手機：182** Email：*@gmail.com QQ：** 個人資訊 男/1991 本科/廣州大學/計算機系 工作年限：1年 英語水平：CET-4 514分 技術博客：http://auhanjie.github.io Github: http://github.com/auhanjie 期望職位：Web前端初級程式員，應用架構師 期望城市：廣州、深圳和珠海 獲獎證經歷2016-2017 全國大學英語四級攷試514分2016-2017 獲得過校級一等獎學金，并被評為優秀大學生 教育背景2015/09~2017/06，廣州大學 計算機科學與技術專業，獲得學士學位2010/09~2013/06，廣東科學技術職業學院 軟體技術專業，大專畢業 工作經歷2016/09~2016/10 實習生 广州静远科技開發有限公司從事FOXTABLE軟體開發工作，開發能耗統計分析系統，認真完成項目中的每一項任務。2013/07~2014/07 Java軟體開發工程師 易達通網路科技公司從事Linux環境下的Java軟體開發工作，工作期間，認真完成項目中的每一項任務。開發了清遠市信訪前後臺管理系統。2013/02~2013/06 JAVA WEB實習生 珠海聯迪軟體系統有限公司從事Linux環境下的Java軟體開發工作，工作期間，認真完成項目中的每一項任務。 項目經歷網上圖書購物商城frontend backend系統項目畢業設計電子商務模式的網上圖書購物商城前後臺系統，該系統主要功能是網上圖書購物一系列服務，提供一流的一站式解決方案。 广州静远科技開發有限公司 （ 2016年09月 ~ 2016年10月 ）能耗統計分析系統項目在公司實習的這段時間，主要負責能耗統計分析系統的開發，使用的開發軟體是foxtable。要實現的功能包括：負責多個數據表的查詢統計工作，查詢的表有用氣量數據、用水量數據、用電量動力數據、用電量照明數據、用鹽量數據和記錄表等。通過查詢這些表做出每月統計。還有根據開始時間、結束時間和列名進行數據表查詢。重點的開發是做窗口設計，每一個表，都有自己的列的統計圖。還可以列印數據表到EXCEL中去，以及從資料庫中刷新數據表數據。 易達通網路科技公司 （ 2013年07月 ~ 2014年07月 ）廣州銀聯的代收付backend系統該系統主要功能是線上支付、代收付線上支付皆為電子支付的一種形式，為客戶提供高效、安全、便捷的跨境交易結算服務，為各個有境內外資金流動的企業提供一站式解決方案。2014年，我參與了廣州銀聯的代收付back office系統的开发。作为核心程序員，我不但完成了系統權限管理、報表設計的开发工作。 SMS-短信收發backend系統該系統主要功能是SMS是一個集多種短訊業務管理功能於一體的多功能短訊服務運營平臺，具有穩定可靠、模組化、開放性、靈活性等特點。Web SMS系統無需安裝任何軟體，即可於網上輕鬆管理客戶名單及發送短訊，既可加強與客戶的聯繫，又可減低市場推廣及行政上的資源及成本，是最佳的通訊及宣傳工具。2013年，我參與了SMS-短信收發back office系統的开发。作为核心程序員，我不但完成了發送短信界面、调度队列的开发工作，更提出了高效的查詢下拉列表插件，通过人性化提升了操作人員查詢體驗。在该系统上线后，發送短信性能从100多條提升到1000多條。 其他項目 easylink好易聯支付平臺backend系統 LBN易聯通支付平臺backend系統 SMC商戶管理backend系統 珠海聯迪軟體系統有限公司 （ 2013年02月 ~ 2013年06月 ）清遠市信訪前後臺管理系統清遠市信訪前後臺管理系統，該系統主要功能是通過發送信訪為高層決策者提供數據支持，該系統已交付使用。本人實習期間負責簡單的表單增刪改查操作和圖片批量上傳頁面。 技能清單 Web開發：JSP/PHP/Node Web框架：Hibernate/String/StringMvc/Struts2/ThinkPHP 前端框架：Bootstrap/AngularJS/HTML5/Jquery 前端工具：Bower/Gulp/SaSS/LeSS/PhoneGap 數據庫相關：MySQL/Oracle/SQLite 版本管理、文檔和自動化部署工具：Svn/Git 單元測試：PHPUnit/Junit 開源項目和作品 個人評價謙虛、謹慎而富有挑戰精神，希望您能給我一個展示自我的機會。","categories":[],"tags":[{"name":"個人簡歷","slug":"個人簡歷","permalink":"/tags/個人簡歷/"}]}]}